(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    127650,       2836]
NotebookOptionsPosition[    119056,       2653]
NotebookOutlinePosition[    119883,       2680]
CellTagsIndexPosition[    119802,       2675]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["CrossTensorate", "ObjectName",
 CellID->2043962054,ExpressionUUID->"be4f33be-6d13-43f4-920e-83966646a056"],

Cell[TextData[{
 Cell["   ", "ModInfo",ExpressionUUID->"e17574bf-96dd-4e47-8f90-27e8b211c4bf"],
 Cell[BoxData[
  RowBox[{"CrossTensorate", "[", 
   RowBox[{
    StyleBox["f", "TI"], ",", 
    StyleBox["ds", "TI"]}], "]"}]], "InlineFormula",ExpressionUUID->
  "64c4136f-9b0b-436f-9e79-d5ed0aec85cb"],
 "\[LineSeparator]finds the contingency values in the data ",
 Cell[BoxData[
  StyleBox["ds", "TI"]], "InlineFormula",ExpressionUUID->
  "fbe617ed-b1f1-4e4b-959c-4d5fd50158e2"],
 " using the formula ",
 Cell[BoxData[
  StyleBox["f", "TI"]], "InlineFormula",ExpressionUUID->
  "27357c04-15cb-49d2-a901-dcb645b109a7"],
 "."
}], "Usage",
 CellChangeTimes->{
  3.892383268664032*^9, {3.8923843798906918`*^9, 3.892384386966857*^9}, {
   3.892384968542568*^9, 3.892385030995123*^9}},
 CellID->1721824166,ExpressionUUID->"884ea5f2-27fd-4bfc-a73c-d28f553ee49b"],

Cell["\<\
Finds the contingency co-occurrence values for multiple columns of a matrix \
using a formula specification. \
\>", "Notes",
 CellChangeTimes->{{3.892384393342188*^9, 3.892384393985454*^9}},
 CellID->32527234,ExpressionUUID->"12414a90-33e5-46f0-a274-06798fbfb540"],

Cell[TextData[{
 "The first argument is the formula with the form  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    RowBox[{
     ButtonBox["Count",
      BaseStyle->"Link"], " ", "==", " ", 
     RowBox[{
      StyleBox["cn1", "TI"], " ", "+", " ", 
      StyleBox["cn2", "TI"], " ", "+"}]}], " ", "..."}], " "}]], 
  "InlineFormula",ExpressionUUID->"a647451a-7f69-42b3-80fd-0f1bd38cc74b"],
 " or  ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    StyleBox["cn0", "TI"], " ", "==", " ", 
    RowBox[{
     StyleBox["cn1", "TI"], " ", "+", " ", 
     StyleBox["cn2", "TI"], " ", "+"}]}], " ", "..."}]], "InlineFormula",
  ExpressionUUID->"3d06edce-b125-4803-ac48-94aa8dbd2b27"]
}], "Notes",
 CellChangeTimes->{{3.892384381189867*^9, 3.892384438425551*^9}},
 CellID->1436379162,ExpressionUUID->"ac38c714-0142-45da-9917-456b17bd2d94"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CrossTensorate",
   BaseStyle->"Link",
   ButtonData->"paclet:AntonAntonov/DataReshapers/ref/CrossTensorate"]], 
  "InlineFormula",ExpressionUUID->"e4c2d079-493b-4bfd-be02-4b39ec6ed6f7"],
 " is a generalization of ",
 Cell[BoxData[
  ButtonBox["CrossTabulate",
   BaseStyle->"Link",
   ButtonData->"paclet:AntonAntonov/DataReshapers/ref/CrossTabulate"]], 
  "InlineFormula",ExpressionUUID->"a717cd85-605a-48c2-ba56-48a322eb5c3d"],
 "."
}], "Notes",
 CellChangeTimes->{{3.892387606042082*^9, 3.892387636580369*^9}},
 CellID->163653828,ExpressionUUID->"44e0eb20-4ce4-43f1-956b-966eeab7703f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Tech Notes",
 Cell[BoxData[
  TemplateBox[{"TechNotes", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Insert links to related tech notes.", "MoreInfoText"], BaseStyle -> 
       "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "7eda62fe-3248-43bf-b65e-eb36875491e5"]
}], "TechNotesSection",
 CellID->788323860,ExpressionUUID->"43fe0f10-b5cf-4cb9-9095-e2c87681d8dd"],

Cell["XXXX", "Tutorials",
 CellID->1532496677,ExpressionUUID->"df12d7b3-a902-40c1-817d-1633777ca5ec"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Related Links",
 Cell[BoxData[
  TemplateBox[{"RelatedLinks", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related page, including web pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "f379c1af-a14a-4b31-8415-38f75cde6d05"]
}], "RelatedLinksSection",
 CellID->1900271868,ExpressionUUID->"ff9996e6-e733-4adb-ae3c-8f31fa737133"],

Cell[TextData[{
 "Anton Antonov, ",
 ButtonBox["\"Contingency tables creation\[NonBreakingSpace]examples\"",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com/2016/10/04/\
contingency-tables-creation-examples/"], None},
  ButtonNote->
   "https://mathematicaforprediction.wordpress.com/2016/10/04/contingency-\
tables-creation-examples/"],
 ", (2016), ",
 ButtonBox["MathematicaForPrediction at WordPress",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://mathematicaforprediction.wordpress.com"], None},
  ButtonNote->"https://mathematicaforprediction.wordpress.com"],
 "."
}], "ExampleText",
 Editable->True,
 CellChangeTimes->{{3.892372280127548*^9, 3.892372294877383*^9}},
 CellID->569642538,ExpressionUUID->"9937702f-f33e-4677-b817-e3a29d687d2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "See Also",
 Cell[BoxData[
  TemplateBox[{"SeeAlso", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Insert links to any related reference (function) pages.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "6ee25abb-f81c-4570-974c-4f03536fcfa7"]
}], "SeeAlsoSection",
 CellID->831941106,ExpressionUUID->"a46a2836-a85b-4160-830a-caa4bb0fb843"],

Cell[TextData[{
 Cell[BoxData[
  ButtonBox["CrossTabulate",
   BaseStyle->"Link",
   ButtonData->"paclet:AntonAntonov/DataReshapers/ref/CrossTabulate"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},ExpressionUUID->
  "d91bf1c6-4bda-467c-8e49-f12e7df48169"],
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator"],
 Cell[BoxData[
  ButtonBox["CrossTensorateSplit",
   BaseStyle->"Link",
   ButtonData->"paclet:AntonAntonov/DataReshapers/ref/CrossTensorateSplit"]], 
  "InlineSeeAlsoFunction",
  TaggingRules->{"PageType" -> "Function"},
  CellTags->"119342d9-6c36-4cfc-b2f8-8d96b326fc6c",ExpressionUUID->
  "e6029048-9cdf-4a5d-b60a-dd0983ef6767"],
 Cell[BoxData[
  RowBox[{
  Cell[TextData[StyleBox[
   " \[FilledVerySmallSquare] ", "InlineSeparator"]],ExpressionUUID->
    "e2ca8128-73e1-4331-838b-84e2e3b281fe"], 
   DynamicModuleBox[{$CellContext`nbobj$$ = NotebookObject[
    "7e320c23-158d-429a-96b9-e52cf11c2130", 
     "2964624e-001b-4310-a531-e174823c52ef"], $CellContext`cellobj$$ = 
    CellObject[
    "9fd733eb-b116-4a67-8c85-8ce35e62a13e", 
     "fd531bf4-2d2a-4056-bc1f-2eb53812c183"]}, 
    TemplateBox[{
      GraphicsBox[{{
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         CircleBox[{0, 0}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{0, 0.62}, {0, -0.62}}]}, {
         Thickness[0.06], 
         StrokeForm[
          Hue[0.4167, 0.406, 0.502]], 
         LineBox[{{-0.62, 0}, {0.62, 0}}]}}, 
       ImagePadding -> {{1., 1.}, {2.4, 1.}}, ImageSize -> 16, 
       PlotRange -> {{-1.06, 1.06}, {-1.06, 1.06}}, 
       BaselinePosition -> (Center -> 
        Center)], $CellContext`nbobj$$, $CellContext`cellobj$$},
     "InlineListingAddButton"],
    Initialization:>($CellContext`nbobj$$ = 
      EvaluationNotebook[]; $CellContext`cellobj$$ = EvaluationCell[])]}]], 
  "InlineListingAddButton",ExpressionUUID->
  "9fd733eb-b116-4a67-8c85-8ce35e62a13e"]
}], "SeeAlso",
 CellChangeTimes->{{3.892384356537938*^9, 3.892384367798634*^9}, {
  3.8923854510464907`*^9, 3.892385455745307*^9}},
 CellID->168142925,ExpressionUUID->"86226c4a-c917-4236-b98b-8a94c65bdb7c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Guides", "MoreAboutSection",
 CellChangeTimes->{{3.843042374232973*^9, 3.843042375545676*^9}},
 CellID->2037144670,ExpressionUUID->"f8750759-e257-46f2-b6af-ea5dbe73572a"],

Cell[TextData[ButtonBox["Data reshaping functions",
 BaseStyle->"Link",
 ButtonData->
  "paclet:AntonAntonov/DataReshapers/guide/Datareshapingfunctions"]], \
"MoreAbout",
 CellChangeTimes->{{3.89238518356917*^9, 3.892385192614743*^9}},
 CellID->958684569,ExpressionUUID->"07d20dc6-edb7-4148-8cda-6613ff508de5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Examples Initialization",
 Cell[BoxData[
  TemplateBox[{"ExamplesInitialization", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Input that is to be evaluated before any examples are run, e.g. \
Needs[\[Ellipsis]].", "MoreInfoText"], BaseStyle -> "IFrameBox"]], 
     "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "fb695059-39cb-4e3f-9ce8-60d289f6023c"]
}], "ExamplesInitializationSection",
 CellID->41747742,ExpressionUUID->"6c3696d6-f16a-4e33-8683-29f9a547f113"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<AntonAntonov`DataReshapers`\>\"", 
  "]"}]], "ExampleInitialization",
 CellID->1574630872,ExpressionUUID->"3d43f1f7-9f93-49ec-ae78-2814a44176da"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[GridBox[{
    {
     StyleBox[
      RowBox[{"Basic", " ", "Examples"}], "PrimaryExamplesSection"], 
     ButtonBox[
      RowBox[{
       RowBox[{"More", " ", "Examples"}], " ", "\[RightTriangle]"}],
      BaseStyle->"ExtendedExamplesLink",
      ButtonData:>"ExtendedExamples"]}
   }],
  $Line = 0; Null]], "PrimaryExamplesSection",
 CellID->1380083723,ExpressionUUID->"f04b4f57-1d49-4b6c-94c6-916e20ac9770"],

Cell["Here is a random dataset with 300 rows and 3 named columns:", \
"ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.779630000375463*^9, 3.77963002311203*^9}, {
  3.892384807883309*^9, 3.892384813284212*^9}, {3.8923849223214817`*^9, 
  3.892384935076803*^9}},
 CellID->1100634717,ExpressionUUID->"12e036d2-f3b7-45b5-b80a-e72d2f62d531"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "8", "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"ds", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<RandomTabularDataset\>\"", "]"}], 
    "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"300", ",", 
       RowBox[{"Characters", "[", "\"\<ABC\>\"", "]"}]}], "}"}], ",", 
     RowBox[{"\"\<Generators\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"Characters", "[", "\"\<xyz\>\"", "]"}], "}"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ds", "[", 
  RowBox[{"1", ";;", "4"}], "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.778692061930134*^9, 3.778692147722108*^9}, {
   3.778692484712297*^9, 3.7786924957916327`*^9}, {3.778693274679731*^9, 
   3.7786932969871597`*^9}, {3.7786933350601892`*^9, 3.778693385806788*^9}, 
   3.778693887994705*^9, {3.778697362591525*^9, 3.7786974105413933`*^9}, 
   3.7786974577120943`*^9, {3.779625978228725*^9, 3.779626163922296*^9}, {
   3.892384463689845*^9, 3.892384550045896*^9}, {3.892384591263789*^9, 
   3.892384630717733*^9}, {3.892384781572608*^9, 3.892384803676627*^9}},
 CellLabel->"In[48]:=",
 CellID->1858433153,ExpressionUUID->"9302038c-1e21-4f08-af21-8ef64e6e2b48"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|"A" -> "z", "B" -> "x", "C" -> "z"|>, <|
       "A" -> "y", "B" -> "x", "C" -> "y"|>, <|
       "A" -> "x", "B" -> "z", "C" -> "y"|>, <|
       "A" -> "x", "B" -> "x", "C" -> "x"|>}, "AllowEmbedding" -> True, 
     "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "A"} -> 1, {All, "B"} -> 
        1, {All, "C"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "A" -> TypeSystem`PackageScope`AtomShape[33.6], "B" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "C" -> 
            TypeSystem`PackageScope`AtomShape[33.6]|>], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{"A", "B", "C"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["x", "z"]], 
         TypeSystem`Atom[String]}], 4], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "A"} -> 1, {All, "B"} -> 
        1, {All, "C"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "A" -> TypeSystem`PackageScope`AtomShape[33.6], "B" -> 
            TypeSystem`PackageScope`AtomShape[31.5], "C" -> 
            TypeSystem`PackageScope`AtomShape[33.6]|>], 
          DirectedInfinity[1], 3, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{"A", "B", "C"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["x", "z"]], 
         TypeSystem`Atom[String]}], 4], "Path" -> {}, "DisplayedRowCount" -> 
     4, "DisplayedColumnCount" -> 3, "DataRowCount" -> 4, "DataColumnCount" -> 
     3, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["A", 
                  Style[
                  "A", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "A"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "A"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["B", 
                  Style[
                  "B", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "B"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "B"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["C", 
                  Style[
                  "C", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "C"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{All, "C"},
                 "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["B"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["C"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["B"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["C"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["z", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["B"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["y", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["C"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["A"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["B"]}, "Item", False], "Mouse"], 
              ImageSize -> {{31.5, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["x", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["C"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{132., {93.193115234375, 99.806884765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{132., {93.193115234375, 99.806884765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.779626164277834*^9, 3.7800512397035017`*^9, 3.7800525634585238`*^9, 
   3.780054181679751*^9, 3.8923722448050117`*^9, {3.8923845101693277`*^9, 
   3.8923845169684896`*^9}, 3.892384550730278*^9, {3.8923846028104477`*^9, 
   3.892384631137766*^9}, {3.892384787423113*^9, 3.892384803890791*^9}, 
   3.8923848434245043`*^9, 3.892384937671225*^9},
 CellLabel->"Out[50]=",
 CellID->1584851748,ExpressionUUID->"e2232386-0508-4daa-a96d-98cb1325fe5f"]
}, Open  ]],

Cell["Compute the contingency tensor:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.779630026104495*^9, 3.779630037669734*^9}, {
  3.780333606682324*^9, 3.780333610411832*^9}, {3.892384666785324*^9, 
  3.89238466801224*^9}},
 CellID->1712532134,ExpressionUUID->"69ed3157-90d2-409e-af9c-6bbe5eafaf02"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ct", "=", 
  RowBox[{"CrossTensorate", "[", 
   RowBox[{
    RowBox[{"Count", "==", 
     RowBox[{"\"\<A\>\"", "+", "\"\<B\>\"", "+", "\"\<C\>\""}]}], ",", "ds"}],
    "]"}]}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.778692061930134*^9, 3.778692147722108*^9}, {
   3.778692484712297*^9, 3.7786924957916327`*^9}, {3.778693274679731*^9, 
   3.7786932969871597`*^9}, {3.7786933350601892`*^9, 3.778693385806788*^9}, 
   3.778693887994705*^9, {3.778697362591525*^9, 3.7786974105413933`*^9}, 
   3.7786974577120943`*^9, {3.779625978228725*^9, 3.779626125470544*^9}, 
   3.7796261706980333`*^9, {3.892384564232183*^9, 3.89238458564012*^9}, {
   3.892384633554509*^9, 3.892384686439733*^9}},
 CellLabel->"In[46]:=",
 CellID->1069097676,ExpressionUUID->"f2258ed0-1ee1-4928-b901-65be13a62063"],

Cell[BoxData[
 RowBox[{"\[LeftAssociation]", 
  RowBox[{
   RowBox[{"\<\"XTABTensor\"\>", "\[Rule]", 
    InterpretationBox[
     RowBox[{
      TagBox["SparseArray",
       "SummaryHead"], "[", 
      DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
       "Ready"}, 
       TemplateBox[{
         PaneSelectorBox[{False -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxOpener"]], 
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                RasterBox[
                SparseArray[
                 Automatic, {10, 10}, 0.93, {
                  1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                   0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                 0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}], 
               GridBox[{{
                  RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}], True -> GridBox[{{
               PaneBox[
                ButtonBox[
                 DynamicBox[
                  FEPrivate`FrontEndResource[
                  "FEBitmaps", "SummaryBoxCloser"]], 
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                 None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                 "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
               GraphicsBox[
                RasterBox[
                SparseArray[
                 Automatic, {10, 10}, 0.93, {
                  1, {{0, 1, 1, 4, 4, 5, 6, 6, 8, 10, 13}, {{4}, {6}, {7}, {
                    10}, {5}, {9}, {3}, {8}, {5}, {7}, {2}, {3}, {7}}}, {0., 
                   0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.}}], {{0, 
                 0}, {10, 10}}, {0, 1}], Frame -> False, Axes -> False, 
                AspectRatio -> 1, ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], Frame -> True, FrameTicks -> None, 
                FrameStyle -> Directive[
                  Opacity[0.5], 
                  Thickness[Tiny], 
                  RGBColor[0.368417, 0.506779, 0.709798]], 
                FrameLabel -> {None, None}, 
                FrameTicks -> {{None, None}, {None, None}}], 
               GridBox[{{
                  RowBox[{
                    TagBox[
                    "\"Specified elements: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["27", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Dimensions: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox[
                    RowBox[{"{", 
                    RowBox[{"3", ",", "3", ",", "3"}], "}"}], 
                    "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Default: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["0", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Density: \"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["1.`", "SummaryItem"]}]}, {
                  RowBox[{
                    TagBox["\"Elements:\"", "SummaryItemAnnotation"], 
                    "\[InvisibleSpace]", 
                    TagBox["\"\"", "SummaryItem"]}]}, {
                  TagBox[
                   TagBox[
                    GridBox[{{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "2"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "11", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "1", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "15", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2", ",", "1"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "11", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3", ",", "3"}], "}"}], "\[Rule]", 
                    StyleBox[
                    PaneBox[
                    "7", ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False]}]}, {
                    ItemBox[
                    "\"\[VerticalEllipsis]\"", Alignment -> Center, 
                    StripOnInput -> False]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], "SummaryItem"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                GridBoxSpacings -> {
                 "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
                BaseStyle -> {
                 ShowStringCharacters -> False, NumberMarks -> False, 
                  PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             BaselinePosition -> {1, 1}]}, 
          Dynamic[Typeset`open$$], ImageSize -> Automatic]},
        "SummaryPanel"],
       DynamicModuleValues:>{}], "]"}],
     SparseArray[
     Automatic, {3, 3, 3}, 0, {
      1, {{0, 9, 18, 27}, {{3, 2}, {1, 1}, {2, 1}, {3, 3}, {2, 2}, {2, 3}, {3,
         1}, {1, 3}, {1, 2}, {1, 2}, {1, 1}, {1, 3}, {2, 2}, {3, 3}, {2, 1}, {
        3, 1}, {3, 2}, {2, 3}, {1, 3}, {1, 1}, {2, 1}, {1, 2}, {2, 2}, {3, 
        1}, {3, 2}, {2, 3}, {3, 3}}}, {11, 15, 11, 7, 10, 11, 9, 14, 10, 13, 
       14, 19, 16, 5, 4, 13, 10, 7, 13, 8, 9, 9, 12, 14, 11, 14, 11}}],
     Editable->False,
     SelectWithContents->True,
     Selectable->False]}], ",", 
   RowBox[{"\<\"A\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]}], ",", 
   
   RowBox[{"\<\"B\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]}], ",", 
   
   RowBox[{"\<\"C\"\>", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\<\"x\"\>", ",", "\<\"y\"\>", ",", "\<\"z\"\>"}], "}"}]}]}], 
  "\[RightAssociation]"}]], "Output",
 CellChangeTimes->{{3.892384572761271*^9, 3.892384579728478*^9}, {
   3.8923846445618563`*^9, 3.8923846868744993`*^9}, 3.89238484492829*^9},
 CellLabel->"Out[46]=",
 CellID->396119085,ExpressionUUID->"9dbcb9ca-a23c-4565-aeb1-a98ba065a809"]
}, Open  ]],

Cell["Here we show the tensor obtained above:", "ExampleText",
 CellChangeTimes->{{3.892384758709422*^9, 3.892384775674707*^9}, {
  3.892384855695966*^9, 3.892384855762012*^9}},
 CellID->1798279568,ExpressionUUID->"970da828-1fe5-489e-adfc-1b308880c858"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", "ct", "]"}]], "Input",
 CellChangeTimes->{{3.8923846728882017`*^9, 3.892384688993412*^9}},
 CellLabel->"In[47]:=",
 CellID->1350462591,ExpressionUUID->"42352c55-4894-4b7f-a9a0-a657ceb538b2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       StyleBox["\[Null]",
        ShowStringCharacters->False], 
       TagBox["\<\"x\"\>",
        HoldForm], 
       TagBox["\<\"y\"\>",
        HoldForm], 
       TagBox["\<\"z\"\>",
        HoldForm]},
      {
       TagBox["\<\"x\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "15"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "10"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "14"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "11"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "10"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "11"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "9"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "11"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "7"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]},
      {
       TagBox["\<\"y\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "14"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "13"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "19"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "4"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "16"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "7"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "13"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "10"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "5"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]},
      {
       TagBox["\<\"z\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "8"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "9"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "13"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "9"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "12"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "14"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"x\"\>",
             HoldForm], "14"},
           {
            TagBox["\<\"y\"\>",
             HoldForm], "11"},
           {
            TagBox["\<\"z\"\>",
             HoldForm], "11"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{
      "Columns" -> {False, True, {False}, False}, 
       "Rows" -> {False, True, {False}, False}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
   "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 3, 3}, 0, {
     1, {{0, 9, 18, 27}, {{3, 2}, {1, 1}, {2, 1}, {3, 3}, {2, 2}, {2, 3}, {3, 
       1}, {1, 3}, {1, 2}, {1, 2}, {1, 1}, {1, 3}, {2, 2}, {3, 3}, {2, 1}, {3,
        1}, {3, 2}, {2, 3}, {1, 3}, {1, 1}, {2, 1}, {1, 2}, {2, 2}, {3, 1}, {
       3, 2}, {2, 3}, {3, 3}}}, {11, 15, 11, 7, 10, 11, 9, 14, 10, 13, 14, 19,
       16, 5, 4, 13, 10, 7, 13, 8, 9, 9, 12, 14, 11, 14, 11}}], {
    TableHeadings -> {{"x", "y", "z"}, {"x", "y", "z"}, {
       "x", "y", "z"}}}]]]], "Output",
 CellChangeTimes->{3.892384689832425*^9, 3.892384846971787*^9},
 CellLabel->"Out[47]//MatrixForm=",
 CellID->1823271069,ExpressionUUID->"bf855d66-685f-4d72-9b68-a1665e100a41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "More Examples",
 Cell[BoxData[
  TemplateBox[{"MoreExamples", 
    Cell[
     BoxData[
      FrameBox[
       Cell["Extended examples in standardized sections.", "MoreInfoText"], 
       BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "80faa3af-0db2-4220-8339-74f1eb3aaf28"]
}], "ExtendedExamplesSection",
 CellTags->"ExtendedExamples",
 CellID->96261214,ExpressionUUID->"60b78d8f-30c5-4da0-9108-fb8878657690"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Scope", "ExampleSection",ExpressionUUID->
   "3d349be7-8234-4a0e-b17c-0a9edef6958c"],
  $Line = 0; Null]], "ExampleSection",
 CellID->807037507,ExpressionUUID->"cc1c04b0-4585-430d-a941-9f8d067dee9a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Generalizations & Extensions", "ExampleSection",ExpressionUUID->
   "d9e361bb-ab10-407a-9e9c-eb681ce17ba3"],
  $Line = 0; Null]], "ExampleSection",
 CellID->372665697,ExpressionUUID->"56f97dde-209a-4076-b7cf-bd849e6adf66"],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Options", "ExampleSection",ExpressionUUID->
   "e262eeb9-ec15-4b99-8704-c8e8b6960961"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1330054827,ExpressionUUID->"b25ab613-55b8-47d5-ae8e-64153aa6a7c1"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "4c67941a-724f-43bf-aaea-1bc00e1118ec"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->1074195766,ExpressionUUID->"373c1a1c-0c5d-4c99-b9a8-2b991666fc4e"],

Cell[BoxData[
 InterpretationBox[Cell[
  "XXXX", "ExampleSubsection",ExpressionUUID->
   "2808bb8e-6387-43fe-bd33-e7a371afb018"],
  $Line = 0; Null]], "ExampleSubsection",
 CellID->113218833,ExpressionUUID->"7a885a7b-50fe-4cbb-a092-3fe0df93518b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell[
  "Applications", "ExampleSection",ExpressionUUID->
   "4a8c110a-c66f-4349-b8be-2d5a9f7fe43e"],
  $Line = 0; Null]], "ExampleSection",
 CellID->198414989,ExpressionUUID->"12ad7057-9820-49af-92cf-7967fa53f801"],

Cell["Here is a dataset of the Titanic data:", "ExampleText",
 CellChangeTimes->{{3.89238523310113*^9, 3.8923852485835743`*^9}},
 CellID->1950215723,ExpressionUUID->"7d59fd55-5cdd-470f-a9bd-7ee495760b14"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"dsTitanic", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<ExampleDataset\>\"", "]"}], "[", 
    RowBox[{"{", 
     RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"dsTitanic", "[", 
  RowBox[{"1", ";;", 
   RowBox[{"-", "1"}], ";;", "400"}], "]"}]}], "Input",
 CellChangeTimes->{{3.892385251488248*^9, 3.8923852970931187`*^9}},
 CellLabel->"In[53]:=",
 CellID->862124083,ExpressionUUID->"c00a73d6-2aa0-4681-801c-c87f323af885"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {<|
       "passenger class" -> "1st", "passenger age" -> 29., "passenger sex" -> 
        "female", "passenger survival" -> "survived"|>, <|
       "passenger class" -> "2nd", "passenger age" -> 34., "passenger sex" -> 
        "female", "passenger survival" -> "survived"|>, <|
       "passenger class" -> "3rd", "passenger age" -> Missing[], 
        "passenger sex" -> "female", "passenger survival" -> "died"|>, <|
       "passenger class" -> "3rd", "passenger age" -> Missing[], 
        "passenger sex" -> "male", "passenger survival" -> "died"|>}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "passenger class"} -> 
        1, {All, "passenger age"} -> 1, {All, "passenger sex"} -> 
        1, {All, "passenger survival"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "passenger class" -> TypeSystem`PackageScope`AtomShape[33.6], 
            "passenger age" -> TypeSystem`PackageScope`AtomShape[60], 
            "passenger sex" -> TypeSystem`PackageScope`AtomShape[63.], 
            "passenger survival" -> TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 4, {All}]], 4, 
        DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "passenger class", "passenger age", "passenger sex", 
         "passenger survival"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]]}], 4], "Meta" -> <||>, 
     "RowTarget" -> 20, "ColumnTarget" -> 10, "Shape" -> 
     TypeSystem`PackageScope`HeaderShape[<|{All, "passenger class"} -> 
        1, {All, "passenger age"} -> 1, {All, "passenger sex"} -> 
        1, {All, "passenger survival"} -> 1|>, 
       TypeSystem`PackageScope`Limited[
        TypeSystem`PackageScope`ColumnShape[
         TypeSystem`PackageScope`Limited[
          
          TypeSystem`PackageScope`RowShape[<|
           "passenger class" -> TypeSystem`PackageScope`AtomShape[33.6], 
            "passenger age" -> TypeSystem`PackageScope`AtomShape[60], 
            "passenger sex" -> TypeSystem`PackageScope`AtomShape[63.], 
            "passenger survival" -> TypeSystem`PackageScope`AtomShape[84.]|>], 
          DirectedInfinity[1], 4, {All}]], 4, 
        DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
       TypeSystem`Struct[{
        "passenger class", "passenger age", "passenger sex", 
         "passenger survival"}, {
         TypeSystem`Atom[String], 
         TypeSystem`Atom[Real], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["female", "male"]], 
         TypeSystem`Atom[
          TypeSystem`Enumeration["died", "survived"]]}], 4], "Path" -> {}, 
     "DisplayedRowCount" -> 4, "DisplayedColumnCount" -> 4, "DataRowCount" -> 
     4, "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
     "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
    TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{
     TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger class", 
                  Style[
                  "passenger class", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger class"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger class"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger age", 
                  Style[
                  "passenger age", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger age"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger age"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger sex", 
                  Style[
                  "passenger sex", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger sex"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger sex"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}], 
            Item[
             Pane[
              Annotation[
               EventHandler[
                MouseAppearance[
                 Mouseover["passenger survival", 
                  Style[
                  "passenger survival", FontColor -> 
                   RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                If[
                  TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                  TypeSystem`NestedGrid`PackagePrivate`updateState[
                  TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                   All, "passenger survival"}, 1]]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                All, "passenger survival"}, "ColumnHeader", True], "Mouse"], 
              ImageSize -> {{1, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
             GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
            Item[
             Pane[
              Annotation["1st", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["29.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["2nd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["34.0"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["survived", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["female", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["died", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation["3rd", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger class"]}, "Item", False], "Mouse"], 
              ImageSize -> {{33.6, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               Style["\[LongDash]", 
                GrayLevel[0.75]], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger age"]}, "Item", False], "Mouse"], 
              ImageSize -> {{60, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["male", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger sex"]}, "Item", False], "Mouse"], 
              ImageSize -> {{63., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation["died", 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 
                 Key["passenger survival"]}, "Item", False], "Mouse"], 
              ImageSize -> {{84., Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{501., {93.193115234375, 99.806884765625}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{501., {93.193115234375, 99.806884765625}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8923852774079933`*^9, 3.8923852976727543`*^9}},
 CellLabel->"Out[54]=",
 CellID->1524691722,ExpressionUUID->"ef7d20a1-6730-4794-ad31-5d27b5bab1fb"]
}, Open  ]],

Cell["Here is summary:", "ExampleText",
 CellChangeTimes->{{3.8923853014789333`*^9, 3.892385304247514*^9}},
 CellID->1718895650,ExpressionUUID->"4c43e02a-da1c-4539-be04-6a407b922a50"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"RecordsSummary", "[", "dsTitanic", "]"}]], "Input",
 CellChangeTimes->{{3.8923853058344603`*^9, 3.8923853132726316`*^9}},
 CellLabel->"In[55]:=",
 CellID->926715175,ExpressionUUID->"74ae3bf6-45db-41fa-b075-3ca48f3403a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 passenger class\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"3rd\"\>", "709"},
          {"\<\"1st\"\>", "323"},
          {"\<\"2nd\"\>", "277"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 passenger age\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "0.1667`"},
          {"\<\"1st Qu\"\>", "21.`"},
          {"\<\"Median\"\>", "28.`"},
          {"\<\"Mean\"\>", "29.8811345124283`"},
          {"\<\"3rd Qu\"\>", "39.`"},
          {"\<\"Max\"\>", "80.`"},
          {"\<\"Missing[___]\"\>", "263"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 passenger sex\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"male\"\>", "843"},
          {"\<\"female\"\>", "466"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 passenger survival\"\>",
        StripOnInput->False,
        LineColor->RGBColor[0, 0, 1],
        FrontFaceColor->RGBColor[0, 0, 1],
        BackFaceColor->RGBColor[0, 0, 1],
        GraphicsColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"died\"\>", "809"},
          {"\<\"survived\"\>", "500"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output",
 CellChangeTimes->{3.892385313645203*^9},
 CellLabel->"Out[55]=",
 CellID->216886677,ExpressionUUID->"c798106e-7aa4-4380-b3d4-46f7e8738549"]
}, Open  ]],

Cell["\<\
Here are the contingency values of passenger class, sex, and survival:\
\>", "ExampleText",
 CellChangeTimes->{{3.892385316486998*^9, 3.89238534536685*^9}, {
  3.892385413318055*^9, 3.8923854137224483`*^9}},
 CellID->934631380,ExpressionUUID->"b1e2996d-db0d-4667-a71c-8ce3574d99a1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "@", 
  RowBox[{"CrossTensorate", "[", 
   RowBox[{
    RowBox[{"Count", "==", 
     RowBox[{
     "\"\<passenger class\>\"", "+", "\"\<passenger sex\>\"", "+", 
      "\"\<passenger survival\>\""}]}], ",", "dsTitanic"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.89238534716973*^9, 3.892385406634725*^9}},
 CellLabel->"In[60]:=",
 CellID->1925392878,ExpressionUUID->"1714f645-6636-4d77-a41f-ecc6cccce1a2"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", 
   TagBox[GridBox[{
      {
       StyleBox["\[Null]",
        ShowStringCharacters->False], 
       TagBox["\<\"female\"\>",
        HoldForm], 
       TagBox["\<\"male\"\>",
        HoldForm]},
      {
       TagBox["\<\"1st\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "5"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "139"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "118"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "61"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]},
      {
       TagBox["\<\"2nd\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "12"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "94"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "146"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "25"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]},
      {
       TagBox["\<\"3rd\"\>",
        HoldForm], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "110"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "106"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}], 
       RowBox[{"(", "\[NoBreak]", 
        TagBox[GridBox[{
           {
            TagBox["\<\"died\"\>",
             HoldForm], "418"},
           {
            TagBox["\<\"survived\"\>",
             HoldForm], "75"}
          },
          GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
          
          
          GridBoxDividers->{
           "Columns" -> {False, {True}, False}, "Rows" -> {{False}}},
          GridBoxSpacings->{"Columns" -> {
              Offset[0.27999999999999997`], {
               Offset[0.5599999999999999]}, 
              Offset[0.27999999999999997`]}, "Rows" -> {
              Offset[0.2], {
               Offset[0.4]}, 
              Offset[0.2]}}],
         OutputFormsDump`HeadedColumn], "\[NoBreak]", ")"}]}
     },
     GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{
      "Columns" -> {False, True, {False}, False}, 
       "Rows" -> {False, True, {False}, False}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.7]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}], 
   "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[
   SparseArray[
    Automatic, {3, 2, 2}, 0, {
     1, {{0, 4, 8, 12}, {{1, 2}, {2, 2}, {1, 1}, {2, 1}, {2, 1}, {1, 2}, {2, 
       2}, {1, 1}, {2, 1}, {1, 2}, {2, 2}, {1, 1}}}, {139, 61, 5, 118, 146, 
      94, 25, 12, 418, 106, 75, 110}}], {
    TableHeadings -> {{"1st", "2nd", "3rd"}, {"female", "male"}, {
       "died", "survived"}}}]]]], "Output",
 CellChangeTimes->{{3.8923853896610003`*^9, 3.892385406964292*^9}},
 CellLabel->"Out[60]//MatrixForm=",
 CellID->2074886238,ExpressionUUID->"e6fb542a-85aa-4d19-8ea9-3c04ed059100"]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 InterpretationBox[Cell[
  "Properties & Relations", "ExampleSection",ExpressionUUID->
   "aae3f768-02c5-4ebc-aad1-6743f3e87bf1"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1866099979,ExpressionUUID->"34746993-8a4d-4be2-a6a3-03f581b65bb6"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Possible Issues", "ExampleSection",ExpressionUUID->
   "76cace5e-26af-490a-8ee6-e13fda8ad8d6"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1691166265,ExpressionUUID->"3161ba7c-3291-47ef-8d4d-b234c333e57a"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Interactive Examples", "ExampleSection",ExpressionUUID->
   "f47d0b4a-16ea-4a78-a12b-17a929b0c6e3"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1485347810,ExpressionUUID->"2d056b6f-7fc7-4a08-93a6-0ed77a385bf5"],

Cell[BoxData[
 InterpretationBox[Cell[
  "Neat Examples", "ExampleSection",ExpressionUUID->
   "eeead88a-e1dd-458f-96cf-28866882ed3a"],
  $Line = 0; Null]], "ExampleSection",
 CellID->1890729942,ExpressionUUID->"5b563fd6-65ba-4e29-8ba8-200bf9cb8fd2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Metadata", "MetadataSection",
 CellID->1182610535,ExpressionUUID->"ab015433-6b43-45bc-8092-c8422f17dfd3"],

Cell[TextData[{
 "New in: ",
 Cell["1.0.0", "HistoryData",
  CellTags->"New",ExpressionUUID->"4af13548-436d-4eb5-8f38-20f2bc59cbd1"],
 " | Modified in: ",
 Cell[" ", "HistoryData",
  CellTags->"Modified",ExpressionUUID->"ec590fa1-0ba8-4bb0-9e5e-1227c0d0bdda"],
 " | Obsolete in: ",
 Cell[" ", "HistoryData",
  CellTags->"Obsolete",ExpressionUUID->
  "0e77605e-f1a1-42e4-a5a3-fa7eee208ddf"]
}], "History",
 CellChangeTimes->{{3.864923683926749*^9, 3.864923685610183*^9}, {
  3.892384831300292*^9, 3.892384832251511*^9}},
 CellID->1174108760,ExpressionUUID->"f10cf482-d1f7-48fe-ba79-d56286471e3c"],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorization",
 Cell[BoxData[
  TemplateBox[{"Metadata", 
    Cell[
     BoxData[
      FrameBox[
       Cell[
       "Metadata such as page URI, context, and type of documentation page.", 
        "MoreInfoText"], BaseStyle -> "IFrameBox"]], "MoreInfoTextOuter"]},
   "MoreInfoOpenerButtonTemplate"]],ExpressionUUID->
  "07f34ce5-1c0c-4203-bfa3-5a61853fe5f1"]
}], "CategorizationSection",
 CellID->18697037,ExpressionUUID->"8237d9d5-7df6-4f04-a54f-bb4e09123a63"],

Cell["Symbol", "Categorization",
 CellLabel->"Entity Type",
 CellID->708488397,ExpressionUUID->"e81ca1b2-c662-4754-a079-949725833637"],

Cell["AntonAntonov/DataReshapers", "Categorization",
 CellLabel->"Paclet Name",
 CellID->272645196,ExpressionUUID->"da1140c1-33c9-4c7e-9b9b-f0ce14fda311"],

Cell["AntonAntonov`DataReshapers`", "Categorization",
 CellLabel->"Context",
 CellID->1765190121,ExpressionUUID->"a91a6b76-3b3c-42ce-9c29-f58806cf269f"],

Cell["AntonAntonov/DataReshapers/ref/CrossTensorate", "Categorization",
 CellLabel->"URI",
 CellID->63780342,ExpressionUUID->"f39eb228-d9e6-4a82-87cb-80b6e6459ded"]
}, Closed]],

Cell[CellGroupData[{

Cell["Keywords", "KeywordsSection",
 CellID->1611220714,ExpressionUUID->"67fbb762-3d7e-4a44-b505-dac671a71f3a"],

Cell["XXXX", "Keywords",
 CellID->17751528,ExpressionUUID->"d7057967-63ad-4ce9-8261-0ea450cbe7e4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Syntax Templates", "TemplatesSection",
 CellID->1997187810,ExpressionUUID->"44d1c44a-2c15-4882-b5e6-6664925bfee6"],

Cell[BoxData[""], "Template",
 CellLabel->"Additional Function Template",
 CellID->1566120060,ExpressionUUID->"79032271-bf94-494b-9b81-b2909e2c0d07"],

Cell[BoxData[""], "Template",
 CellLabel->"Arguments Pattern",
 CellID->72787141,ExpressionUUID->"477c76e6-9a4d-4736-90d5-251c3264faf1"],

Cell[BoxData[""], "Template",
 CellLabel->"Local Variables",
 CellID->1415283644,ExpressionUUID->"3c570161-7f20-4c28-a32a-aaabb49a0f78"],

Cell[BoxData[""], "Template",
 CellLabel->"Color Equal Signs",
 CellID->1143330536,ExpressionUUID->"eff70e74-f1e1-4835-8f0c-796ed3783455"]
}, Closed]]
}, Open  ]]
},
WindowSize->{1268, 1002},
WindowMargins->{{Automatic, 1027}, {Automatic, 54}},
TaggingRules-><|"Paclet" -> "AntonAntonov/DataReshapers"|>,
CellContext->"Global`",
Magnification:>1.25 Inherited,
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->FrontEnd`FileName[{"Wolfram"}, "FunctionPageStylesExt.nb", 
  CharacterEncoding -> "UTF-8"],
ExpressionUUID->"7e320c23-158d-429a-96b9-e52cf11c2130"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "ExtendedExamples"->{
  Cell[64405, 1450, 486, 13, 72, "ExtendedExamplesSection",ExpressionUUID->"60b78d8f-30c5-4da0-9108-fb8878657690",
   CellTags->"ExtendedExamples",
   CellID->96261214]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"ExtendedExamples", 119608, 2668}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 112, 1, 92, "ObjectName",ExpressionUUID->"be4f33be-6d13-43f4-920e-83966646a056",
 CellID->2043962054],
Cell[695, 25, 853, 21, 99, "Usage",ExpressionUUID->"884ea5f2-27fd-4bfc-a73c-d28f553ee49b",
 CellID->1721824166],
Cell[1551, 48, 274, 5, 33, "Notes",ExpressionUUID->"12414a90-33e5-46f0-a274-06798fbfb540",
 CellID->32527234],
Cell[1828, 55, 823, 23, 34, "Notes",ExpressionUUID->"ac38c714-0142-45da-9917-456b17bd2d94",
 CellID->1436379162],
Cell[2654, 80, 633, 15, 34, "Notes",ExpressionUUID->"44e0eb20-4ce4-43f1-956b-966eeab7703f",
 CellID->163653828]
}, Open  ]],
Cell[CellGroupData[{
Cell[3324, 100, 435, 12, 51, "TechNotesSection",ExpressionUUID->"43fe0f10-b5cf-4cb9-9095-e2c87681d8dd",
 CellID->788323860],
Cell[3762, 114, 101, 1, 24, "Tutorials",ExpressionUUID->"df12d7b3-a902-40c1-817d-1633777ca5ec",
 CellID->1532496677]
}, Open  ]],
Cell[CellGroupData[{
Cell[3900, 120, 473, 13, 50, "RelatedLinksSection",ExpressionUUID->"ff9996e6-e733-4adb-ae3c-8f31fa737133",
 CellID->1900271868],
Cell[4376, 135, 809, 20, 30, "ExampleText",ExpressionUUID->"9937702f-f33e-4677-b817-e3a29d687d2a",
 CellID->569642538]
}, Open  ]],
Cell[CellGroupData[{
Cell[5222, 160, 458, 13, 50, "SeeAlsoSection",ExpressionUUID->"a46a2836-a85b-4160-830a-caa4bb0fb843",
 CellID->831941106],
Cell[5683, 175, 2222, 54, 30, "SeeAlso",ExpressionUUID->"86226c4a-c917-4236-b98b-8a94c65bdb7c",
 CellID->168142925]
}, Open  ]],
Cell[CellGroupData[{
Cell[7942, 234, 184, 2, 50, "MoreAboutSection",ExpressionUUID->"f8750759-e257-46f2-b6af-ea5dbe73572a",
 CellID->2037144670],
Cell[8129, 238, 310, 6, 24, "MoreAbout",ExpressionUUID->"07d20dc6-edb7-4148-8cda-6613ff508de5",
 CellID->958684569]
}, Open  ]],
Cell[CellGroupData[{
Cell[8476, 249, 529, 14, 87, "ExamplesInitializationSection",ExpressionUUID->"6c3696d6-f16a-4e33-8683-29f9a547f113",
 CellID->41747742],
Cell[9008, 265, 187, 3, 57, "ExampleInitialization",ExpressionUUID->"3d43f1f7-9f93-49ec-ae78-2814a44176da",
 CellID->1574630872]
}, Open  ]],
Cell[CellGroupData[{
Cell[9232, 273, 443, 12, 90, "PrimaryExamplesSection",ExpressionUUID->"f04b4f57-1d49-4b6c-94c6-916e20ac9770",
 CellID->1380083723],
Cell[9678, 287, 344, 6, 30, "ExampleText",ExpressionUUID->"12e036d2-f3b7-45b5-b80a-e72d2f62d531",
 CellID->1100634717],
Cell[CellGroupData[{
Cell[10047, 297, 1226, 27, 106, "Input",ExpressionUUID->"9302038c-1e21-4f08-af21-8ef64e6e2b48",
 CellID->1858433153],
Cell[11276, 326, 31729, 583, 208, "Output",ExpressionUUID->"e2232386-0508-4daa-a96d-98cb1325fe5f",
 CellID->1584851748]
}, Open  ]],
Cell[43020, 912, 312, 5, 30, "ExampleText",ExpressionUUID->"69ed3157-90d2-409e-af9c-6bbe5eafaf02",
 CellID->1712532134],
Cell[CellGroupData[{
Cell[43357, 921, 834, 16, 33, "Input",ExpressionUUID->"f2258ed0-1ee1-4928-b901-65be13a62063",
 CellID->1069097676],
Cell[44194, 939, 10346, 215, 105, "Output",ExpressionUUID->"9dbcb9ca-a23c-4565-aeb1-a98ba065a809",
 CellID->396119085]
}, Open  ]],
Cell[54555, 1157, 253, 3, 30, "ExampleText",ExpressionUUID->"970da828-1fe5-489e-adfc-1b308880c858",
 CellID->1798279568],
Cell[CellGroupData[{
Cell[54833, 1164, 232, 4, 33, "Input",ExpressionUUID->"42352c55-4894-4b7f-a9a0-a657ceb538b2",
 CellID->1350462591],
Cell[55068, 1170, 9288, 274, 214, "Output",ExpressionUUID->"bf855d66-685f-4d72-9b68-a1665e100a41",
 CellID->1823271069]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[64405, 1450, 486, 13, 72, "ExtendedExamplesSection",ExpressionUUID->"60b78d8f-30c5-4da0-9108-fb8878657690",
 CellTags->"ExtendedExamples",
 CellID->96261214],
Cell[64894, 1465, 241, 5, 43, "ExampleSection",ExpressionUUID->"cc1c04b0-4585-430d-a941-9f8d067dee9a",
 CellID->807037507],
Cell[65138, 1472, 264, 5, 27, "ExampleSection",ExpressionUUID->"56f97dde-209a-4076-b7cf-bd849e6adf66",
 CellID->372665697],
Cell[CellGroupData[{
Cell[65427, 1481, 244, 5, 27, "ExampleSection",ExpressionUUID->"b25ab613-55b8-47d5-ae8e-64153aa6a7c1",
 CellID->1330054827],
Cell[65674, 1488, 247, 5, 32, "ExampleSubsection",ExpressionUUID->"373c1a1c-0c5d-4c99-b9a8-2b991666fc4e",
 CellID->1074195766],
Cell[65924, 1495, 246, 5, 26, "ExampleSubsection",ExpressionUUID->"7a885a7b-50fe-4cbb-a092-3fe0df93518b",
 CellID->113218833]
}, Open  ]],
Cell[CellGroupData[{
Cell[66207, 1505, 248, 5, 43, "ExampleSection",ExpressionUUID->"12ad7057-9820-49af-92cf-7967fa53f801",
 CellID->198414989],
Cell[66458, 1512, 204, 2, 30, "ExampleText",ExpressionUUID->"7d59fd55-5cdd-470f-a9bd-7ee495760b14",
 CellID->1950215723],
Cell[CellGroupData[{
Cell[66687, 1518, 550, 13, 82, "Input",ExpressionUUID->"c00a73d6-2aa0-4681-801c-c87f323af885",
 CellID->862124083],
Cell[67240, 1533, 36710, 672, 208, "Output",ExpressionUUID->"ef7d20a1-6730-4794-ad31-5d27b5bab1fb",
 CellID->1524691722]
}, Open  ]],
Cell[103965, 2208, 183, 2, 30, "ExampleText",ExpressionUUID->"4c43e02a-da1c-4539-be04-6a407b922a50",
 CellID->1718895650],
Cell[CellGroupData[{
Cell[104173, 2214, 244, 4, 33, "Input",ExpressionUUID->"74ae3bf6-45db-41fa-b075-3ca48f3403a7",
 CellID->926715175],
Cell[104420, 2220, 3748, 111, 176, "Output",ExpressionUUID->"c798106e-7aa4-4380-b3d4-46f7e8738549",
 CellID->216886677]
}, Open  ]],
Cell[108183, 2334, 292, 5, 30, "ExampleText",ExpressionUUID->"b1e2996d-db0d-4667-a71c-8ce3574d99a1",
 CellID->934631380],
Cell[CellGroupData[{
Cell[108500, 2343, 444, 11, 106, "Input",ExpressionUUID->"1714f645-6636-4d77-a41f-ecc6cccce1a2",
 CellID->1925392878],
Cell[108947, 2356, 6180, 177, 160, "Output",ExpressionUUID->"e6fb542a-85aa-4d19-8ea9-3c04ed059100",
 CellID->2074886238]
}, Open  ]]
}, Open  ]],
Cell[115154, 2537, 259, 5, 43, "ExampleSection",ExpressionUUID->"34746993-8a4d-4be2-a6a3-03f581b65bb6",
 CellID->1866099979],
Cell[115416, 2544, 252, 5, 27, "ExampleSection",ExpressionUUID->"3161ba7c-3291-47ef-8d4d-b234c333e57a",
 CellID->1691166265],
Cell[115671, 2551, 257, 5, 27, "ExampleSection",ExpressionUUID->"2d056b6f-7fc7-4a08-93a6-0ed77a385bf5",
 CellID->1485347810],
Cell[115931, 2558, 250, 5, 27, "ExampleSection",ExpressionUUID->"5b563fd6-65ba-4e29-8ba8-200bf9cb8fd2",
 CellID->1890729942]
}, Open  ]],
Cell[CellGroupData[{
Cell[116218, 2568, 111, 1, 90, "MetadataSection",ExpressionUUID->"ab015433-6b43-45bc-8092-c8422f17dfd3",
 CellID->1182610535],
Cell[116332, 2571, 595, 14, 33, "History",ExpressionUUID->"f10cf482-d1f7-48fe-ba79-d56286471e3c",
 CellID->1174108760],
Cell[CellGroupData[{
Cell[116952, 2589, 483, 13, 27, "CategorizationSection",ExpressionUUID->"8237d9d5-7df6-4f04-a54f-bb4e09123a63",
 CellID->18697037],
Cell[117438, 2604, 134, 2, 43, "Categorization",ExpressionUUID->"e81ca1b2-c662-4754-a079-949725833637",
 CellID->708488397],
Cell[117575, 2608, 154, 2, 43, "Categorization",ExpressionUUID->"da1140c1-33c9-4c7e-9b9b-f0ce14fda311",
 CellID->272645196],
Cell[117732, 2612, 152, 2, 43, "Categorization",ExpressionUUID->"a91a6b76-3b3c-42ce-9c29-f58806cf269f",
 CellID->1765190121],
Cell[117887, 2616, 164, 2, 43, "Categorization",ExpressionUUID->"f39eb228-d9e6-4a82-87cb-80b6e6459ded",
 CellID->63780342]
}, Closed]],
Cell[CellGroupData[{
Cell[118088, 2623, 111, 1, 26, "KeywordsSection",ExpressionUUID->"67fbb762-3d7e-4a44-b505-dac671a71f3a",
 CellID->1611220714],
Cell[118202, 2626, 98, 1, 87, "Keywords",ExpressionUUID->"d7057967-63ad-4ce9-8261-0ea450cbe7e4",
 CellID->17751528]
}, Closed]],
Cell[CellGroupData[{
Cell[118337, 2632, 120, 1, 26, "TemplatesSection",ExpressionUUID->"44d1c44a-2c15-4882-b5e6-6664925bfee6",
 CellID->1997187810],
Cell[118460, 2635, 149, 2, 87, "Template",ExpressionUUID->"79032271-bf94-494b-9b81-b2909e2c0d07",
 CellID->1566120060],
Cell[118612, 2639, 136, 2, 87, "Template",ExpressionUUID->"477c76e6-9a4d-4736-90d5-251c3264faf1",
 CellID->72787141],
Cell[118751, 2643, 136, 2, 87, "Template",ExpressionUUID->"3c570161-7f20-4c28-a32a-aaabb49a0f78",
 CellID->1415283644],
Cell[118890, 2647, 138, 2, 87, "Template",ExpressionUUID->"eff70e74-f1e1-4835-8f0c-796ed3783455",
 CellID->1143330536]
}, Closed]]
}, Open  ]]
}
]
*)

