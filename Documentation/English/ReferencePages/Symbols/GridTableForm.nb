(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    375212,       8264]
NotebookOptionsPosition[    339268,       7571]
NotebookOutlinePosition[    359209,       7973]
CellTagsIndexPosition[    359137,       7968]
WindowTitle->GridTableForm
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{8},
           "Spacer1"], Cell["PACLETIZED RESOURCEFUNCTION",
           Editable->False,
           CellFrameMargins->{{25, Automatic}, {10, 10}},
           FontFamily->"Source Sans Pro",
           FontSize->12,
           FontTracking->"Plain",
           FontColor->GrayLevel[1]], 
          TemplateBox[{8},
           "Spacer1"]}]]],
        Background->RGBColor[0, 0, 
          Rational[2, 3]],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->False], {"PacletizedResourceFunctions1":>
        Documentation`HelpLookup[
        "paclet:PacletizedResourceFunctions1/ReferencePages/Guides/\
PacletizedResourceFunctions1"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"GuideFunction"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]]]
         }]],
         StripOnInput->
          False], {"\<\"paclet:PacletizedResourceFunctions1/ReferencePages/\
Symbols/GridTableForm\"\>":>
        None, "\<\"Copy Wolfram Documentation Center URL\"\>":>
        CopyToClipboard[
        "paclet:PacletizedResourceFunctions1/ReferencePages/Symbols/\
GridTableForm"], Delimiter, "\<\"Copy web URL\"\>":>CopyToClipboard[
        "https://resources.wolframcloud.com/FunctionRepository/resources/\
8b78d59f-21a1-4221-bb06-2887d1571d94/"], "\<\"Go to web URL\"\>":>
        NotebookLocate[{
          URL[
          "https://resources.wolframcloud.com/FunctionRepository/resources/\
8b78d59f-21a1-4221-bb06-2887d1571d94/"], None}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0}]
    }],
     Editable->False,
     CellMargins->{{8, 24}, {20, 4}},
     TextAlignment->Right,
     FontFamily->"Verdana",
     FontSize->11,
     FrameBoxOptions->{
     BaseStyle->{
      FontFamily -> "Source Sans Pro", FontSize -> 14, FontColor -> 
       RGBColor[0.85098, 0.396078, 0.], Background -> None, 
       FrameBoxOptions -> {FrameStyle -> {
           GrayLevel[1]}}},
     FrameMargins->{{4, 4}, {3, 2}}},
     PopupMenuBoxOptions->{BaseStyle->{FontSize -> 9}}]}
  }]],
 Editable->False,
 ShowCellBracket->False,
 CellMargins->{{24, 4}, {26, -2}},
 Deployed->True,
 FontFamily->"Verdana",
 FontSize->11,
 GridBoxOptions->{GridBoxAlignment->{"Columns" -> {{Left, Right}}},
 GridBoxItemSize->{"Columns" -> {
     Scaled[0.37], {
      Scaled[0.6]}}, "Rows" -> {{1.5}}}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["GridTableForm",
      FontFamily->"Source Sans Pro",
      FontSize->37,
      FontWeight->"SemiBold",
      FontColor->GrayLevel[0.2]], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"Contributed By:\"\>", "Text",
          StripOnInput->False,
          ShowStringCharacters->False,
          FontSize->10,
          FontColor->GrayLevel[0.5]]},
        {
         StyleBox["\<\"Anton Antonov\"\>", "Text",
          StripOnInput->False,
          ShowStringCharacters->False,
          FontSize->12,
          FontSlant->Italic,
          FontColor->GrayLevel[0.25]]}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {1 -> GrayLevel[0.75]}, 
         "RowsIndexed" -> {1 -> GrayLevel[
             Rational[254, 255]], 3 -> GrayLevel[
             Rational[254, 255]]}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
       
       GridBoxSpacings->{"Columns" -> {{3}}, "Rows" -> {1.25, {}, 1.25}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "FunctionTitle"],

Cell["\<\
Arrange the elements of the argument in a two-dimensional grid with row \
coloring that helps comprehension\
\>", "FunctionDescription"],

Cell[CellGroupData[{

Cell[BoxData[
 StyleBox[
  RowBox[{Cell[BoxData[
    TagBox[
     ButtonBox[
      StyleBox["GridTableForm", "SymbolsRefLink",
       FontFamily->"Source Sans Pro"],
      BaseStyle->Dynamic[
        If[
         CurrentValue["MouseOver"], {
         "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
         "Link"}]],
      ButtonData->
       "paclet:PacletizedResourceFunctions1/ReferencePages/Symbols/\
GridTableForm",
      ContentPadding->False],
     MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
    FontFamily->"Source Sans Pro"], "[", 
   StyleBox["arg", "TI"], "]"}], "Text"]], "UsageInputs"],

Cell[TextData[{
 "arranges the elements of ",
 Cell[BoxData[
  StyleBox["arg", "TI"]], "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " in a two-dimensional grid."
}], "UsageDescription"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection", "NotesSection"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "b596334e-3e9f-45f2-996f-98de6ff4885a"],
 "\[NonBreakingSpace]",
 "Details and Options"
}], "PrimaryExamplesSection",
 ShowGroupOpener->"Thumbnail",
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "Details and \
Options"},ExpressionUUID->"b48e88d7-9284-45dc-a27a-d9dcff0425b3"],

Cell[TextData[{
 Cell[BoxData[Cell[BoxData[
   TagBox[
    ButtonBox[
     StyleBox["GridTableForm", "SymbolsRefLink",
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->
      "paclet:PacletizedResourceFunctions1/ReferencePages/Symbols/\
GridTableForm",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
   FontFamily->"Source Sans Pro"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " behaves like ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TableForm", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/TableForm",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " but its implementation uses ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Grid", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Grid",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 "."
}], "Notes",
 TaggingRules->{},
 CellTags->"TabNext",
 CellID->327146569],

Cell["\<\
If the first argument cannot be interpreted as a two-dimensional full array, \
it is completed to a two-dimensional array using empty strings.\
\>", "Notes",
 TaggingRules->{},
 CellID->480484902],

Cell["If necessary, the rows are completed with empty strings.", "Notes",
 TaggingRules->{},
 CellID->663943007],

Cell[TextData[{
 Cell[BoxData[Cell[BoxData[
   TagBox[
    ButtonBox[
     StyleBox["GridTableForm", "SymbolsRefLink",
      FontFamily->"Source Sans Pro"],
     BaseStyle->Dynamic[
       If[
        CurrentValue["MouseOver"], {
        "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
        "Link"}]],
     ButtonData->
      "paclet:PacletizedResourceFunctions1/ReferencePages/Symbols/\
GridTableForm",
     ContentPadding->False],
    MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
   FontFamily->"Source Sans Pro"]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " takes all options of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Grid", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Grid",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ", along with the following additional options:"
}], "Notes",
 TaggingRules->{},
 CellTags->"TabNext",
 CellID->161246186],

Cell[BoxData[GridBox[{
   {Cell["\"RowBackground\"", "TableText"], Cell[TextData[{
     "{",
     Cell[BoxData[
      TagBox[
       ButtonBox[
        StyleBox["White", "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"],
        BaseStyle->Dynamic[
          FEPrivate`If[
           CurrentValue["MouseOver"], {
           "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
           "Link"}]],
        ButtonData->"paclet:ref/White",
        ContentPadding->False],
       MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
      FontFamily->"Source Sans Pro"],
     ", ",
     Cell[BoxData[
      TagBox[
       ButtonBox[
        StyleBox["GrayLevel", "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"],
        BaseStyle->Dynamic[
          FEPrivate`If[
           CurrentValue["MouseOver"], {
           "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
           "Link"}]],
        ButtonData->"paclet:ref/GrayLevel",
        ContentPadding->False],
       MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
      FontFamily->"Source Sans Pro"],
     "[0.96]}"
    }], "TableText"], Cell["alternating row backgrounds", "TableText"]},
   {Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["TableHeadings", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/TableHeadings",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
     FontFamily->"Source Sans Pro"]], "TableText"], Cell[TextData[Cell[BoxData[
     TagBox[
      ButtonBox[
       StyleBox["Automatic", "SymbolsRefLink",
        ShowStringCharacters->True,
        FontFamily->"Source Sans Pro"],
       BaseStyle->Dynamic[
         FEPrivate`If[
          CurrentValue["MouseOver"], {
          "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
          "Link"}]],
       ButtonData->"paclet:ref/Automatic",
       ContentPadding->False],
      MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
     FontFamily->"Source Sans Pro"]], "TableText"], Cell[
    "row and column table headings", "TableText"]},
   {Cell["\"TableHeadingsStyle\"", "TableText"], Cell[TextData[{
     "{",
     Cell[BoxData[
      TagBox[
       ButtonBox[
        StyleBox["Blue", "SymbolsRefLink",
         ShowStringCharacters->True,
         FontFamily->"Source Sans Pro"],
        BaseStyle->Dynamic[
          FEPrivate`If[
           CurrentValue["MouseOver"], {
           "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
           "Link"}]],
        ButtonData->"paclet:ref/Blue",
        ContentPadding->False],
       MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
      FontFamily->"Source Sans Pro"],
     ", ",
     Cell[BoxData[
      RowBox[{
       TagBox[
        ButtonBox[
         StyleBox["FontFamily", "SymbolsRefLink",
          ShowStringCharacters->True,
          FontFamily->"Source Sans Pro"],
         BaseStyle->Dynamic[
           FEPrivate`If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]],
         ButtonData->"paclet:ref/FontFamily",
         ContentPadding->False],
        MouseAppearanceTag["LinkHand"]], " "}]], "Text", "InlineFormula",
      FontFamily->"Source Sans Pro"],
     "-> \[CloseCurlyDoubleQuote]Times\[CloseCurlyDoubleQuote]}"
    }], "TableText"], Cell["style applied to the table headings", "TableText"]}
  }]], "TableNotes",
 TaggingRules->{},
 CellID->719182970]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "PrimaryExamplesSection", "NotesSection"}, 
  Closed]]]],

Cell["", "PageDelimiter",
 Editable->False,
 CellFrame->{{0, 0}, {1, 0}},
 ShowCellBracket->False,
 CellMargins->{{24, 14}, {0, 12}},
 CellElementSpacings->{"CellMinHeight"->0.,
 "ClosedCellHeight"->0.},
 Evaluatable->False,
 CellGroupingRules->{"SectionGrouping", 30},
 CellFrameColor->GrayLevel[0.79216],
 CellSize->{Automatic, 0}],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection", "77ee9129cd444e2b"},
        Open], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "3737a218-76e8-4da4-b781-6303eb064bb5"],
 "\[NonBreakingSpace]",
 "Examples",
 "\[NonBreakingSpace]",
 Cell["(19)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "6e68ca7d-b154-443c-a86d-e270ef3ff020"]
}], "PrimaryExamplesSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "77ee9129cd444e2b"},ExpressionUUID->"07306e38-8bbc-4020-9f84-ae4b878ddf46"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "03e8d5c187d5aeb3"}, Open], 
      
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "cd2605de-5132-4c17-85f7-01f9541b4bd7"],
 "\[NonBreakingSpace]",
 "Basic Examples",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "5a0fcf95-0f5d-4c0f-bb91-df5fbf3eac24"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "03e8d5c187d5aeb3"},ExpressionUUID->"bc22284e-e28a-450f-bc45-c139cb338338"],

Cell["Here is a grid table form of a full integer array:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786462188491877*^9, 3.786462214153281*^9}, {
  3.787076161073331*^9, 3.787076167507981*^9}},
 CellID->13078159],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "23", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{"RandomInteger", "[", 
   RowBox[{"100", ",", 
    RowBox[{"{", 
     RowBox[{"5", ",", "7"}], "}"}]}], "]"}], "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.786455033507845*^9}, {
  3.786455064975102*^9, 3.7864550857202253`*^9}},
 CellLabel->"In[72]:=",
 CellID->443871870,ExpressionUUID->"2e6602f5-8b6b-4bc7-83a5-51c403529368"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["4",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "77", "58", "80", "8", "94", "4", "89"},
    {"2", "94", "76", "100", "28", "15", "64", "80"},
    {"3", "10", "24", "14", "99", "15", "60", "40"},
    {"4", "5", "31", "62", "57", "52", "48", "46"},
    {"5", "16", "44", "18", "24", "42", "62", "100"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{
  3.786449247840232*^9, 3.786449287222672*^9, 3.786449640693962*^9, 
   3.786452798280156*^9, 3.786454392808621*^9, {3.786454825293839*^9, 
   3.7864548414831963`*^9}, 3.786455034437788*^9, {3.7864550654369*^9, 
   3.7864550860366592`*^9}, {3.786455195390812*^9, 3.7864552159845*^9}, {
   3.786455310428493*^9, 3.7864553435788383`*^9}, 3.786455382278323*^9, 
   3.786456083766191*^9, 3.78645630950483*^9, 3.786456915260784*^9, 
   3.786457539476318*^9, 3.786457740851852*^9, 3.786462057594393*^9, {
   3.786462159209113*^9, 3.786462160791194*^9}, 3.786462525739579*^9, {
   3.786462636563045*^9, 3.786462655035338*^9}, 3.786462693520987*^9, 
   3.7864640569655933`*^9, 3.786464518119233*^9, 3.786540312498996*^9, 
   3.786541704203871*^9, 3.786541739353548*^9, 3.8481417351382847`*^9, 
   3.892374592872405*^9, 3.892374643733081*^9},
 CellLabel->"Out[73]=",ExpressionUUID->"b0004b0b-0eeb-4e26-90fa-f1da5b488ebb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->102763253],

Cell["\<\
Here is a grid table form of a nested list of integers that is not a full \
array:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786462188491877*^9, 3.7864622509973717`*^9}, {
  3.7870762013035407`*^9, 3.787076203733351*^9}},
 CellID->952846062],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"RandomInteger", "[", 
     RowBox[{"100", ",", "i"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "3", ",", "7"}], "}"}]}], "]"}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.78645507784483*^9}, {
  3.786457115051343*^9, 3.7864571949636793`*^9}, {3.786462270587597*^9, 
  3.7864622717758017`*^9}, {3.786462328751986*^9, 3.78646235290513*^9}},
 CellLabel->"In[71]:=",
 CellID->472033757,ExpressionUUID->"1463e8c1-c8d5-45eb-bfb2-258fd46765f1"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["3",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["4",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["5",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["6",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]], 
     StyleBox["7",
      StripOnInput->False,
      LineColor->RGBColor[0, 0, 1],
      FrontFaceColor->RGBColor[0, 0, 1],
      BackFaceColor->RGBColor[0, 0, 1],
      GraphicsColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1]]},
    {"1", "0", "73", "70", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"2", "36", "39", "74", "0", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"3", "49", "1", "10", "96", "48", "\<\"\"\>", "\<\"\"\>"},
    {"4", "45", "52", "52", "95", "27", "4", "\<\"\"\>"},
    {"5", "9", "94", "42", "23", "42", "55", "71"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 TaggingRules->{},
 CellChangeTimes->{{3.7864571599842978`*^9, 3.786457195732829*^9}, 
   3.7864575395049458`*^9, 3.786457740881817*^9, 3.786462057623146*^9, {
   3.786462159235268*^9, 3.7864621608194017`*^9}, 3.786462272218113*^9, {
   3.7864623332483883`*^9, 3.786462353947948*^9}, 3.786462525772141*^9, {
   3.78646263658029*^9, 3.786462655061716*^9}, 3.786462693528987*^9, 
   3.7864640569902782`*^9, 3.786464518161661*^9, 3.786540312508003*^9, 
   3.786541704212582*^9, 3.786541739407112*^9, 3.848141735191277*^9, 
   3.892374596864314*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"e30ccdd1-b9fa-4e4a-9cce-c038a4b494d1"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "03e8d5c187d5aeb3"}, Open]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "1277aee6b59b6d14"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "23a2b70e-76c2-43b8-8d1b-3cd42593854c"],
 "\[NonBreakingSpace]",
 "Scope",
 "\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "2fa88906-a14f-4a96-a8b8-0eba958be29d"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "1277aee6b59b6d14"},ExpressionUUID->"ceb33a6a-eb19-412d-b51c-b2e6bac8cee6"],

Cell["Table headings can be specified:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786463787884109*^9, 3.786463801518866*^9}},
 CellID->649685796],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomWord", "[", "5", "]"}], ",", 
      RowBox[{"RandomWord", "[", "7", "]"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.78645507784483*^9}, {
   3.786457115051343*^9, 3.7864571949636793`*^9}, {3.786462270587597*^9, 
   3.7864622717758017`*^9}, {3.786462328751986*^9, 3.786462333023056*^9}, 
   3.786463772172217*^9, {3.787076769464921*^9, 3.787076771396533*^9}},
 CellLabel->"In[1]:=",
 CellID->372102221],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"except\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"obduracy\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"photoelectrically\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"ultramodern\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"pestilential\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"introspective\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"crochet\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"\<\"dense\"\>", "27", "13", "32", "37", "28", "53", "64"},
    {"\<\"thole\"\>", "84", "20", "92", "88", "1", "88", "75"},
    {"\<\"risen\"\>", "3", "69", "79", "9", "10", "14", "6"},
    {"\<\"gurgle\"\>", "38", "45", "9", "96", "6", "96", "61"},
    {"\<\"tagged\"\>", "10", "41", "1", "24", "94", "42", "77"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864571599842978`*^9, 3.786457195732829*^9}, 
   3.7864575395049458`*^9, 3.786457740881817*^9, 3.786462057623146*^9, {
   3.786462159235268*^9, 3.7864621608194017`*^9}, 3.786462272218113*^9, 
   3.7864623332483883`*^9, 3.786462525863459*^9, {3.786462636658867*^9, 
   3.786462655149787*^9}, 3.78646269362248*^9, 3.78646377330023*^9, 
   3.786464057077297*^9, 3.786464518249835*^9, 3.7865403138383093`*^9, 
   3.786541704334958*^9, 3.786541739503207*^9, 3.8481417352840557`*^9},
 CellLabel->"Out[1]=",
 CellID->216899941]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1183716345],

Cell["\<\
If needed, various completions of the data and table headings are made in \
order to produce the final tabular form:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786463819215567*^9, 3.786463866871567*^9}, {
   3.7864656222493687`*^9, 3.786465622824876*^9}, 3.789385548196843*^9},
 CellID->1842983899],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"RandomInteger", "[", 
      RowBox[{"100", ",", "i"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "3", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomWord", "[", "3", "]"}], ",", 
      RowBox[{"RandomWord", "[", "3", "]"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.78645507784483*^9}, {
  3.786457115051343*^9, 3.7864571949636793`*^9}, {3.786462270587597*^9, 
  3.7864622717758017`*^9}, {3.786462328751986*^9, 3.786462333023056*^9}, {
  3.786462378115172*^9, 3.7864624195045757`*^9}, {3.7870768302346954`*^9, 
  3.787076831467855*^9}},
 CellLabel->"In[1]:=",
 CellID->337883473],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"cutthroat\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"bureaucratically\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"meticulous\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"chaparral\"\>", "16", "27", 
     "51", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"counterbalance\"\>", "65", "56", "20", 
     "57", "\<\"\"\>", "\<\"\"\>", "\<\"\"\>"},
    {"\<\"prudish\"\>", "70", "55", "44", "77", 
     "78", "\<\"\"\>", "\<\"\"\>"},
    {"\[SpanFromAbove]", "50", "19", "5", "48", "75", "80", "\<\"\"\>"},
    {"\[SpanFromAbove]", "85", "75", "46", "81", "13", "28", "21"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{
  3.7864624203003798`*^9, 3.786462525997645*^9, {3.7864626367735863`*^9, 
   3.7864626552414627`*^9}, 3.786462693721891*^9, 3.786464057114285*^9, 
   3.786464518296455*^9, 3.786540313972189*^9, 3.786541704387773*^9, 
   3.786541739557845*^9, 3.8481417353372183`*^9},
 CellLabel->"Out[1]=",
 CellID->1157559428]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->188525221],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["GridTableForm", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " can be invoked over ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Dataset", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Dataset",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " objects; if the dataset has column names, then they are used as table \
headings:"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.848140732226451*^9, 3.848140819255926*^9}, {
  3.848140860870026*^9, 3.848140909134322*^9}},
 CellID->1005010022],

Cell[BoxData[
 RowBox[{
  RowBox[{"dsRand", "=", 
   TagBox[
    StyleBox[
     TagBox[
      TagBox[
       DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
        "InitialData" -> {<|
           "kind" -> -5.819852270098394, "unpaired" -> 6.608417593499134, 
            "preliminary" -> "communicable", 
            "angelically" -> -2.272987994547236|>, <|
           "kind" -> 0.8536608474342557, "unpaired" -> 9.533798001552185, 
            "preliminary" -> "self-centered", "angelically" -> 
            0.268359528465286|>, <|
           "kind" -> 5.349297322544189, "unpaired" -> 6.771847645171391, 
            "preliminary" -> "lychgate", 
            "angelically" -> -9.564566954871797|>}, "AllowEmbedding" -> True, 
         "InitialShape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "kind"} -> 
            1, {All, "unpaired"} -> 1, {All, "preliminary"} -> 
            1, {All, "angelically"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "kind" -> TypeSystem`PackageScope`AtomShape[60], "unpaired" -> 
                TypeSystem`PackageScope`AtomShape[60], "preliminary" -> 
                TypeSystem`PackageScope`AtomShape[145.60000000000002`], 
                "angelically" -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 4, {All}]], 3, 
            DirectedInfinity[1], {}]], "InitialType" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "kind", "unpaired", "preliminary", "angelically"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real]}], 3], "Meta" -> <||>, "RowTarget" -> 20, 
         "ColumnTarget" -> 10, "Shape" -> 
         TypeSystem`PackageScope`HeaderShape[<|{All, "kind"} -> 
            1, {All, "unpaired"} -> 1, {All, "preliminary"} -> 
            1, {All, "angelically"} -> 1|>, 
           TypeSystem`PackageScope`Limited[
            TypeSystem`PackageScope`ColumnShape[
             TypeSystem`PackageScope`Limited[
              
              TypeSystem`PackageScope`RowShape[<|
               "kind" -> TypeSystem`PackageScope`AtomShape[60], "unpaired" -> 
                TypeSystem`PackageScope`AtomShape[60], "preliminary" -> 
                TypeSystem`PackageScope`AtomShape[145.60000000000002`], 
                "angelically" -> TypeSystem`PackageScope`AtomShape[60]|>], 
              DirectedInfinity[1], 4, {All}]], 3, 
            DirectedInfinity[1], {}]], "Type" -> TypeSystem`Vector[
           
           TypeSystem`Struct[{
            "kind", "unpaired", "preliminary", "angelically"}, {
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[Real], 
             TypeSystem`Atom[String], 
             TypeSystem`Atom[Real]}], 3], "Path" -> {}, "DisplayedRowCount" -> 
         3, "DisplayedColumnCount" -> 4, "DataRowCount" -> 3, 
         "DataColumnCount" -> 4, "SortPaths" -> {}, "SortDirections" -> {}, 
         "HiddenItemsMap" -> Null, "UpdateType" -> 1|>, 
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
        DynamicModule[{
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
            Style[
             Grid[{{
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["kind", 
                    Style[
                    "kind", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "kind"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "kind"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["unpaired", 
                    Style[
                    "unpaired", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "unpaired"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "unpaired"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["preliminary", 
                    Style[
                    "preliminary", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "preliminary"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "preliminary"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                Item[
                 Pane[
                  Annotation[
                   EventHandler[
                    MouseAppearance[
                    Mouseover["angelically", 
                    Style[
                    "angelically", FontColor -> 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`checkInteractivity[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][{
                    All, "angelically"}, 1]]], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{
                    All, "angelically"}, "ColumnHeader", True], "Mouse"], 
                  ImageSize -> {{1, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], Background -> 
                 GrayLevel[0.95], Alignment -> {Left, Baseline}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-5.81985"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["kind"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.60842"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["unpaired"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["communicable", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["preliminary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-2.27299"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 
                    Key["angelically"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.853661"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["kind"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["9.5338"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["unpaired"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["self-centered", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["preliminary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["0.26836"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 
                    Key["angelically"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}, {
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["5.3493"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["kind"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["6.77185"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["unpaired"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation["lychgate", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["preliminary"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{145.60000000000002`, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}], 
                Item[
                 Pane[
                  Annotation[
                   RawBoxes["-9.56457"], 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 
                    Key["angelically"]}, "Item", False], "Mouse"], 
                  ImageSize -> {{60, Full}, Automatic}, 
                  ImageMargins -> {{5, 3}, {4, 5}}], 
                 ItemSize -> {Full, Automatic}]}}, 
              BaseStyle -> {
               ContextMenu -> 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                  Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger, TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu,
                     True, TypeSystem`NestedGrid`PackagePrivate`$\
lastContextMenuTrigger = 
                    TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                    TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                    Block[{TypeSystem`NestedGrid`PackagePrivate`$\
globalScrollPos = {TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                    
                    With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> Which[
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
                "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, 
              Dividers -> All, FrameStyle -> GrayLevel[0.7490196078431373], 
              Spacings -> {0, 0}, Alignment -> Left, 
              BaseStyle -> {
               FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
                Plain}], LineBreakWithin -> False, ContextMenu -> {}, 
             NumberMarks -> False, ShowAutoStyles -> False]], 
          TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
         Dynamic[
          TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
             Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
             
             Module[{TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
               TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
               TypeSystem`NestedGrid`PackagePrivate`datasetData[
                TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
              TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
                 TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                 TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                 TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                  TypeSystem`NestedGrid`PackagePrivate`localHold[
                  TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                 TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                Not[
                 FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
           TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
           TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
             TypeSystem`SparseGrid[
              TypeSystem`H["(data no longer present)"]], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
          TrackedSymbols :> {
           TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
         DynamicModuleValues :> {}], 
        TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
         TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
          TypeSystem`PackageScope`SubViewPathbar[
          TypeSystem`NestedGrid`PackagePrivate`$path$$, 
           TypeSystem`NestedGrid`PackagePrivate`updateState[
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$path$$, 
            TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
            TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
         TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
        TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
         Framed[
          Dynamic[
           Replace[
           TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
            TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
               Blank[]] -> "", 
             TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
               TypeSystem`NestedGrid`PackagePrivate`localHold[
               TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
               Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
                Blank[]], 
               Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                Blank[]]] :> (
              Increment[
               TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
               TypeSystem`NestedGrid`PackagePrivate`path$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
               TypeSystem`NestedGrid`PackagePrivate`pathType$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
               TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
              TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
               TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
              TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
               TypeSystem`NestedGrid`PackagePrivate`path$, 
                TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
             Spacer[10], Blank[] :> Spacer[10]}], 
           TrackedSymbols :> {
            TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], 
          FrameStyle -> None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> 
          Top, ImageSize -> {Automatic, 15}], FontSize -> 1], 
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
        DynamicWrapperBox[
         DynamicBox[ToBoxes[
           Dataset`DatasetContent[
           2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
            "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], 
            "State" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], 
            "VPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], 
            "HPos" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], 
            "TopBar" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], 
            "BottomBar" -> 
            Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], 
            "OutputID" -> Hold[
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], 
           StandardForm],
          ImageSizeCache->{363., {60.134033203125, 65.865966796875}},
          
          TrackedSymbols:>{
           TypeSystem`NestedGrid`PackagePrivate`$state$$, 
            TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
         TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
         MouseAnnotation[],
         ImageSizeCache->{363., {60.134033203125, 65.865966796875}}],
        BaseStyle->{LineBreakWithin -> False},
        DynamicModuleValues:>{},
        Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
         CreateUUID[]),
        UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
       
       Deploy,
       DefaultBaseStyle->"Deploy"],
      Dataset`InterpretDataset[1],
      Editable->False,
      SelectWithContents->True,
      Selectable->False],
     ShowSpecialCharacters->False,
     ShowStringCharacters->True,
     NumberMarks->True],
    FullForm]}], ";"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.848141310824205*^9, 3.8481413552862587`*^9}},
 CellLabel->"In[1]:=",
 CellID->1492230192],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", "dsRand", "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.848141154445904*^9, 3.848141156132361*^9}, {
  3.8481412195898867`*^9, 3.848141234336439*^9}, {3.84814132648792*^9, 
  3.848141333212352*^9}},
 CellLabel->"In[2]:=",
 CellID->776618488],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"kind\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"unpaired\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"preliminary\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"angelically\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{"-", "5.819852270098394`"}], 
     "6.608417593499134`", "\<\"communicable\"\>", 
     RowBox[{"-", "2.272987994547236`"}]},
    {"2", "0.8536608474342557`", 
     "9.533798001552185`", "\<\"self-centered\"\>", "0.268359528465286`"},
    {"3", "5.349297322544189`", "6.771847645171391`", "\<\"lychgate\"\>", 
     RowBox[{"-", "9.564566954871797`"}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 6 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{
  3.848141156478801*^9, {3.848141220020626*^9, 3.84814123464882*^9}, {
   3.848141281873827*^9, 3.848141295045397*^9}, {3.848141333809477*^9, 
   3.848141358120039*^9}, 3.8481417355238113`*^9},
 CellLabel->"Out[2]=",
 CellID->1046948223]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->704258874],

Cell["Excess table headings are ignored:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786463819215567*^9, 3.786463866871567*^9}, {
  3.786463908643368*^9, 3.78646393511467*^9}},
 CellID->1696516701],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomWord", "[", "8", "]"}], ",", 
      RowBox[{"RandomWord", "[", "5", "]"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864639518108664`*^9, 3.786463970541587*^9}, 
   3.787076796248506*^9},
 CellLabel->"In[1]:=",
 CellID->289031482],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"processor\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"fashioned\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"licorice\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"\<\"squeal\"\>", "68", "52", "56"},
    {"\<\"teethe\"\>", "88", "86", "63"},
    {"\<\"becalmed\"\>", "40", "37", "41"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{3.78646397092852*^9, 3.786464057151616*^9, 
  3.786464518343696*^9, 3.786540314815571*^9, 3.786541704433199*^9, 
  3.7865417396165457`*^9, 3.848141735600792*^9},
 CellLabel->"Out[1]=",
 CellID->1725264090]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "1277aee6b59b6d14"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "5ad5bf9da7e59e74"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "6671eca1-0411-4f6a-b646-fb74fda1296f"],
 "\[NonBreakingSpace]",
 "Options",
 "\[NonBreakingSpace]",
 Cell["(4)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "a7f3219c-e440-411d-98ba-d226ca42de91"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "5ad5bf9da7e59e74"},ExpressionUUID->"814c3fa6-da93-44e4-9566-5524618d7e97"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "36e0da479a37bebf"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {7., 11.}}]]],
 "\[NonBreakingSpace]",
 "RowBackground",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706]]
}], "ExampleSubsection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{"OpenerID" -> "36e0da479a37bebf"}],

Cell["\<\
The following table demonstrates the effect of different row background \
specifications:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786540642698873*^9, 3.786540678216061*^9}, 
   3.787076255010645*^9},
 CellID->683659726],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arr", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bgs", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "None", "}"}], ",", "Automatic", ",", "LightGreen", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Nest", "[", 
        RowBox[{"Lighter", ",", "Pink", ",", "4"}], "]"}], ",", "LightBlue"}],
       "}"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"GridTableForm", "[", 
        RowBox[{"arr", ",", 
         RowBox[{"\"\<RowBackground\>\"", "\[Rule]", "#"}]}], "]"}]}], "}"}], 
     "&"}], "/@", "bgs"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\\\"RowBackground\\\" value\>\"", ",", "\"\<Grid\>\""}], 
     "}"}]}], ",", 
   RowBox[{"\"\<RowBackground\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"White", ",", "White"}], "}"}]}]}], "]"}]}], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786455853357777*^9, 3.786455886498302*^9}, {
   3.786455921536558*^9, 3.786456021579646*^9}, {3.786456090825811*^9, 
   3.786456122808446*^9}, {3.786456215028208*^9, 3.786456233588539*^9}, {
   3.7864563161561737`*^9, 3.786456316539934*^9}, 3.7870767968931217`*^9},
 CellLabel->"In[1]:=",
 CellID->1227868139],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"\\\"RowBackground\\\" value\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"Grid\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", 
     RowBox[{"{", "None", "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "49", "34", "0"},
        {"2", "93", "42", "75"},
        {"3", "11", "93", "25"},
        {"4", "16", "33", "68"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{
        "Columns" -> {{Automatic}}, "Rows" -> {None, None, None}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"2", "Automatic", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "49", "34", "0"},
        {"2", "93", "42", "75"},
        {"3", "11", "93", "25"},
        {"4", "16", "33", "68"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{
        "Columns" -> {{Automatic}}, 
         "Rows" -> {Automatic, Automatic, Automatic, Automatic, Automatic}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"3", 
     InterpretationBox[
      ButtonBox[
       TooltipBox[
        GraphicsBox[{
          {GrayLevel[0], RectangleBox[{0, 0}]}, 
          {GrayLevel[0], RectangleBox[{1, -1}]}, 
          {RGBColor[0.88, 1, 0.88], RectangleBox[{0, -1}, {2, 1}]}},
         AspectRatio->1,
         DefaultBaseStyle->"ColorSwatchGraphics",
         Frame->True,
         FrameStyle->RGBColor[
          0.5866666666666667, 0.6666666666666666, 0.5866666666666667],
         FrameTicks->None,
         ImageSize->
          Dynamic[{
           Automatic, 
            1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
             Magnification])}],
         PlotRangePadding->None],
        StyleBox[
         RowBox[{"RGBColor", "[", 
           RowBox[{"0.88`", ",", "1", ",", "0.88`"}], "]"}], NumberMarks -> 
         False]],
       Appearance->None,
       BaseStyle->{},
       BaselinePosition->Baseline,
       ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
         If[
          Not[
           AbsoluteCurrentValue["Deployed"]], 
          SelectionMove[Typeset`box$, All, Expression]; 
          FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
          FrontEnd`Private`$ColorSelectorInitialColor = 
           RGBColor[0.88, 1, 0.88]; 
          FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
          MathLink`CallFrontEnd[
            FrontEnd`AttachCell[Typeset`box$, 
             FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
             Left, Top}, 
             "ClosingActions" -> {
              "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
       DefaultBaseStyle->{},
       Evaluator->Automatic,
       Method->"Preemptive"],
      RGBColor[0.88, 1, 0.88],
      Editable->False,
      Selectable->False], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "49", "34", "0"},
        {"2", "93", "42", "75"},
        {"3", "11", "93", "25"},
        {"4", "16", "33", "68"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           RGBColor[0.88, 1, 0.88], 
           RGBColor[0.88, 1, 0.88], 
           RGBColor[0.88, 1, 0.88], 
           RGBColor[0.88, 1, 0.88], 
           RGBColor[0.88, 1, 0.88]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"4", 
     RowBox[{"{", 
      RowBox[{
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[1, 0.9012345679012346, 0.9012345679012346], 
             RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.6666666666666666, 0.6008230452674898, 0.6008230452674898],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             
             RowBox[{"1", ",", "0.9012345679012346`", ",", 
               "0.9012345679012346`"}], "]"}], NumberMarks -> False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[1, 0.9012345679012346, 0.9012345679012346]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[1, 0.9012345679012346, 0.9012345679012346],
        Editable->False,
        Selectable->False], ",", 
       InterpretationBox[
        ButtonBox[
         TooltipBox[
          GraphicsBox[{
            {GrayLevel[0], RectangleBox[{0, 0}]}, 
            {GrayLevel[0], RectangleBox[{1, -1}]}, 
            {RGBColor[0.87, 0.94, 1], RectangleBox[{0, -1}, {2, 1}]}},
           AspectRatio->1,
           DefaultBaseStyle->"ColorSwatchGraphics",
           Frame->True,
           
           FrameStyle->RGBColor[
            0.5800000000000001, 0.6266666666666667, 0.6666666666666666],
           FrameTicks->None,
           
           ImageSize->
            Dynamic[{
             Automatic, 
              1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
               Magnification])}],
           PlotRangePadding->None],
          StyleBox[
           RowBox[{"RGBColor", "[", 
             RowBox[{"0.87`", ",", "0.94`", ",", "1"}], "]"}], NumberMarks -> 
           False]],
         Appearance->None,
         BaseStyle->{},
         BaselinePosition->Baseline,
         ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
           If[
            Not[
             AbsoluteCurrentValue["Deployed"]], 
            SelectionMove[Typeset`box$, All, Expression]; 
            FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
            FrontEnd`Private`$ColorSelectorInitialColor = 
             RGBColor[0.87, 0.94, 1]; 
            FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
            MathLink`CallFrontEnd[
              FrontEnd`AttachCell[Typeset`box$, 
               FrontEndResource["RGBColorValueSelector"], {
               0, {Left, Bottom}}, {Left, Top}, 
               "ClosingActions" -> {
                "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
         DefaultBaseStyle->{},
         Evaluator->Automatic,
         Method->"Preemptive"],
        RGBColor[0.87, 0.94, 1],
        Editable->False,
        Selectable->False]}], "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "49", "34", "0"},
        {"2", "93", "42", "75"},
        {"3", "11", "93", "25"},
        {"4", "16", "33", "68"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           RGBColor[1, 0.9012345679012346, 0.9012345679012346], 
           RGBColor[0.87, 0.94, 1], 
           RGBColor[1, 0.9012345679012346, 0.9012345679012346], 
           RGBColor[0.87, 0.94, 1], 
           RGBColor[1, 0.9012345679012346, 0.9012345679012346]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       GrayLevel[1], 
       GrayLevel[1], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864558578712683`*^9, 3.786455887473496*^9}, 
   3.7864559222570877`*^9, {3.786455966834352*^9, 3.786456021878433*^9}, {
   3.786456083975975*^9, 3.786456123298472*^9}, {3.78645622494956*^9, 
   3.786456233997209*^9}, {3.786456309769586*^9, 3.786456316967812*^9}, 
   3.786456915471204*^9, 3.786457539672492*^9, 3.7864577410701237`*^9, 
   3.786462057810986*^9, {3.7864621593835363`*^9, 3.7864621610037823`*^9}, 
   3.7864625261147537`*^9, {3.7864626368851547`*^9, 3.78646265541258*^9}, 
   3.786462693831808*^9, 3.786464057263836*^9, 3.786464518458316*^9, 
   3.78654031495573*^9, 3.786541704532497*^9, 3.786541739703953*^9, 
   3.848141735684483*^9},
 CellLabel->"Out[3]=",
 CellID->1189358836]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSubsection", "36e0da479a37bebf"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "4bccc149f4006fd5"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {7., 11.}}]]],
 "\[NonBreakingSpace]",
 "TableHeadings",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706]]
}], "ExampleSubsection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{"OpenerID" -> "4bccc149f4006fd5"}],

Cell["\<\
The following table demonstrates the effect of different table headings \
specifications:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786540642698873*^9, 3.786540703123721*^9}},
 CellID->391315650],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "89", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arr", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ths", "=", 
   RowBox[{"{", 
    RowBox[{"Automatic", ",", 
     RowBox[{"RandomWord", "[", 
      RowBox[{
       RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", "2", 
       "\[RightDoubleBracket]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomWord", "[", "2", "]"}], ",", "Automatic"}], "}"}], ",", 
     
     RowBox[{"{", 
      RowBox[{"RandomWord", "[", 
       RowBox[{
        RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", "1", 
        "\[RightDoubleBracket]"}], "]"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"RandomWord", "[", 
        RowBox[{
         RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", "1",
          "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"RandomWord", "[", 
        RowBox[{
         RowBox[{"Dimensions", "[", "arr", "]"}], "\[LeftDoubleBracket]", "2",
          "\[RightDoubleBracket]"}], "]"}]}], "}"}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"#", ",", 
       RowBox[{"GridTableForm", "[", 
        RowBox[{"arr", ",", 
         RowBox[{"TableHeadings", "\[Rule]", "#"}]}], "]"}]}], "}"}], "&"}], "/@",
     "ths"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<\\\"TableHeadings\\\" value\>\"", ",", "\"\<Grid\>\""}], 
     "}"}]}]}], "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.786455127311882*^9}, {
  3.786455436796685*^9, 3.78645558053808*^9}, {3.786455718119152*^9, 
  3.786455829901668*^9}, {3.786455895545719*^9, 3.786455897680915*^9}, {
  3.786456930180888*^9, 3.786456961533395*^9}, {3.786457576100542*^9, 
  3.786457576592782*^9}, {3.786457661310009*^9, 3.786457664144348*^9}, {
  3.786457773362836*^9, 3.786457775675754*^9}, {3.7864620665982533`*^9, 
  3.786462085946671*^9}, {3.786462881415362*^9, 3.7864629161870832`*^9}, {
  3.786540730408476*^9, 3.786540798594585*^9}, {3.78654082890302*^9, 
  3.7865408290361137`*^9}, {3.7870767981693673`*^9, 3.7870767988550234`*^9}},
 CellLabel->"In[1]:=",
 CellID->1741369494],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"\\\"TableHeadings\\\" value\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"Grid\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "Automatic", 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "93", "95", "56"},
        {"2", "15", "35", "19"},
        {"3", "32", "67", "98"},
        {"4", "90", "61", "28"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"2", 
     RowBox[{"{", 
      RowBox[{"\<\"brazier\"\>", ",", "\<\"imbecilic\"\>", 
       ",", "\<\"offending\"\>"}], "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"brazier\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"imbecilic\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"offending\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"1", "93", "95", "56"},
        {"2", "15", "35", "19"},
        {"3", "32", "67", "98"},
        {"4", "90", "61", "28"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"3", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"shyness\"\>", ",", "\<\"devoted\"\>"}], "}"}], ",", 
       "Automatic"}], "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"\<\"shyness\"\>", "93", "95", "56"},
        {"\<\"devoted\"\>", "15", "35", "19"},
        {"\[SpanFromAbove]", "32", "67", "98"},
        {"\[SpanFromAbove]", "90", "61", "28"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"4", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"\<\"demolish\"\>", ",", "\<\"transience\"\>", 
        ",", "\<\"tippler\"\>", ",", "\<\"plaything\"\>"}], "}"}], "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["1",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["2",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["3",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"\<\"demolish\"\>", "93", "95", "56"},
        {"\<\"transience\"\>", "15", "35", "19"},
        {"\<\"tippler\"\>", "32", "67", "98"},
        {"\<\"plaything\"\>", "90", "61", "28"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]},
    {"5", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\<\"microfilm\"\>", ",", "\<\"sassy\"\>", 
         ",", "\<\"gooseberry\"\>", ",", "\<\"aim\"\>"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\<\"passive\"\>", ",", "\<\"night\"\>", 
         ",", "\<\"topical\"\>"}], "}"}]}], "}"}], 
     TagBox[GridBox[{
        {
         StyleBox["\<\"#\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"passive\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"night\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
         StyleBox["\<\"topical\"\>",
          StripOnInput->False,
          FrontFaceColor->RGBColor[0, 0, 1],
          FontFamily->"Times",
          FontColor->RGBColor[0, 0, 1],
          $CellContext`LineColor -> RGBColor[0, 0, 1],
          $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
          $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
        {"\<\"microfilm\"\>", "93", "95", "56"},
        {"\<\"sassy\"\>", "15", "35", "19"},
        {"\<\"gooseberry\"\>", "32", "67", "98"},
        {"\<\"aim\"\>", "90", "61", "28"}
       },
       AutoDelete->False,
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1], 
           GrayLevel[0.96], 
           GrayLevel[1]}},
       GridBoxDividers->{
        "ColumnsIndexed" -> {
          1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
           GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
         "Rows" -> {True, True, {False}, True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Grid"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 4 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786455792883358*^9, 3.786455830312983*^9}, 
   3.786455898505508*^9, 3.786456084045773*^9, 3.7864563098217163`*^9, 
   3.786456915512228*^9, 3.786456962031783*^9, 3.7864575397636013`*^9, 
   3.786457577352749*^9, 3.7864576644183197`*^9, 3.7864577411354733`*^9, 
   3.7864577763493757`*^9, {3.786462057870801*^9, 3.786462086204628*^9}, {
   3.7864621594444513`*^9, 3.78646216106973*^9}, 3.786462526192498*^9, {
   3.7864626369602203`*^9, 3.786462655490309*^9}, 3.786462693895262*^9, 
   3.786462810513434*^9, {3.7864628971774673`*^9, 3.786462916909133*^9}, 
   3.786464057335428*^9, 3.786464518530307*^9, 3.786540315065392*^9, {
   3.786540737382599*^9, 3.7865407992199373`*^9}, 3.786540829708054*^9, 
   3.78654170465071*^9, 3.786541739827187*^9, 3.848141735783065*^9},
 CellLabel->"Out[4]=",
 CellID->776170376]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1542193325],

Cell[TextData[{
 "If the row headings or column headings are too short, they are completed \
with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SpanFromAbove", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/SpanFromAbove",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["SpanFromLeft", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/SpanFromLeft",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ", respectively:"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786462955989484*^9, 3.7864630116975*^9}, {
  3.78654086451895*^9, 3.786540865598219*^9}, {3.789385578717918*^9, 
  3.7893855833130674`*^9}},
 CellID->630112352],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomWord", "[", "3", "]"}], ",", 
      RowBox[{"RandomWord", "[", "3", "]"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864627753007593`*^9, 3.786462842880135*^9}, {
   3.7864629372737303`*^9, 3.7864629392491302`*^9}, 3.787076805588133*^9},
 CellLabel->"In[1]:=",
 CellID->2020172076],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"thundercloud\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"assort\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"century\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"recuperative\"\>", "54", "68", "19", "47", "100", "55", "37"},
    {"\<\"presbytery\"\>", "90", "63", "2", "58", "22", "72", "31"},
    {"\<\"sectarianism\"\>", "53", "57", "42", "93", "38", "40", "40"},
    {"\[SpanFromAbove]", "50", "48", "77", "92", "76", "55", "62"},
    {"\[SpanFromAbove]", "11", "80", "85", "91", "99", "72", "44"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864627799179497`*^9, 3.7864628431755867`*^9}, 
   3.7864629395838842`*^9, 3.78646405739869*^9, 3.786464518622098*^9, 
   3.786540315134983*^9, 3.786541704725143*^9, 3.7865417399163437`*^9, 
   3.8481417358796473`*^9},
 CellLabel->"Out[1]=",
 CellID->1279837554]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSubsection", "4bccc149f4006fd5"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSubsection", "38844047fdec386d"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {7., 11.}}]]],
 "\[NonBreakingSpace]",
 "Grid options",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706]]
}], "ExampleSubsection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{"OpenerID" -> "38844047fdec386d"}],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["GridTableForm", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " takes all options of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Grid", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Grid",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ":"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786456360074376*^9, 3.7864564918570213`*^9}, {
  3.786463024699493*^9, 3.786463037959149*^9}, {3.787076340559509*^9, 
  3.7870763466993318`*^9}},
 CellID->515436640],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arr", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{"arr", ",", 
   RowBox[{"\"\<RowBackground\>\"", "\[Rule]", "Blue"}], ",", 
   RowBox[{"Background", "\[Rule]", "LightGreen"}], ",", 
   RowBox[{"Dividers", "\[Rule]", "All"}], ",", 
   RowBox[{"FrameStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{"Red", ",", "Bold", ",", "Dotted"}], "]"}]}]}], "]"}]}], "Input",\
 "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786456457561533*^9, 3.786456610267549*^9}},
 CellLabel->"In[1]:=",
 CellID->1116698873],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["3",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "49", "53", "12"},
    {"2", "83", "47", "6"},
    {"3", "70", "24", "59"},
    {"4", "3", "59", "75"}
   },
   AutoDelete->False,
   FrameStyle->Directive[
     RGBColor[1, 0, 0], Bold, 
     Dashing[{0, Small}]],
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxDividers->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864565706217813`*^9, 3.786456610733211*^9}, 
   3.786456915546691*^9, 3.7864575398082533`*^9, 3.786457741168282*^9, 
   3.786462057901532*^9, {3.786462159477593*^9, 3.7864621611022673`*^9}, 
   3.786462526245543*^9, {3.786462636999312*^9, 3.786462655565434*^9}, 
   3.786462693934696*^9, 3.7864640574538603`*^9, 3.786464518713811*^9, 
   3.786540315194706*^9, 3.786541704776906*^9, 3.786541739981112*^9, 
   3.848141735951275*^9},
 CellLabel->"Out[2]=",
 CellID->1033561726]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSubsection", "38844047fdec386d"}, Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "5ad5bf9da7e59e74"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "5572c38e48502487"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "e4ae5f9c-b40c-4d31-abcf-c384725ebfe7"],
 "\[NonBreakingSpace]",
 "Applications",
 "\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "af73f2ac-9c9d-4953-9b92-7956ad2a8688"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "5572c38e48502487"},ExpressionUUID->"8a28e32a-0bb7-44fe-aba3-302d18c2bebb"],

Cell["\<\
Show a sample of machine learning data with corresponding variable names:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786541334383062*^9, 3.786541368403605*^9}, {
  3.7893855894852395`*^9, 3.789385593173953*^9}},
 CellID->1681798401],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arr", "=", 
   RowBox[{
    RowBox[{"Flatten", "@*", "List"}], "@@@", 
    RowBox[{"RandomSample", "[", 
     RowBox[{
      RowBox[{"ExampleData", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
        ",", "\"\<Data\>\""}], "]"}], ",", "12"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", "=", 
   RowBox[{
    RowBox[{"Flatten", "@*", "List"}], "@@", 
    RowBox[{"ExampleData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<MachineLearning\>\"", ",", "\"\<Titanic\>\""}], "}"}], 
      ",", "\"\<VariableDescriptions\>\""}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{"arr", ",", 
   RowBox[{"TableHeadings", "\[Rule]", "header"}]}], "]"}]}], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786541189072163*^9, 3.786541322662956*^9}, 
   3.7870768076345935`*^9},
 CellLabel->"In[1]:=",
 CellID->105202145],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"passenger class\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"passenger age\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"passenger sex\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"passenger survival\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "\<\"1st\"\>", "21.`", "\<\"female\"\>", "\<\"survived\"\>"},
    {"2", "\<\"3rd\"\>", "6.`", "\<\"male\"\>", "\<\"died\"\>"},
    {"3", "\<\"1st\"\>", "54.`", "\<\"female\"\>", "\<\"survived\"\>"},
    {"4", "\<\"3rd\"\>", "38.5`", "\<\"male\"\>", "\<\"died\"\>"},
    {"5", "\<\"2nd\"\>", "7.`", "\<\"female\"\>", "\<\"survived\"\>"},
    {"6", "\<\"3rd\"\>", "50.`", "\<\"male\"\>", "\<\"died\"\>"},
    {"7", "\<\"1st\"\>", "38.`", "\<\"male\"\>", "\<\"died\"\>"},
    {"8", "\<\"1st\"\>", "52.`", "\<\"female\"\>", "\<\"survived\"\>"},
    {"9", "\<\"1st\"\>", "44.`", "\<\"male\"\>", "\<\"died\"\>"},
    {"10", "\<\"3rd\"\>", "0.75`", "\<\"female\"\>", "\<\"survived\"\>"},
    {"11", "\<\"2nd\"\>", "26.`", "\<\"male\"\>", "\<\"died\"\>"},
    {"12", "\<\"3rd\"\>", "11.`", "\<\"female\"\>", "\<\"died\"\>"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 6 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7865412181845818`*^9, 3.7865413229969587`*^9}, 
   3.786541704867538*^9, 3.786541740057197*^9, 3.848141736168296*^9},
 CellLabel->"Out[3]=",
 CellID->76708299]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1354911622],

Cell[TextData[{
 "When studying data arrays, the use of the ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ResourceFunction", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/ResourceFunction",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " ",
 ButtonBox["RecordsSummary",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://resources.wolframcloud.com/FunctionRepository/resources/\
RecordsSummary"], None},
  ButtonNote->
   "https://resources.wolframcloud.com/FunctionRepository/resources/\
RecordsSummary"],
 " can be completed with ",
 Cell[BoxData[
  StyleBox["GridTableForm", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ":"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.7864647396406107`*^9, 3.786464826148119*^9}, {
   3.7865413972830343`*^9, 3.786541402693993*^9}, {3.78707637924047*^9, 
   3.7870764365421886`*^9}, {3.7870764685738506`*^9, 3.7870764714803085`*^9}, 
   3.789385652027465*^9},
 CellID->1864729949],

Cell[BoxData[{
 RowBox[{
  RowBox[{"arr", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{
     RowBox[{"ExampleData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], "]"}], "[",
      "Values", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", "=", 
   RowBox[{"Normal", "[", 
    RowBox[{"Keys", "[", 
     RowBox[{
      RowBox[{"ExampleData", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<Dataset\>\"", ",", "\"\<Titanic\>\""}], "}"}], "]"}], 
      "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], "]"}], "]"}]}], 
  ";"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786464590872604*^9, 3.7864646690473957`*^9}},
 CellLabel->"In[1]:=",
 CellID->1399351295],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceFunction", "[", "\"\<RecordsSummary\>\"", "]"}], "[", 
  RowBox[{"arr", ",", "header"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786464479376617*^9, 3.7864644850157547`*^9}, {
  3.786464675175812*^9, 3.7864646851804113`*^9}},
 CellLabel->"In[3]:=",
 CellID->1905569059],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[GridBox[{
      {
       StyleBox["\<\"1 class\"\>",
        StripOnInput->False,
        FrontFaceColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1],
        $CellContext`LineColor -> RGBColor[0, 0, 1],
        $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
        $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"3rd\"\>", "709"},
          {"\<\"1st\"\>", "323"},
          {"\<\"2nd\"\>", "277"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"2 age\"\>",
        StripOnInput->False,
        FrontFaceColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1],
        $CellContext`LineColor -> RGBColor[0, 0, 1],
        $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
        $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"Min\"\>", "1"},
          {"\<\"1st Qu\"\>", "21"},
          {"\<\"Median\"\>", "28"},
          {"\<\"Mean\"\>", "29.90057361376673`"},
          {"\<\"3rd Qu\"\>", "39"},
          {"\<\"Max\"\>", "80"},
          {"\<\"Missing[___]\"\>", "263"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"3 sex\"\>",
        StripOnInput->False,
        FrontFaceColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1],
        $CellContext`LineColor -> RGBColor[0, 0, 1],
        $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
        $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"\<\"male\"\>", "843"},
          {"\<\"female\"\>", "466"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"], ",", 
   TagBox[GridBox[{
      {
       StyleBox["\<\"4 survived\"\>",
        StripOnInput->False,
        FrontFaceColor->RGBColor[0, 0, 1],
        FontFamily->"Times",
        FontColor->RGBColor[0, 0, 1],
        $CellContext`LineColor -> RGBColor[0, 0, 1],
        $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
        $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
      {
       TagBox[GridBox[{
          {"False", "809"},
          {"True", "500"}
         },
         AutoDelete->False,
         GridBoxAlignment->{"Columns" -> {{Left}}},
         GridBoxItemSize->{
          "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
        "Grid"]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
    "Column"]}], "}"}]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{3.786464485619787*^9, 3.786464519161059*^9, 
  3.786464685750448*^9, 3.7865403171578074`*^9, 3.786541704977664*^9, 
  3.786541740137149*^9, 3.848141736274576*^9},
 CellLabel->"Out[3]=",
 CellID->746193093]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomSample", "[", 
    RowBox[{"arr", ",", "12"}], "]"}], ",", 
   RowBox[{"TableHeadings", "->", "header"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786464479376617*^9, 3.7864644850157547`*^9}, {
   3.786464675175812*^9, 3.786464716567266*^9}, {3.7864648351578074`*^9, 
   3.7864648355381327`*^9}, 3.787076808647723*^9},
 CellLabel->"In[4]:=",
 CellID->444466284],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"class\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"age\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"sex\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"survived\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "\<\"2nd\"\>", "27", "\<\"male\"\>", "False"},
    {"2", "\<\"3rd\"\>", 
     RowBox[{"Missing", "[", "]"}], "\<\"female\"\>", "False"},
    {"3", "\<\"2nd\"\>", "32", "\<\"male\"\>", "False"},
    {"4", "\<\"1st\"\>", "47", "\<\"male\"\>", "False"},
    {"5", "\<\"3rd\"\>", "37", "\<\"female\"\>", "False"},
    {"6", "\<\"3rd\"\>", "25", "\<\"male\"\>", "False"},
    {"7", "\<\"3rd\"\>", "33", "\<\"male\"\>", "False"},
    {"8", "\<\"1st\"\>", "25", "\<\"female\"\>", "True"},
    {"9", "\<\"1st\"\>", "55", "\<\"female\"\>", "True"},
    {"10", "\<\"3rd\"\>", 
     RowBox[{"Missing", "[", "]"}], "\<\"male\"\>", "False"},
    {"11", "\<\"1st\"\>", "63", "\<\"female\"\>", "True"},
    {"12", "\<\"3rd\"\>", "43", "\<\"male\"\>", "False"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 6 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{3.786464717013897*^9, 3.786464835834323*^9, 
  3.7865403173550453`*^9, 3.7865417049887953`*^9, 3.786541740146703*^9, 
  3.848141736287455*^9},
 CellLabel->"Out[4]=",
 CellID->2110299218]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->146385397],

Cell["Show all rows and columns of a dataset:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.848141416362814*^9, 3.848141436692645*^9}},
 CellID->1430591564],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "32", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dsRand", "=", 
   RowBox[{
    RowBox[{"ResourceFunction", "[", "\"\<RandomTabularDataset\>\"", "]"}], 
    "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"25", ",", "15"}], "}"}], ",", 
     RowBox[{"\"\<Generators\>\"", "->", 
      RowBox[{"{", 
       RowBox[{"RandomInteger", ",", "RandomReal"}], "}"}]}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{"GridTableForm", "[", "dsRand", "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.848141529824727*^9, 3.848141597146648*^9}, {
  3.848141645960373*^9, 3.848141656039382*^9}, {3.84814177380962*^9, 
  3.848141794473612*^9}},
 CellLabel->"In[11]:=",
 CellID->1228286363],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
tsBCDcubPpqpuMca3OG1eKvadEo7ll8YlNHwm5NZnAUf1I0pnlVc7L833rgT
WuVeMv74YVNSiU/xOHnrKJ59Rdt3GgQVUbxVHtDq9NVX/z0I0MV/OVOs6wuz
hgkvGW96wW7gojH97+239SWOHBVRvDUyVhy2WrPOYl5K4osUr/rtLKI3yjrc
rAVeNCsaTprbSWRyvrBqH4ULiTkUz76iZ+FUpyhG8XIFTHb4cjEnrDPrfYpn
JTrzjRfFvbvyQLR9dcFk1ihe5gtrxJ57dncllfS0mVyWYqdDvVeWE/J85aBV
UzxbDpXKeS7+Qq4OsGTnmEbGNExPFttasWXWkpT0KCe8gKzn4nMMpwaiF+8+
g5MfRfcmRvE5ZYCkeD8gzBrFq19ZaWUWw8hGWIpRfP6sZxuzG6Lof2qU278y
KV7KT1ISfCh9UBVRPJ136j0hcsqrIXq276hnkimvlOIrAtSeZT0Xz4JnEcXT
K2UXsvySU9jIHdWYs5h0ZmPystjulDHkWFl31LOvnLt3fDSzcE8l3F1RvFpt
+qUdyy9y/C8ZF4tBMoLtkOKlvfIpHoQuARqc4meydvTSS//eAXptq5HinyN3
G1Jd7lK81LYU/627j2ksXou3zmJupnjsG/Vb3B1uelR9Uh7iBhQvbQ27fOtb
3G2kH96Y4qFZaM2ZsL0oXg2G21L8TMK+xZjodWyyYNlmXRSwgn8vip+frT+/
/bZ+rI4UP4sb+VjNBvuyEehO8Y4kxecbTkaJy903oqijcVCKB/llwHoUb6WV
WQwjLrC/IW7YBrVQPHYDpg/uoh5oD6VykSooPidJSYp/7jnFE+auFK/qUkvx
VsrrRfEHlXQYNXjuh+Izk86s2UvG9s0pHgcHh93CvaB4J7OoESyT4tVlE/qf
cyEMtUjx86yMwxtv8M38YmNxWEopHo/F3DWT4tldNPQGjFKKZ/d85lM8zIs3
nj0c9+KzZ3NQjRSPYMjcAD9hPZ+f3UDoXHrzxSi+emTQgdXiirVgncXcTPGq
34KgZeaxdRSPWfgN9zY8f768KN5WTV06n+LZLUZ0clVQPOskrHvMd+NJEcUz
C+ZQPMs+8zOzMgNdLuZe+RQvjWJNT7pmpVYaL9q3wIGsOsQ639l43w6qiOKh
S9/6ljKJ5uw76t9++9+bolI3vly4jWjWXo/infACYhRfZDj6NzXcKSk+pwxY
j+JnI63M2jBiLlbLVEbxmbOefcL8kEWYQa7FZyYpFXxeeolPzFmzRQXFO1Pe
KqoXKd5Kee0Uvxig9izmMFbwzCzyHYrPLGzkjvImupykM9+1lxXb16N41cNl
V9WYrOKeWjzsiuKdatMq7ViCeOnuYxF0ZlmZxYlgu7oWj6dAXQXPBU/tJfL2
wlm4Ct3lVfIeGLyakzOV1EL91Vf5UF8uvE151V42mFkJzAbF06vbF+39S7NI
AXRZD0+kL8Xj6TAUojOasaEcnOfEa6UtqRRfOjLPPacfyG9NnsVsY7V658Os
Ubz0WxCMKnOMIopXyYJWJgxUHYpn0xMgkc6LV+8+Xwn9RJakTb3xxp3zsnJW
JsWzdQmoLqgd336bH04W7eqsf4M8PoB3hcG36oIqtQs9NPqANIo6y6gkxdNG
kD3pWhOdnmgallPALs/dfTEa3Ya2z0AYTlM939mgeDVyLlI8jL+FkBbFq4Ze
pPiLsYRIG7zk3VHPPD+nSJ7t8AJiFF9kOHqm9Ci0nHAoHu2Sn+5vKUnxi2XA
ehRvpZXZrsDVWT8Lis+c9ShYcZVoT+cpG5yjqJTinSR1WaL4+dm1GDo+zuL2
c+R3LmSJy/zQmvKXKop3Uh4L3RUU7/R2/5I/aqAGz8wi36H4zMJG7jg/MzoW
CTlJZ75rLyu2r0fxs7hSaa0ty5hs4R7N+C/e/dmgTaS+3Y5Vm7NWb6vrafit
OjhWZnEi2IYUjyUxyz44dy5ijRHnFH71InnOC04HsUuujUMde7nwAcQW0J3w
ExZI8XBQ/bIrStgH1iC9xMMwCjfDv+kIy9+Lx8GB1QC830Ztio4AuwlEhiA6
4DiGeKY4aPSr//Af7mxG2/nTP1W6oQ41bfCl7PelyN+LrxiZF8VDguhvamvW
WVDbSa9+UfuFLEnxqt+isdSJIA8n3ZsOLwuD9ESss7NMz/wZN8PdaakAnfH7
RsOdekQ2E+UvzdGhkLMMsvbF+K0fNrDsWPSkMHnJ05HWQTEfoF2lHKE2OBvv
qEcXhVOjC+N4Fm8/ezUTm3TULrQzeKZQZOIh0DrYvgyVci3uouViGjlZ5FHj
w2zfBjxrFD/fjbd0hYR5u5yqtOe0G7Sf2Ek/ttARpluyU87MRyBG8fmGY2fK
egt//Oqv3tmGDRfusmEp5UhSvF8GsAFhPqyGHbqNn7uttCI9EMRAm0q+oz5n
1qPYhUWQ5at7tq+U80tzEF7kJJJJ6pd+6c5Q0HGgtc0bb/y77WQeZIsq6FHI
YnQmgtgnrLdWCQeiFK+2r6a8+W7oZkfsFaD2LOYwVvCcM4p8Nt3kgCwWNiC5
I3wCk3ox6YCYvdTYTmeHalMQo3i62aJX0EOAMtFMDT7yLHZ1LX42qs3ZKO3w
E6vgtBCJ7aiW2VZasSi+UfJafMiXpPgQSFJ8hSQa3GxtWX0u3tKBVrxvJknx
J5b1e/GDyLqdfjYovuVATLuaetbb7ULqc/FbqdSLXjJup5+N34sPzfbLyk4v
di0+lKlhHSZf8lp8CCQpfv8Kit+JguIttVM8e2AQZF3y6658in/beK/X4AqK
H0cOBHWkeHg2RH64HwXFW9oPxVekFce9g+ItDQtlQfF1GtZh8hUUbykoHhUU
X6qgeEvtFC9v1IF7fm6jfIq/Za8OpKD4QaRiEaojxbOH++CTXd0yGhRvaT8U
X5pW1LUjVFC8pWGhLCi+TsM6TL6C4i0FxaOC4ksVFG+p1x31+ETJRXuF2npa
pHh8vuaWvTqQguLPLXwozL8Rpe8d9fSptMv+nhEOire0H4qf89IKPiLqX6YP
irc0LJQFxddpWIfJV1C8paB4VFB8qYLiLXWh+A1V9Fx8SCooPjT3pvidKyje
0q4ovqOC4i0NC2VB8XUa1mHyFRRvKSgeFRRfqqB4S0HxgysoPjQHxYeuCoof
TcNCWVB8nYZ1mHwFxVsKikcFxZcqKN5SUPzgCooPzUHxoauC4kfTsFAWFF+n
YR0mX0Hxlg5N8V/72tfe6qc/+qM/ShT/J3/yJx3bPLe++93v/t3f/d3Wvdij
/vZv//bv//7vt+5Fvf7mb/4m0cfWvTiwkvWTD2zdixvpO9/5TvKWv/7rv966
I7vTUCPz/1y1dS/2qLOOzFBRrkipLkrV0da92EBROdRpWIfJV/Kr5F1b92KP
OmIc/vrXvw4Uf+/evUtoO/3Wb/3W66+/vnUv9qjf+I3f+Pa3v711L+r1jW98
I6WVrXtxYP3Zn/3Zr//6r2/dixvpF37hF1KG/Ymf+ImtO7I7/ezP/mwamZ/8
yZ/cuiO30Kuvvvr7v//7W/dij/qDP/iDx48fb92L/nrjjTd+8zd/c+te7FF/
+qd/+ju/8ztb92ID/fIv//J3vvOdrXtxPP3xH//xmA6Tr+9+97vf/OY3t+7F
HvVXf/VXv/qrv7p1L8r08z//83gt/v/tp7/4i79Ijf/5n/95xzbPrX/6p396
5513tu7FHvX+++9/73vf27oX9frwww8TfWzdiwMrWf+9997buhc30j//8z8n
b/nggw+27sju9PTp03FG5smTJ+++++7Wvdij0sj84z/+49a96K+U/dOpbd2L
3emHP/xhMveYI/ODH/zg7bff3roXx1NymO9///tb92LXSpk0edfWvdidUrRJ
M+5YI5P6/M1vfhMo/vnnn5/6CZ6LT+V3xzbPrWSLNGhb92KP+tGPfpQK2q17
US94Ln7rXhxYyfoff/zx1r24keC5+B//+Mdbd2R3gufi0/hs3ZFb6IOrtu7F
HvXhhx++//77W/eiv1KU++ijj7buxe40Xx9zfvr06dYd2UCffvppYoqte3E8
Desw+Up+lerqrXuxO6Vok6A1sdjWHSkQfS4+KH5bBcVbCoofXEHxoSkoPnRV
UPxQCorfuhfH07AOk6+geFVB8VRB8aUKircUFD+4guJDU1B86Kqg+KEUFL91
L46nYR0mX0HxqoLiqYLiSxUUbykofnAFxYemoPjQVUHxQykofuteHE/DOky+
guJVnZLi4cX1r732WmnLFsU/evQIX6z35ptvVvb7jFIpvnq46C8O0M9TI/Td
hq+88oq6Oxz3wYMHaoNs9+Qe6osTZbPweak7qRR/IEdSKb6u/9IKT548oRug
fa0WpGUXXcI6XPqbdSZ1L/NEimRRfHV02rMsiu8eCqa7pk/tq7tLh2H7yl2S
C2GzzDo0Vsg2fTkUfz5PUCm+e9BYnPuOKelXzHmSZWmzrM0WH5gMij9QOrCk
UnyXWa9meYzerFnH4iDVdszirFmWKYpOxKH48816JpXiG10dLEUn7Bo1IT2W
GiJQjqdVS3WYE4SIjlIpvnqInB2dNCE3oPvm5xd5UAw4rDymvVU741D8bqON
Q/EwhpBwe1F8Gnys86H9mE0oSfHVw0VjKXisuhm4ugzaGNWdEgu2sfrz4Cr2
Ic70doo/liNJiq/uf9rLSrLwbWrZsfiiZaVLUHtB8GQb32DkJcU3Rqc9S6X4
NUIBjB6mOTWvWQ7jeBr9kBkI/gl/g/NYpZ0qleLP6gmS4lcKGig59x1Tps2w
M+AkfvGP/2z0gUmj+GOlA0uS4lssjqNqWQcrYdqmY3G/DxAN1M6AlannFBlI
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
+MsvvsPIFqAz0ivUHfOviUiKP7EnSIqf1g8aMh1YpqSfSx+gH7Ik0ugDk0bx
iyNzCEmKn2otziKzNbvVh6csi093pxsz6z3yOwjWdTHHzRxJij/xrGeSFD/V
ugQVo/hVa8LFOX4bip9OESI6SlL81OBa1o5+mmAbyDs3rB2daKPe6YG+d+/u
z7WAqPdKit9/tFm8Fl8ti+JDllSKD00GxR9IKsWH8mVdiz+lLIoPOdfizyeV
4kOTQfEnkErxIeda/OmlUnxoUcM6TL5Uig851+J3q6D4/Sgo3lJQ/OAKig9N
QfGhq4Lih1JQ/Na9OJ6GdZh8BcWrCoqnCoovVVC8paD4wRUUH5qC4kNXBcUP
paD4rXtxPA3rMPkKilcVFE8VFF+qoHhLQfGDKyg+NAXFh64Kih9KQfFb9+J4
GtZh8hUUryoonioovlRB8ZaC4gdXUHxoCooPXRUUP5SC4rfuxfE0rMPkKyhe
VVA8VVB8qYLiLQXFD66g+NAUFB+6Kih+KAXFb92L42lYh8lXULyqo1P8Cy+8
MPcTUHyaTR3bPLeS57z33ntb92KPStEmudPWvagXUPzWvTiwkvWTD2zdixsJ
KP6rr77auiO7E1D8l19+uXVHbqGE8KkQ3boXe9SHV23di/568uRJorate7FH
pTLyk08+2boXG+jzzz9PTLF1L46nYR0mX4niv/jii617sUe98847n3322da9
KFNQ/E4UFG8pKH5wBcWH5qD40FVB8aNpWCgLiq/TsA6Tr6B4S0HxqKD4UgXF
WwqKH1xB8aE5KD50VVD8aBoWyoLi6zSsw+QrKN5SUDwqKL5UQfGWguIHV1B8
aA6KD10VFD+ahoWyoPg6Desw+QqKtxQUjwqKL1VQvKWg+MEVFB+ag+JDVwXF
j6ZhoSwovk7DOky+guItBcWjguJLFRRvKSh+cAXFh+ag+NBVQfGjaVgoC4qv
07AOk6+geEtnoviUKC9Epc06FH///v301euvv17f6TNKpfiXX34ZTfDWW29l
NgUjDEp/q9vgBg8fPlQ/T1KLJXQM1p/UjrUj9SV2uBxZFH8UR1Ipvs6yIPXE
qdFRjx8/ptukf8qDpj+cXUBgXPkVixKlJ5Ipi+KP4gBFsii+zmGcMO47DJ3O
FxH/mc+w+Z4ZCkodxqH483mCSvHVQYPaWp3g+C2LzzRi0OFdDBrrpQOL4o/u
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
8xXKnj59unVHNtCnn36aaGvrXhxPwzpMvpJfpbp6617sTinaJGhNLLZ1RwoU
FL8fBcVbCoofXEHxoSkoPnRVUPxQCorfuhfH07AOk6+geFVB8VRB8aUKircU
FD+4guJDU1B86Kqg+KEUFL91L46nYR0mX0HxqoLiqYLiSxUUbykofnAFxYem
oPjQVUHxQykofuteHE/DOky+guJVBcVTBcWXKijeUlD84AqKD01B8aGrguKH
UlD81r04noZ1mHwFxas6H8Xfu3fv8kylLTsUD82+9tprlZ0+qVSKf/ToEZrg
zTffzG/Nsl1q5EL0yiuv0G8fPHhAv2Vtpo3xq9Qx/DyZ8qJJ3SAdIv8sQCrF
V4/M7aVSfGP/wVLUCtTiqn2pcZ88eUJbsywrv6XTlnmLtXu7VIo/kAMUyaL4
lvP1Q641Nx2HAaUPnf5Ah9X5jr6a/sg/C4viT+kJKsVXn6m1I0sHvg/Qqb24
I/1KdZ5qqRR/Ah9QKb7lvOi+aAInTSzmcT9N+OECY0WpM1gUfwKLL0ql+IoT
p4ZDYexdnMusBSuAqKlf3RGdQXami4Z1mHypFH9j3Jjs2pLtzj6XlaflWqXl
qEPxu+VWh+LpmINxi1pWKR5MBslih6OxrSTFJ1/F4AZDlzmzMm0HDi9nlrpj
2oyFfWtH6DkmAjA3PWLpzJIUXz0ym0hSfGP/sdxyRhJshM2mw+HGcESspnzL
UjfwZy4Yd415LSn+WA5QJJXiq8/XD7lOU47D0F5ZGR/zLysIW4K/SvFn9QRJ
8dVn6uwIZrLAioZxFrr9HamJwUly+pkpSfHn8AFJ8dXnlZ9nWZpgog7gpwk/
XMCJWGHEl0rx57D4oiTF9zpxai9/Lk/X6awuxkIwxx2ly1k7gn+uZ7JhHSZf
kuJvjxt+bZk6k7qkNgifZ/atCDdUit85t1oUTyM2qLT/kuLT7jCjIWjscDS2
FaN4GVpp4HVUZDuappkW87u1fOrbt2JFiFF89chsJUbx7f2HisjfixqILqTQ
FhZ3lNnWcZgKy2aKUfzhHKBIkuKrz9cPuU4pleMw2KbaCORZ6S0tkV9S/Ik9
gVF89Zn6OzoFvFyUA4Mu7qh2oGO6ZxR/Gh9gFN9yXvlVbnUez88vqSfwdy+K
P43FF8UovteJs6Dtz2U665lYUmBu4Ox4Y4ofx2HyxSj+9rjh15bpD2ikkeLT
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
uDmQV2tZvDWO5BM0YfEcy+Kf1uth4KCPSYvP4eMzf35mTVq8E3F+Zq3W4i8/
k7QsfmwRIJz7iP2BQF3Qn3JwPj3gYUrTJkw5lsUP1A2/aDjVZnEnpQ8dX+a0
+MW4HsayeHnMZ+auxFEtfsjuUoskrQ0eGUHHWuFIV1h8J6rF90TW33AZoM0T
nXyYhgOb/DknMOdf2ONKoAiPJSy+LWGqFlQfV8WXsvaztU7KFnjYEaUTPyMP
z+UgaCCOK+rznz1Fg58Ry5dA0FvqyTW1gEMOOMOEP47wyhMWz1Et/sm9ngv+
y5dzZwsb2fkehgm5fJ3wI25Vg4xl8TPMJFWLH14EFvYYOlXwYSUQPnXBzSkH
QflmfV0z0yZMOarFj9UNv2gsdrXJn1QnpQ8dXya3eAi3tHh5I5Wcp80MWPzA
3XUTR0HV4slvUyX4cXJomPpFYfEqYPH9kXU2XA2BvNNNjSz/sPVFL+ziN8iE
B0V/md7imxOmakH1kF0GZuYcOOyTPy9ffCd+q+XFvhn/wx3+yswWP3A4SEvx
ORXsZOcmx5wDkCrwpzOOwLQqLJ4DFn+QXp+TgabTcAhXvYSe/+lHHLS90OLn
mUmCxT+uCKj336kL8uA6C5ZMOSgZHhG4aROmHLD4B+mGUzQkvNoAfFL60PFl
WotXa6+0eHlsx5nCTQhY/KjdJTPZOv4pB3T1KaNh8bWAxfdH1tlw9ZCazAGn
RHN7koLGo/8ibmeTx4uGMLnFNydM1YL+M+ucBeVJFlXhF22kcMIn1zCzxY8a
Dvh0aKmMSP7GfBONJN8hq44j/IQgUPggrGUai9+919Ookd8CVefPm7Jimr7U
j/g78UvTBP8iafHzzCTB4h9UBPjDkZatWdzL2yt5rAU3pxyPU/hFWPw8CVMO
WPyDdMMpGuqC1vSDT0ofOr7MafH8gluO+nvx/PItVTdmRv5e/ObukkelJPAB
v3i+sF9wVk+xLWHx9cjfi++MrLPhN8OjedScQ5Q0rcp/yrue+Z9wrZS83G4U
k1v80pEw5SXXyhx/QRl0yjTnQpH8LfIoEGE9a2Vmi19GDAfQYRdRsdUD8s43
EnJaVTKOLHEu/i3y9+J37PWfxN3KtHvzK2BwHOe6HT/ihefil2lmkvL34h9R
BKhiq/fQqcvmb/QX9Kcc5Fbbu6CJaROmHPl78Y/QjcKiIasNNOymnSbgy44a
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
Pb///e//H1F2c0Q=
    "], {{0, 452.25}, {1009.5, 0}}, {0, 255},
    FunctionRepository`$d2c37e36addc49439c358745b7c94da3`Temp`\
SmoothingQuality -> "High",
    ColorFunction->RGBColor,
    ImageResolution->{96., 96.}],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{1009.5, 452.25},
  PlotRange->{{0, 1009.5}, {0, 452.25}}]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{
  3.8481414665779037`*^9, {3.848141570061434*^9, 3.848141597514613*^9}, {
   3.84814164948563*^9, 3.848141656350191*^9}, 3.8481417363728447`*^9, {
   3.8481417746118307`*^9, 3.8481417949731007`*^9}},
 CellLabel->"Out[13]=",
 CellID->328073772]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "5572c38e48502487"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "72bc4566351d4678"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "9285e358-321f-4108-bac6-772a27792f0f"],
 "\[NonBreakingSpace]",
 "Properties and Relations",
 "\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "78fcb1cc-1c28-402b-8ea0-28230f55149a"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "72bc4566351d4678"},ExpressionUUID->"227e1f77-26f6-4257-b599-5307043cf44e"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox["GridTableForm", "InlineResourceFunction"]], "Text", 
  "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " is related to both ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TableForm", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/TableForm",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " and ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Grid", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Grid",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ". The relation with ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TableForm", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/TableForm",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " can be seen in this example:"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786463052582925*^9, 3.786463112693754*^9}, 
   3.78938566508336*^9},
 CellID->1367033750],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "14", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"arr3", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "3"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", "=", 
   RowBox[{"RandomWord", "[", "3", "]"}]}], ";"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786463124472361*^9, 3.786463150100417*^9}, {
   3.786463193584126*^9, 3.786463215903839*^9}, {3.786463379191221*^9, 
   3.786463418159679*^9}, {3.786463653448024*^9, 3.786463694057118*^9}, 
   3.786464505110897*^9},
 CellLabel->"In[1]:=",
 CellID->614829983],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"arr3", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "header"}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786463124472361*^9, 3.7864632198413343`*^9}, {
   3.7864634203878593`*^9, 3.786463426405878*^9}, 3.786541722153426*^9, 
   3.7870768095522685`*^9},
 CellLabel->"In[4]:=",
 CellID->1926719825],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"manifest\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"audiology\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"equable\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "51", "24", "11"},
    {"2", "86", "32", "6"},
    {"3", "5", "48", "3"},
    {"4", "27", "64", "24"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 5 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864631595205708`*^9, 3.7864632233038473`*^9}, {
   3.786463421238236*^9, 3.7864634267376833`*^9}, {3.786463673066258*^9, 
   3.7864636966316032`*^9}, 3.786464057556858*^9, 3.7864645189099092`*^9, 
   3.7865403153059893`*^9, {3.7865417054385633`*^9, 3.78654174033392*^9}, 
   3.8481417364551973`*^9},
 CellLabel->"Out[4]=",
 CellID->979195405]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"arr3", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"Automatic", ",", "header"}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786463124472361*^9, 3.786463150100417*^9}, {
   3.786463193584126*^9, 3.786463215903839*^9}, {3.786463379191221*^9, 
   3.786463418159679*^9}, 3.786463653448024*^9, 3.786464511321447*^9},
 CellLabel->"In[5]:=",
 CellID->1896506156],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      StyleBox["\[Null]",
       ShowStringCharacters->False], 
      TagBox["\<\"manifest\"\>",
       HoldForm], 
      TagBox["\<\"audiology\"\>",
       HoldForm], 
      TagBox["\<\"equable\"\>",
       HoldForm]},
     {"1", "51", "24", "11"},
     {"2", "86", "32", "6"},
     {"3", "5", "48", "3"},
     {"4", "27", "64", "24"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {False, True, {False}, False}, 
      "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {OutputFormsDump`HeadedRows, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[
   BoxForm`e$, 
    TableHeadings -> {
     Automatic, {"manifest", "audiology", "equable"}}]]]], "Output", \
"ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786463139998765*^9, 3.78646315058524*^9}, {
   3.786463194529765*^9, 3.786463222195685*^9}, {3.7864633803868227`*^9, 
   3.7864634184710703`*^9}, {3.7864636731131983`*^9, 3.786463698263001*^9}, 
   3.786464057582745*^9, 3.786464518970405*^9, 3.786540315335915*^9, {
   3.786541705535659*^9, 3.786541740343914*^9}, 3.8481417364954567`*^9},
 CellLabel->"Out[5]//TableForm=",
 CellID->1169984874]
}, Open  ]],

Cell[TextData[{
 "In order to produce a similar result using ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["Grid", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/Grid",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ", several data ",
 Cell[BoxData["\"\<augmentations\>\""], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " and option specifications have to be made:"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786463307760079*^9, 3.786463358420483*^9}, {
   3.786463504076638*^9, 3.786463536835881*^9}, {3.786463596034127*^9, 
   3.786463631675214*^9}, 3.789385675852685*^9, 3.7894730838523884`*^9},
 CellID->688803974],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Prepend", ",", 
       RowBox[{"{", 
        RowBox[{"arr3", ",", 
         RowBox[{"Range", "[", 
          RowBox[{"Length", "[", "arr3", "]"}], "]"}]}], "}"}]}], "]"}], ",", 
     
     RowBox[{"Prepend", "[", 
      RowBox[{"header", ",", "\"\<\>\""}], "]"}]}], "]"}], ",", 
   RowBox[{"Dividers", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"False", ",", "True"}], "}"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.786463162288313*^9, 3.78646316284846*^9}, {
   3.7864632263313313`*^9, 3.786463298253756*^9}, {3.786463551609571*^9, 
   3.7864635832995653`*^9}, 3.786464514114307*^9, 3.786541734462352*^9},
 CellLabel->"In[6]:=",
 CellID->1799939294],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\"\>", "\<\"manifest\"\>", "\<\"audiology\"\>", "\<\"equable\"\>"},
    {"1", "51", "24", "11"},
    {"2", "86", "32", "6"},
    {"3", "5", "48", "3"},
    {"4", "27", "64", "24"}
   },
   AutoDelete->False,
   GridBoxDividers->{"Columns" -> {False, True}, "Rows" -> {False, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{
  3.78646323574186*^9, {3.786463288713849*^9, 3.786463299184473*^9}, {
   3.786463565665083*^9, 3.786463583647504*^9}, {3.786463673122581*^9, 
   3.786463700043535*^9}, 3.786464057591222*^9, 3.786464518978649*^9, 
   3.7865403153448973`*^9, {3.7865417055968723`*^9, 3.786541740395171*^9}, 
   3.848141736503881*^9},
 CellLabel->"Out[6]=",
 CellID->1575505386]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "72bc4566351d4678"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "794ec000bd35f2d8"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "d9c59b9f-dca4-4c38-a3f7-4e57bce2945c"],
 "\[NonBreakingSpace]",
 "Possible Issues",
 "\[NonBreakingSpace]",
 Cell["(3)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "3b947edb-4a98-4059-9a3a-8a86d68414ef"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "794ec000bd35f2d8"},ExpressionUUID->"ff2a0506-8ee1-44df-b4e4-9c29bb988bf4"],

Cell[TextData[{
 "If the specified table headings are styled, the specification given to the \
option ",
 Cell[BoxData["\"\<TableHeadingsStyle\>\""], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " has no effect:"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786538553882538*^9, 3.7865386101438007`*^9}, {
  3.7870765253501577`*^9, 3.787076530925144*^9}},
 CellID->362505278],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"Map", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"#", ",", "Red", ",", "Bold"}], "]"}], "&"}], ",", 
      RowBox[{"RandomWord", "[", "7", "]"}]}], "]"}]}], ",", 
   RowBox[{"\"\<TableHeadingsStyle\>\"", "\[Rule]", "Black"}]}], 
  "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.786455127311882*^9}, {
   3.786455242694955*^9, 3.786455252346487*^9}, {3.786455391153957*^9, 
   3.786455414754417*^9}, 3.7870768104047456`*^9},
 CellLabel->"In[1]:=",
 CellID->156936131],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"regally\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"unsecured\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"vitality\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"rhea\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"uncoiled\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"inhospitable\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]], 
     StyleBox[
      StyleBox["\<\"absence\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[1, 0, 0],
       FontWeight->Bold,
       FontColor->RGBColor[1, 0, 0],
       $CellContext`LineColor -> RGBColor[1, 0, 0],
       $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
       $CellContext`BackFaceColor -> RGBColor[1, 0, 0]],
      StripOnInput->False,
      FrontFaceColor->GrayLevel[0],
      FontColor->GrayLevel[0],
      $CellContext`LineColor -> GrayLevel[0],
      $CellContext`GraphicsColor -> GrayLevel[0],
      $CellContext`BackFaceColor -> GrayLevel[0]]},
    {"1", "50", "93", "63", "48", "57", "80", "44"},
    {"2", "80", "87", "10", "21", "63", "32", "64"},
    {"3", "62", "89", "15", "85", "23", "41", "31"},
    {"4", "67", "47", "87", "78", "99", "80", "51"},
    {"5", "51", "14", "48", "18", "59", "87", "6"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786455310742021*^9, 3.7864553439410458`*^9}, {
   3.786455382619843*^9, 3.786455415478724*^9}, 3.786456084169368*^9, 
   3.786456309962037*^9, 3.78645691567273*^9, 3.786457539920141*^9, 
   3.786457741282002*^9, 3.786462058013184*^9, {3.7864621595754843`*^9, 
   3.786462161221159*^9}, 3.786462526366303*^9, {3.7864626371266413`*^9, 
   3.7864626557625093`*^9}, 3.786462694076819*^9, 3.786464057670088*^9, 
   3.7864645193306427`*^9, 3.7865403174882317`*^9, 3.7865417056954813`*^9, 
   3.786541740521205*^9, 3.848141736572442*^9},
 CellLabel->"Out[1]=",
 CellID->1045654992]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->1639461050],

Cell["The background is extended for the extended row names:", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786538621732068*^9, 3.786538643037269*^9}, {
  3.7865414993876457`*^9, 3.7865415658353453`*^9}},
 CellID->112395677],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "7"}], "}"}]}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"RandomWord", "[", "3", "]"}], ",", 
      RowBox[{"RandomWord", "[", "3", "]"}]}], "}"}]}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864550126301813`*^9, 3.786455127311882*^9}, {
   3.786455242694955*^9, 3.786455252346487*^9}, {3.786455391153957*^9, 
   3.786455414754417*^9}, {3.7864577856001177`*^9, 3.7864578245921593`*^9}, 
   3.787076811031726*^9},
 CellLabel->"In[1]:=",
 CellID->124037520],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"playing\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"undulation\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"glimmering\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], "\[SpanFromLeft]", 
     "\[SpanFromLeft]", "\[SpanFromLeft]", "\[SpanFromLeft]"},
    {"\<\"emendation\"\>", "63", "38", "34", "52", "31", "34", "31"},
    {"\<\"surrealism\"\>", "57", "15", "12", "22", "72", "38", "69"},
    {"\<\"eclogue\"\>", "68", "86", "10", "1", "24", "34", "73"},
    {"\[SpanFromAbove]", "93", "64", "54", "9", "72", "34", "31"},
    {"\[SpanFromAbove]", "95", "68", "71", "37", "44", "49", "83"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 8 -> GrayLevel[0.8], 9 -> GrayLevel[0.8], 9 -> 
       GrayLevel[0]}, "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786457816234107*^9, 3.7864578249868383`*^9}, 
   3.7864620580686417`*^9, {3.786462159612056*^9, 3.786462161260113*^9}, 
   3.78646252641254*^9, {3.7864626371731567`*^9, 3.7864626558106833`*^9}, 
   3.786462694118555*^9, 3.786464057707342*^9, 3.786464519395496*^9, 
   3.786540317548088*^9, 3.786541705738369*^9, 3.7865417405801277`*^9, 
   3.8481417366131353`*^9},
 CellLabel->"Out[1]=",
 CellID->1464767143]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 InterpretationBox[Cell["\t", "ExampleDelimiter"],
  $Line = 0; Null]], "ExampleDelimiter",
 TaggingRules->{},
 CellID->680236658],

Cell["\<\
If the specified table headings value is a list with one element, that \
element is treated as a row names specification. Compare the following \
examples:\
\>", "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786538659259385*^9, 3.786538664040888*^9}, {
  3.7865390883682404`*^9, 3.786539185140725*^9}, {3.786541585080687*^9, 
  3.786541585777595*^9}},
 CellID->1682058025],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"arr4", "=", 
   RowBox[{"RandomInteger", "[", 
    RowBox[{"100", ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "5"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"header", "=", 
   RowBox[{"RandomWord", "[", "5", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"GridTableForm", "[", 
  RowBox[{"arr4", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", "header", "}"}]}]}], "]"}]}], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864623076225967`*^9, 3.786462318014902*^9}, {
   3.78653880789257*^9, 3.786538813307873*^9}, {3.786538980488549*^9, 
   3.786538995359158*^9}, 3.7870768120205746`*^9},
 CellLabel->"In[1]:=",
 CellID->1490278681],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["1",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["2",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["3",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["4",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["5",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"\<\"observantly\"\>", "78", "94", "90", "4", "41"},
    {"\<\"apricot\"\>", "80", "76", "54", "30", "39"},
    {"\<\"collarless\"\>", "61", "43", "4", "19", "73"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 7 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786462303585183*^9, 3.786462318208393*^9}, 
   3.786462526453771*^9, {3.786462637222281*^9, 3.786462655855205*^9}, 
   3.786462694157783*^9, 3.786464057734716*^9, 3.786464519448346*^9, {
   3.786538683592565*^9, 3.786538700368001*^9}, 3.786538814075309*^9, 
   3.786538930817273*^9, 3.786539001733221*^9, 3.78654031760961*^9, 
   3.786541705781492*^9, 3.78654174064225*^9, 3.8481417366599913`*^9},
 CellLabel->"Out[3]=",
 CellID->1736326840]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GridTableForm", "[", 
  RowBox[{"arr4", ",", 
   RowBox[{"TableHeadings", "\[Rule]", "header"}]}], "]"}]], "Input", \
"ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864623076225967`*^9, 3.786462318014902*^9}, {
   3.786538803028247*^9, 3.786538819328074*^9}, {3.7865389992093887`*^9, 
   3.7865389998365726`*^9}, 3.787076812641808*^9},
 CellLabel->"In[4]:=",
 CellID->1549422317],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"#\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"observantly\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"apricot\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"collarless\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"contentedly\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
     StyleBox["\<\"deign\"\>",
      StripOnInput->False,
      FrontFaceColor->RGBColor[0, 0, 1],
      FontFamily->"Times",
      FontColor->RGBColor[0, 0, 1],
      $CellContext`LineColor -> RGBColor[0, 0, 1],
      $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
      $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
    {"1", "78", "94", "90", "4", "41"},
    {"2", "80", "76", "54", "30", "39"},
    {"3", "61", "43", "4", "19", "73"}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
       GrayLevel[1], 
       GrayLevel[0.96], 
       GrayLevel[1], 
       GrayLevel[0.96]}},
   GridBoxDividers->{
    "ColumnsIndexed" -> {
      1 -> GrayLevel[0], 2 -> GrayLevel[0], 3 -> GrayLevel[0.8], 4 -> 
       GrayLevel[0.8], 5 -> GrayLevel[0.8], 6 -> GrayLevel[0.8], 7 -> 
       GrayLevel[0.8], 7 -> GrayLevel[0]}, 
     "Rows" -> {True, True, {False}, True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{3.786538819857419*^9, 3.786538933453466*^9, 
  3.7865390030774593`*^9, 3.786540318585339*^9, 3.786541705790824*^9, 
  3.7865417406528177`*^9, 3.8481417366710587`*^9},
 CellLabel->"Out[4]=",
 CellID->289920797]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "794ec000bd35f2d8"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "ExampleSection", "0e781f71d141eda7"}, 
       Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "e4baf352-6333-4d3a-bfb5-48b41f8a7acc"],
 "\[NonBreakingSpace]",
 "Neat Examples",
 "\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",
  FontSize->11,
  FontWeight->"Plain",
  FontColor->GrayLevel[0.564706],ExpressionUUID->
  "aeb57d7d-469a-4eaa-8269-aa466d2d5daf"]
}], "ExampleSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "0e781f71d141eda7"},ExpressionUUID->"4a83ff21-c875-41a3-88c4-044ff6df9455"],

Cell[TextData[{
 "This example is similar to the ",
 Cell[BoxData["\"\<neat example\>\""], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 " in the function page of ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["TableForm", "SymbolsRefLink",
     ShowStringCharacters->True,
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      FEPrivate`If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/TableForm",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ":"
}], "ExampleText",
 TaggingRules->{},
 CellChangeTimes->{{3.786464223190309*^9, 3.786464224326169*^9}, {
   3.786464306037055*^9, 3.7864643511865883`*^9}, {3.7864651218324947`*^9, 
   3.786465136033078*^9}, 3.789385691891737*^9},
 CellID->1027100926],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"GridTableForm", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"StirlingS2", "[", 
        RowBox[{"n", ",", "k"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"n", ",", "1", ",", "28"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", "28"}], "}"}]}], "]"}], ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"{", "White", "}"}]}], ",", 
     RowBox[{"Dividers", "\[Rule]", "None"}], ",", 
     RowBox[{"\"\<RowBackground\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", "LightBlue"}], "}"}]}]}], "]"}], ",", "2", ",", 
   "Bold", ",", "Red"}], "]"}]], "Input", "ExampleInput",
 TaggingRules->{},
 CellChangeTimes->{{3.7864641065847282`*^9, 3.786464135639052*^9}, {
  3.786464167771277*^9, 3.786464203737918*^9}, {3.786464383081544*^9, 
  3.786464402432775*^9}, {3.786464904706729*^9, 3.7864652394543343`*^9}},
 CellLabel->"In[1]:=",
 CellID->808954176],

Cell[BoxData[
 StyleBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"#\"\>",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["1",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["2",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["3",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["4",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["5",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["6",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["7",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["8",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["9",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["10",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["11",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["12",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["13",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["14",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["15",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["16",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["17",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["18",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["19",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["20",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["21",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["22",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["23",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["24",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["25",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["26",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["27",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]], 
      StyleBox["28",
       StripOnInput->False,
       FrontFaceColor->RGBColor[0, 0, 1],
       FontFamily->"Times",
       FontColor->RGBColor[0, 0, 1],
       $CellContext`LineColor -> RGBColor[0, 0, 1],
       $CellContext`GraphicsColor -> RGBColor[0, 0, 1],
       $CellContext`BackFaceColor -> RGBColor[0, 0, 1]]},
     {"1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"2", "1", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"3", "1", "3", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"4", "1", "7", "6", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"5", "1", "15", "25", "10", "1", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0"},
     {"6", "1", "31", "90", "65", "15", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"7", "1", "63", "301", "350", "140", "21", "1", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"8", "1", "127", "966", "1701", "1050", "266", "28", "1", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"9", "1", "255", "3025", "7770", "6951", "2646", "462", "36", "1", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0"},
     {"10", "1", "511", "9330", "34105", "42525", "22827", "5880", "750", 
      "45", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"11", "1", "1023", "28501", "145750", "246730", "179487", "63987", 
      "11880", "1155", "55", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0"},
     {"12", "1", "2047", "86526", "611501", "1379400", "1323652", "627396", 
      "159027", "22275", "1705", "66", "1", "0", "0", "0", "0", "0", "0", "0",
       "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"13", "1", "4095", "261625", "2532530", "7508501", "9321312", "5715424",
       "1899612", "359502", "39325", "2431", "78", "1", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"14", "1", "8191", "788970", "10391745", "40075035", "63436373", 
      "49329280", "20912320", "5135130", "752752", "66066", "3367", "91", "1",
       "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"15", "1", "16383", "2375101", "42355950", "210766920", "420693273", 
      "408741333", "216627840", "67128490", "12662650", "1479478", "106470", 
      "4550", "105", "1", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0"},
     {"16", "1", "32767", "7141686", "171798901", "1096190550", "2734926558", 
      "3281882604", "2141764053", "820784250", "193754990", "28936908", 
      "2757118", "165620", "6020", "120", "1", "0", "0", "0", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"17", "1", "65535", "21457825", "694337290", "5652751651", 
      "17505749898", "25708104786", "20415995028", "9528822303", "2758334150",
       "512060978", "62022324", "4910178", "249900", "7820", "136", "1", "0", 
      "0", "0", "0", "0", "0", "0", "0", "0", "0", "0"},
     {"18", "1", "131071", "64439010", "2798806985", "28958095545", 
      "110687251039", "197462483400", "189036065010", "106175395755", 
      "37112163803", "8391004908", "1256328866", "125854638", "8408778", 
      "367200", "9996", "153", "1", "0", "0", "0", "0", "0", "0", "0", "0", 
      "0", "0"},
     {"19", "1", "262143", "193448101", "11259666950", "147589284710", 
      "693081601779", "1492924634839", "1709751003480", "1144614626805", 
      "477297033785", "129413217791", "23466951300", "2892439160", 
      "243577530", "13916778", "527136", "12597", "171", "1", "0", "0", "0", 
      "0", "0", "0", "0", "0", "0"},
     {"20", "1", "524287", "580606446", "45232115901", "749206090500", 
      "4306078895384", "11143554045652", "15170932662679", "12011282644725", 
      "5917584964655", "1900842429486", "411016633391", "61068660380", 
      "6302524580", "452329200", "22350954", "741285", "15675", "190", "1", 
      "0", "0", "0", "0", "0", "0", "0", "0"},
     {"21", "1", "1048575", "1742343625", "181509070050", "3791262568401", 
      "26585679462804", "82310957214948", "132511015347084", 
      "123272476465204", "71187132291275", "26826851689001", "6833042030178", 
      "1204909218331", "149304004500", "13087462580", "809944464", "34952799",
       "1023435", "19285", "210", "1", "0", "0", "0", "0", "0", "0", "0"},
     {"22", "1", "2097151", "5228079450", "727778623825", "19137821912055", 
      "163305339345225", "602762379967440", "1142399079991620", 
      "1241963303533920", "835143799377954", "366282500870286", 
      "108823356051137", "22496861868481", "3295165281331", "345615943200", 
      "26046574004", "1404142047", "53374629", "1389850", "23485", "231", "1",
       "0", "0", "0", "0", "0", "0"},
     {"23", "1", "4194303", "15686335501", "2916342574750", "96416888184100", 
      "998969857983405", "4382641999117305", "9741955019900400", 
      "12320068811796900", "9593401297313460", "4864251308951100", 
      "1672162773483930", "401282560341390", "68629175807115", 
      "8479404429331", "762361127264", "49916988803", "2364885369", 
      "79781779", "1859550", "28336", "253", "1", "0", "0", "0", "0", "0"},
     {"24", "1", "8388607", "47063200806", "11681056634501", 
      "485000783495250", "6090236036084530", "31677463851804540", 
      "82318282158320505", "120622574326072500", "108254081784931500", 
      "63100165695775560", "24930204590758260", "6888836057922000", 
      "1362091021641000", "195820242247080", "20677182465555", 
      "1610949936915", "92484925445", "3880739170", "116972779", "2454606", 
      "33902", "276", "1", "0", "0", "0", "0"},
     {"25", "1", "16777215", "141197991025", "46771289738810", 
      "2436684974110751", "37026417000002430", "227832482998716310", 
      "690223721118368580", "1167921451092973005", "1203163392175387500", 
      "802355904438462660", "362262620784874680", "114485073343744260", 
      "25958110360896000", "4299394655347200", "526655161695960", 
      "48063331393110", "3275678594925", "166218969675", "6220194750", 
      "168519505", "3200450", "40250", "300", "1", "0", "0", "0"},
     {"26", "1", "33554431", "423610750290", "187226356946265", 
      "12230196160292565", "224595186974125331", "1631853797991016600", 
      "5749622251945664950", "11201516780955125625", "13199555372846848005", 
      "10029078340998476760", "5149507353856958820", "1850568574253550060", 
      "477898618396288260", "90449030191104000", "12725877242482560", 
      "1343731795378830", "107025546101760", "6433839018750", "290622864675", 
      "9759104355", "238929405", "4126200", "47450", "325", "1", "0", "0"},
     {"27", "1", "67108863", "1270865805301", "749329038535350", 
      "61338207158409090", "1359801318005044551", "11647571772911241531", 
      "47628831813556336200", "106563273280541795575", 
      "143197070509423605675", "123519417123830092365", 
      "71823166587281982600", "29206898819153109600", "8541149231801585700", 
      "1834634071262848260", "294063066070824960", "35569317763922670", 
      "3270191625210510", "229268487458010", "12246296312250", "495564056130",
       "15015551265", "333832005", "5265000", "55575", "351", "1", "0"},
     {"28", "1", "134217727", "3812664524766", "2998587019946701", 
      "307440364830580800", "8220146115188676396", "82892803728383735268", 
      "392678226281361931131", "1006698291338432496375", 
      "1538533978374777852325", "1501910658871554621690", 
      "985397416171213883565", "451512851236272407400", 
      "148782988064375309400", "36060660300744309600", "6539643128396047620", 
      "898741468057510350", "94432767017711850", "7626292886912700", 
      "474194413703010", "22653141490980", "825906183960", "22693687380", 
      "460192005", "6654375", "64701", "378", "1"}
    },
    AutoDelete->False,
    FrameStyle->{
      GrayLevel[1]},
    GridBoxAlignment->{"Columns" -> {{Left}}},
    GridBoxBackground->{"Columns" -> {{Automatic}}, "Rows" -> {
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1], 
        RGBColor[0.87, 0.94, 1], 
        GrayLevel[1]}},
    GridBoxDividers->{"Columns" -> {{None}}, "Rows" -> {{None}}},
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
   "Grid"],
  StripOnInput->False,
  FrontFaceColor->RGBColor[1, 0, 0],
  FontSize->2,
  FontWeight->Bold,
  FontColor->RGBColor[1, 0, 0],
  $CellContext`LineColor -> RGBColor[1, 0, 0],
  $CellContext`GraphicsColor -> RGBColor[1, 0, 0],
  $CellContext`BackFaceColor -> RGBColor[1, 0, 0]]], "Output", "ExampleOutput",
 TaggingRules->{},
 CellChangeTimes->{{3.786465144411153*^9, 3.7864651740714483`*^9}, {
   3.786465205832024*^9, 3.7864652397513027`*^9}, 3.78654031872232*^9, 
   3.786541705883864*^9, 3.7865417407745333`*^9, 3.848141736742777*^9},
 CellLabel->"Out[1]=",
 CellID->58440136]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "ExampleSection", "0e781f71d141eda7"}, Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "PrimaryExamplesSection", "77ee9129cd444e2b"}, 
  Open]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection", "14181d5d246bbbf7"},
        Closed], 
      Alternatives[True, Open]], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-1., 0.5}, {0, -0.5}, {1., 0.5}}]}, 
      PlotRange -> {{-2, 2}, {-3, 2}}, ImageSize -> 14], 
     Graphics[{
       Thickness[0.18], 
       RGBColor[0.8509803921568627, 0.396078431372549, 0], 
       Line[{{-0.5, -1.}, {0.5, 0.}, {-0.5, 1.}}]}, 
      PlotRange -> {{-2.5, 1.5}, {-3, 2}}, ImageSize -> 14]], StandardForm],
   ImageSizeCache->{14., {6., 12.}}]],ExpressionUUID->
  "e8b2abc9-4e1e-47ba-834f-2c14b666b2a8"],
 "\[NonBreakingSpace]",
 "Resource Information",
 "\[NonBreakingSpace]"
}], "PrimaryExamplesSection",
 ShowGroupOpener->False,
 WholeCellGroupOpener->True,
 TaggingRules->{
  "OpenerID" -> 
   "14181d5d246bbbf7"},ExpressionUUID->"48d83a67-b4f0-4537-a6e6-a7486b901e83"],

Cell[TextData[{
 "This paclet has been generated from the following ",
 Cell[BoxData[
  TagBox[
   ButtonBox[
    StyleBox["ResourceFunction", "SymbolsRefLink",
     FontFamily->"Source Sans Pro"],
    BaseStyle->Dynamic[
      If[
       CurrentValue["MouseOver"], {
       "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
       "Link"}]],
    ButtonData->"paclet:ref/ResourceFunction",
    ContentPadding->False],
   MouseAppearanceTag["LinkHand"]]], "Text", "InlineFormula",
  FontFamily->"Source Sans Pro"],
 ":"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ResourceObject", "[", 
   RowBox[{"ResourceFunction", "[", "\"\<GridTableForm\>\"", "]"}], "]"}], 
  ";"}]], "Input"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ResourceObject",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               Thickness[0.01667], 
               FaceForm[
                RGBColor[0.87451, 0.27843, 0.03137]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{60., 30.}, {60., 13.43146}, {46.56854, 0.}, {30., 
                0.}, {13.43146, 0.}, {0., 13.43146}, {0., 30.}, {0., 
                46.56854}, {13.43146, 60.}, {30., 60.}, {46.56854, 60.}, {60.,
                 46.56854}, {60., 30.}}}], 
               FaceForm[
                GrayLevel[1]], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwB2IQffirRky/k5aDLdf1xQW2jg4wPpjb5ehgVxmxwtRX
y+G4ptWk048dHaS1jv2cPUHLwW/nod0xNk4QdVzaDoUgAyY4OdyXuqF1UEjH
YfEkK0bfCGcHlS1PY7p+6zp8zHjcsZXDxaH1deAOOVcDh7NngKDHxWHbTkPb
xEhDh6wlSz+VCbg6aHB96bTZaeSwTeDJgpZUVwdjMDBxYACBBleHrwu5X0Xr
mTqwyDhNndXq6vDT8Nk6VRUzB4nzCxbWR7k6PKwSWef+0MzBA8Rgd3Vo+Mgj
9cvd3CFhg/Q23XsuDlorhS+4VJg7LPmz5Nby2S4O8iAHxZk7VIO0Rbk4xHat
PrVP29xho3HruWyge0VLqj2Tj5g5tBUtim094OywQw6owcLMAai6SqTP2eH3
6XcnDwuZOWgFJeYo1gDlIwKbMx+YOnhdMp2cX+TscJaxybJqjanDvBlfkzSK
nR0er9r0vqvC1OFcx6V7D4D8pzuCrSLcTR3W5n2d86XO2WEJMDSvK5s6BIEs
mujs0H8IGCH+Jg4xIMYfZwdwcIcbO7wBBmNrtgvEHXlGcD7IG1VXDOF8sPrp
hhD/WblAwrPYEEJ/dnZQ/24twupl6BBiFfH/uQ6C/6/2WCtzqhNcPTic5jlC
0kmtIcQ9No5w98L44HAH+gdsP7cjxH16UPkaB0g62WDiMGsmEEQ6wM1D54Pp
vWZwPtiexSYQf+wyhKTTJhOI/8RNoOkKwQfH0w8jSHpIVMPgw9SD3flaE24e
LP2ngcAyBB/mHhgf5l5weIuowflg7jpVaPpwgKg/pA4PHwDU5XPA
                 "], {{25.4, 18.99}, {25.4, 36.79}, {31.77, 36.79}, {31.77, 
                 35.39}, {28.57, 35.08}, {28.5, 35.01}, {28.5, 32.29}, {28.5, 
                 23.38}, {28.5, 20.8}, {28.57, 20.73}, {31.77, 20.42}, {31.77,
                  18.99}}, CompressedData["
1:eJxTTMoPSmViYGCQAmIQffirRkx/koMDAxhYOsD4ra8Dd8gdtXOYL+/GAeJf
8fB++lbA3uFmVLzKlkIHh6C3lz/OiLR3eMXpbbOgx8Ghqdhtyrc+e4dfO8xC
epY7OGT5fu4LPmLvcO5+ixPLGQcHbk37ld8e2jsE7ZBrff3RweFhlcg6dyAf
RFZdcYbzf9u3//yk5ALnQ9zj4hDEf/EFXxKCD3MfjA9z/3WffTefAfk//c5U
GW6xcGCPn+EjGuLiEMBoMM8x28JB+JPj+TRLFwf9xRF5maYWDr/XcfzbLufi
wO/aaDfxv7nDnpgj5Um/nB1mnfNjc39ojuY+czT3mzssCQ63O33aweHx8Rm7
pz0wd8iJnnJTAej/iVfXzpv8z9whNOubgzYwfNhS1pfXm1g4SC0uDTEFhp+p
2+sVWVkWDs4yrx+ZAcN3iVlh0f7NFg7o8QEAbSezvA==
                 "], {{41.77, 18.99}, {41.77, 20.42}, {44.91, 20.72}, {45.05, 
                 20.8}, {45.05, 23.52}, {45.05, 32.25}, {45.05, 34.97}, {
                 44.91, 35.04}, {41.77, 35.35}, {41.77, 36.78}, {48.15, 
                 36.78}, {48.15, 18.98}}}]}, {
              AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
               None, FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], AspectRatio -> 1, Axes -> False, 
               Background -> None, Frame -> None, FrameTicks -> None, 
               ImageSize -> {Automatic, 30}}], CacheGraphics -> False, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"GridTableForm\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/8b78d59f-21a1-4221-bb06-2887d1571d94/"}, "HyperlinkURL"]}, 
                   "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Function\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Arrange the elements of the argument in a \
two-dimensional grid with row coloring that helps comprehension", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Arrange the elements of the argument in a \
two-dimensional grid with row coloring that helps comprehension", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm]],
                     ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], "SummaryItem"]}], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            StyleBox[
             GraphicsBox[{
               Thickness[0.01667], 
               FaceForm[
                RGBColor[0.87451, 0.27843, 0.03137]], 
               
               FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                3}}}, {{{60., 30.}, {60., 13.43146}, {46.56854, 0.}, {30., 
                0.}, {13.43146, 0.}, {0., 13.43146}, {0., 30.}, {0., 
                46.56854}, {13.43146, 60.}, {30., 60.}, {46.56854, 60.}, {60.,
                 46.56854}, {60., 30.}}}], 
               FaceForm[
                GrayLevel[1]], 
               
               FilledCurveBox[{{{0, 2, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {
                 0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}, {{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {1, 3, 3}, {0, 1, 
                 0}, {1, 3, 3}, {0, 1, 0}}, {{0, 2, 0}, {1, 3, 3}, {1, 3, 
                 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}}, {{0, 2, 0}, {1, 3, 3}, {0, 
                 1, 0}, {1, 3, 3}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                 0}}}, {CompressedData["
1:eJxTTMoPSmViYGAwB2IQffirRky/k5aDLdf1xQW2jg4wPpjb5ehgVxmxwtRX
y+G4ptWk048dHaS1jv2cPUHLwW/nod0xNk4QdVzaDoUgAyY4OdyXuqF1UEjH
YfEkK0bfCGcHlS1PY7p+6zp8zHjcsZXDxaH1deAOOVcDh7NngKDHxWHbTkPb
xEhDh6wlSz+VCbg6aHB96bTZaeSwTeDJgpZUVwdjMDBxYACBBleHrwu5X0Xr
mTqwyDhNndXq6vDT8Nk6VRUzB4nzCxbWR7k6PKwSWef+0MzBA8Rgd3Vo+Mgj
9cvd3CFhg/Q23XsuDlorhS+4VJg7LPmz5Nby2S4O8iAHxZk7VIO0Rbk4xHat
PrVP29xho3HruWyge0VLqj2Tj5g5tBUtim094OywQw6owcLMAai6SqTP2eH3
6XcnDwuZOWgFJeYo1gDlIwKbMx+YOnhdMp2cX+TscJaxybJqjanDvBlfkzSK
nR0er9r0vqvC1OFcx6V7D4D8pzuCrSLcTR3W5n2d86XO2WEJMDSvK5s6BIEs
mujs0H8IGCH+Jg4xIMYfZwdwcIcbO7wBBmNrtgvEHXlGcD7IG1VXDOF8sPrp
hhD/WblAwrPYEEJ/dnZQ/24twupl6BBiFfH/uQ6C/6/2WCtzqhNcPTic5jlC
0kmtIcQ9No5w98L44HAH+gdsP7cjxH16UPkaB0g62WDiMGsmEEQ6wM1D54Pp
vWZwPtiexSYQf+wyhKTTJhOI/8RNoOkKwQfH0w8jSHpIVMPgw9SD3flaE24e
LP2ngcAyBB/mHhgf5l5weIuowflg7jpVaPpwgKg/pA4PHwDU5XPA
                 "], {{25.4, 18.99}, {25.4, 36.79}, {31.77, 36.79}, {31.77, 
                 35.39}, {28.57, 35.08}, {28.5, 35.01}, {28.5, 32.29}, {28.5, 
                 23.38}, {28.5, 20.8}, {28.57, 20.73}, {31.77, 20.42}, {31.77,
                  18.99}}, CompressedData["
1:eJxTTMoPSmViYGCQAmIQffirRkx/koMDAxhYOsD4ra8Dd8gdtXOYL+/GAeJf
8fB++lbA3uFmVLzKlkIHh6C3lz/OiLR3eMXpbbOgx8Ghqdhtyrc+e4dfO8xC
epY7OGT5fu4LPmLvcO5+ixPLGQcHbk37ld8e2jsE7ZBrff3RweFhlcg6dyAf
RFZdcYbzf9u3//yk5ALnQ9zj4hDEf/EFXxKCD3MfjA9z/3WffTefAfk//c5U
GW6xcGCPn+EjGuLiEMBoMM8x28JB+JPj+TRLFwf9xRF5maYWDr/XcfzbLufi
wO/aaDfxv7nDnpgj5Um/nB1mnfNjc39ojuY+czT3mzssCQ63O33aweHx8Rm7
pz0wd8iJnnJTAej/iVfXzpv8z9whNOubgzYwfNhS1pfXm1g4SC0uDTEFhp+p
2+sVWVkWDs4yrx+ZAcN3iVlh0f7NFg7o8QEAbSezvA==
                 "], {{41.77, 18.99}, {41.77, 20.42}, {44.91, 20.72}, {45.05, 
                 20.8}, {45.05, 23.52}, {45.05, 32.25}, {45.05, 34.97}, {
                 44.91, 35.04}, {41.77, 35.35}, {41.77, 36.78}, {48.15, 
                 36.78}, {48.15, 18.98}}}]}, {
              AspectRatio -> 1, Axes -> False, Background -> None, Frame -> 
               None, FrameTicks -> None, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}], AspectRatio -> 1, Axes -> False, 
               Background -> None, Frame -> None, FrameTicks -> None, 
               ImageSize -> {Automatic, 30}}], CacheGraphics -> False, 
             StripOnInput -> False], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Name: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{"\"GridTableForm\"", "\" \"", 
                    
                    TemplateBox[{
                    "\"\[RightGuillemet]\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/8b78d59f-21a1-4221-bb06-2887d1571d94/"}, "HyperlinkURL"]}, 
                   "RowDefault"], "SummaryItem"]}], 
               TagBox["\"\"", "SummaryItem"]}, {
               RowBox[{
                 TagBox["\"Type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"Function\"", "SummaryItem"]}], "\[SpanFromLeft]"}, {
               TagBox[
                DynamicModuleBox[{ResourceSystemClient`Private`len$$ = 1}, 
                 RowBox[{
                   TagBox["\"Description: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    ButtonBox[
                    DynamicBox[
                    ToBoxes[
                    Replace[
                    ResourceSystemClient`Private`snipDots[
                    "Arrange the elements of the argument in a \
two-dimensional grid with row coloring that helps comprehension", 
                    ResourceSystemClient`Private`len$$], Except[
                    Blank[String]] -> 
                    Snippet[
                    "Arrange the elements of the argument in a \
two-dimensional grid with row coloring that helps comprehension", 
                    ResourceSystemClient`Private`len$$], {0}], StandardForm]],
                     ButtonFunction :> (ResourceSystemClient`Private`len$$ = 
                    Ceiling[ResourceSystemClient`Private`len$$ 1.5]), 
                    Appearance -> None, BaseStyle -> {}, Evaluator -> 
                    Automatic, Method -> "Preemptive"], "SummaryItem"]}], 
                 DynamicModuleValues :> {}], "SummaryItem"], 
               "\[SpanFromLeft]"}, {
               RowBox[{
                 TagBox["\"Keywords: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"grid\"", "\"table form\""}, 
                    "RowWithSeparators"], Short], "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Documentation: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{
                   "\"https://resources.wolframcloud.com/FunctionRepository/\
resources/8b78d59f-21a1-4221-bb06-2887d1571d94/\"", 
                    "https://resources.wolframcloud.com/FunctionRepository/\
resources/8b78d59f-21a1-4221-bb06-2887d1571d94/"}, "HyperlinkURL"], 
                  "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Original Release: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"03 Jan 2020\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Latest Update: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"14 Dec 2021\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"Version: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"1.1.0\"", "SummaryItem"]}], ""}, {
               RowBox[{
                 TagBox["\"UUID: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                 "\"8b78d59f-21a1-4221-bb06-2887d1571d94\"", "SummaryItem"]}],
                ""}}, GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ResourceObject[<|
   "Name" -> "GridTableForm", "ShortName" -> "GridTableForm", "UUID" -> 
    "8b78d59f-21a1-4221-bb06-2887d1571d94", "ResourceType" -> "Function", 
    "Version" -> "1.1.0", "Description" -> 
    "Arrange the elements of the argument in a two-dimensional grid with row \
coloring that helps comprehension", "RepositoryLocation" -> 
    URL["https://www.wolframcloud.com/obj/resourcesystem/api/1.0"], 
    "SymbolName" -> 
    "FunctionRepository`$909550fa812846e48cbb50c2389da25a`GridTableForm", 
    "FunctionLocation" -> 
    CloudObject[
     "https://www.wolframcloud.com/obj/49953ebe-1b6c-4b86-a9ca-a79507c0f607"]|>\
, ResourceSystemBase -> Automatic],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output"]
}, Open  ]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {
  TaggingRules, "Openers", "PrimaryExamplesSection", "14181d5d246bbbf7"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell["Categories", "MetadataSection"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   "\"Notebook Documents & Presentation\"", 
    "https://resources.wolframcloud.com/FunctionRepository/category/notebook-\
documents-presentation"},
   "HyperlinkURL"], "Text"]], "MetadataItem"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   "\"Visualization & Graphics\"", 
    "https://resources.wolframcloud.com/FunctionRepository/category/\
visualization-graphics"},
   "HyperlinkURL"], "Text"]], "MetadataItem"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Keywords", "MetadataSection"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   "\"grid\"", 
    "https://resources.wolframcloud.com/FunctionRepository/search?i=grid"},
   "HyperlinkURL"], "Text"]], "MetadataItem"],

Cell[BoxData[
 StyleBox[
  TemplateBox[{
   "\"table form\"", 
    "https://resources.wolframcloud.com/FunctionRepository/search?i=table \
form"},
   "HyperlinkURL"], "Text"]], "MetadataItem"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Symbols", "MetadataSection"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   TemplateBox[{"\"Grid\"", "paclet:ref/Grid"},
    "HyperlinkPaclet"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"],
 "\[NonBreakingSpace]",
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator",
  FontColor->GrayLevel[0.6]],
 "\[NonBreakingSpace]",
 Cell[BoxData[
  StyleBox[
   TemplateBox[{"\"TableForm\"", "paclet:ref/TableForm"},
    "HyperlinkPaclet"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"],
 "\[NonBreakingSpace]",
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator",
  FontColor->GrayLevel[0.6]],
 "\[NonBreakingSpace]",
 Cell[BoxData[
  StyleBox[
   TemplateBox[{"\"TextGrid\"", "paclet:ref/TextGrid"},
    "HyperlinkPaclet"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"]
}], "SeeAlso"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Related Resources", "MetadataSection"],

Cell[TextData[{
 Cell[BoxData[
  StyleBox[
   TemplateBox[{
    "\"ExampleDataset\"", 
     "https://resources.wolframcloud.com/FunctionRepository/resources/\
ExampleDataset"},
    "HyperlinkURL"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"],
 "\[NonBreakingSpace]",
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator",
  FontColor->GrayLevel[0.6]],
 "\[NonBreakingSpace]",
 Cell[BoxData[
  StyleBox[
   TemplateBox[{
    "\"RecordsSummary\"", 
     "https://resources.wolframcloud.com/FunctionRepository/resources/\
fa86ac1d-fc6e-4006-970e-b67adad7743e/"},
    "HyperlinkURL"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"],
 "\[NonBreakingSpace]",
 StyleBox[" \[FilledVerySmallSquare] ", "InlineSeparator",
  FontColor->GrayLevel[0.6]],
 "\[NonBreakingSpace]",
 Cell[BoxData[
  StyleBox[
   TemplateBox[{
    "\"RandomTabularDataset\"", 
     "https://resources.wolframcloud.com/FunctionRepository/resources/\
RandomTabularDataset"},
    "HyperlinkURL"], "Text"]], "InlineFormula",
  FontWeight->"DemiBold"]
}], "SeeAlso"]
}, Open  ]]
},
Saveable->False,
WindowSize->{808, 911},
WindowMargins->{{212, Automatic}, {Automatic, 24}},
WindowTitle->"GridTableForm",
TaggingRules->{
 "NotebookIndexQ" -> False, "ResourceType" -> "Function", 
  "ResourceFunctionID" -> "8b78d59f-21a1-4221-bb06-2887d1571d94", 
  "Metadata" -> {
   "title" -> "GridTableForm", "description" -> "", "label" -> 
    "Pacletized ResourceFunction", "context" -> 
    "PacletizedResourceFunctions1`", "index" -> True, "language" -> "en", 
    "paclet" -> "PacletizedResourceFunctions1", "type" -> "Symbol", 
    "windowtitle" -> "GridTableForm", "uri" -> 
    "PacletizedResourceFunctions1/ReferencePages/Symbols/GridTableForm", 
    "summary" -> 
    "Arrange the elements of the argument in a two-dimensional grid with row \
coloring that helps comprehension", "keywords" -> {}, "WorkflowDockedCell" -> 
    ""}, "Openers" -> {
   "PrimaryExamplesSection" -> {
     "NotesSection" -> Closed, "77ee9129cd444e2b" -> Open, "14181d5d246bbbf7" -> 
      Closed}, "ExampleSection" -> {
     "03e8d5c187d5aeb3" -> Open, "1277aee6b59b6d14" -> Closed, 
      "5ad5bf9da7e59e74" -> Closed, "5572c38e48502487" -> Closed, 
      "72bc4566351d4678" -> Closed, "794ec000bd35f2d8" -> Closed, 
      "0e781f71d141eda7" -> Closed}, 
    "ExampleSubsection" -> {
     "36e0da479a37bebf" -> Closed, "4bccc149f4006fd5" -> Closed, 
      "38844047fdec386d" -> Closed}}, "LinkTrails" -> "", 
  "SearchTextTranslated" -> ""},
FrontEndVersion->"13.2 for Mac OS X ARM (64-bit) (January 30, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Working"], CellInsertionPointCell -> Cell[], DockedCells -> 
    FEPrivate`FrontEndResource["FEExpressions", "HelpViewerToolbar"]], 
   Cell[
    StyleData["ContributedBy", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> 0, 
    CellFrameMargins -> {{Inherited, 10}, {20, 20}}, TextAlignment -> Right, 
    FontSize -> 12, FontColor -> GrayLevel[
      Rational[71, 255]], Background -> GrayLevel[
      Rational[47, 51]]], 
   Cell[
    StyleData["FunctionTitle"], PageWidth :> Infinity, ShowCellBracket -> 
    False, CellMargins -> {{24, 22}, {0, 25}}], 
   Cell[
    StyleData["FunctionDescription", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{66, 66}, {20, 0}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "Plain", FontSlant -> 
    "Italic", FontColor -> GrayLevel[
      Rational[25, 51]]], 
   Cell[
    StyleData["UsageInputs", StyleDefinitions -> StyleData["Input"]], 
    PageWidth :> Infinity, CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, CellMargins -> {{0, 0}, {0, 0}}, 
    CellFrameMargins -> {{66, 0}, {0, 16}}, CellFrameColor -> 
    RGBColor[0.85098, 0.898039, 0.952941], ShowAutoStyles -> False, 
    ShowCodeAssist -> False, 
    CodeAssistOptions -> {"DynamicHighlighting" -> False}, 
    LineSpacing -> {1, 3}, TabSpacings -> {2.5}, CounterIncrements -> "Text", 
    FontFamily -> "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain", 
    Background -> RGBColor[0.952941, 0.984314, 1]], 
   Cell[
    StyleData["UsageDescription", StyleDefinitions -> StyleData["Text"]], 
    ShowCellBracket -> False, CellMargins -> {{0, 0}, {0, 0}}, 
    CellGroupingRules -> "OutputGrouping", 
    CellFrameMargins -> {{86, 66}, {19, 0}}, CellFrameColor -> 
    RGBColor[0.85098, 0.898039, 0.952941], ShowAutoSpellCheck -> False, 
    Background -> RGBColor[0.952941, 0.984314, 1]], 
   Cell[
    StyleData["PrimaryExamplesSection"], 
    CellFrame -> {{False, False}, {False, False}}, ShowCellBracket -> False, 
    ShowGroupOpener -> True, GroupOpenerInsideFrame -> True, 
    CellMargins -> {{15, 22}, {6, 30}}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 40}, Evaluatable -> 
    False, CellGroupingRules -> {"SectionGrouping", 30}, ShowCellLabel -> 
    False, CellLabelAutoDelete -> True, 
    CellFrameMargins -> {{0, Inherited}, {6, 6}}, CellFrameColor -> 
    GrayLevel[0.898039], ParagraphSpacing -> {0.7000000000000002, 0}, 
    StyleMenuListing -> None, FontFamily -> "Source Sans Pro", FontSize -> 17,
     FontWeight -> "Plain", FontTracking -> "Plain", FontColor -> 
    RGBColor[0.85098, 0.396078, 0.], Background -> None], 
   Cell[
    StyleData["ExampleSection"], Editable -> False, CellFrame -> False, 
    ShowCellBracket -> Automatic, ShowGroupOpener -> False, 
    CellMargins -> {{30, 26}, {0, 10}}, GroupOpenerColor -> RGBColor[1, 0, 0],
     Evaluatable -> False, CellGroupingRules -> {"SectionGrouping", 54}, 
    ShowCellLabel -> False, CellLabelAutoDelete -> True, 
    CellFrameMargins -> {{24, Inherited}, {5, 8}}, CellFrameColor -> 
    GrayLevel[1], StyleMenuListing -> None, FontFamily -> "Source Sans Pro", 
    FontSize -> 15, FontWeight -> "Plain", FontColor -> 
    RGBColor[0.85098, 0.396078, 0.]], 
   Cell[
    StyleData["ExampleSubsection"], Editable -> False, ShowCellBracket -> 
    Automatic, ShowGroupOpener -> False, CellMargins -> {{35, 24}, {2, 9}}, 
    Evaluatable -> False, CellGroupingRules -> {"SectionGrouping", 56}, 
    ShowCellLabel -> False, CellLabelAutoDelete -> True, StyleMenuListing -> 
    None, FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
    "Plain", FontColor -> RGBColor[0.85098, 0.396078, 0.]], 
   Cell[
    StyleData["ExampleText"], Editable -> False, ShowCellBracket -> Automatic,
     CellMargins -> {{48, 40}, {6, 14}}, ParagraphSpacing -> {0, 6}, 
    MenuSortingValue -> None, MenuCommandKey :> "7", FontFamily -> 
    "Source Sans Pro", FontSize -> 14], 
   Cell[
    StyleData["ExampleInput", StyleDefinitions -> StyleData["Input"]], 
    CellMargins -> {{86, 10}, {5, 7}}, 
    CellBracketOptions -> {"Color" -> GrayLevel[0.7]}, 
    StyleKeyMapping -> {
     "=" -> "WolframAlphaShort", ">" -> "ExternalLanguage"}, Evaluatable -> 
    True, CellGroupingRules -> "InputGrouping", TextClipboardType -> 
    "InputText", StripStyleOnPaste -> True, PageBreakWithin -> False, 
    GroupPageBreakWithin -> False, CellLabelAutoDelete -> False, 
    DefaultFormatType -> DefaultInputFormatType, ShowAutoStyles -> True, 
    ShowAutoConvert -> True, 
    AutoStyleOptions -> {
     "UndefinedSymbolStyle" -> {FontColor -> GrayLevel[0]}}, 
    TranslationOptions -> {"ContentEnabled" -> Automatic}, 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Input", FormatType -> 
    InputForm, NumberMarks -> True, 
    LinebreakAdjustments -> {0.8500000000000001, 2., 12., 1., 1.}, 
    CounterIncrements -> "Input", MenuSortingValue -> None, MenuCommandKey :> 
    "9"], 
   Cell[
    StyleData["ExampleOutput", StyleDefinitions -> StyleData["Output"]], 
    PageWidth :> WindowWidth, ShowCellBracket -> True, 
    CellMargins -> {{86, 10}, {16, 5}}, 
    CellBracketOptions -> {"Color" -> GrayLevel[0.7]}, CellEditDuplicate -> 
    True, CellGroupingRules -> "OutputGrouping", TextClipboardType -> 
    "InputText", StripStyleOnPaste -> True, PageBreakWithin -> False, 
    GroupPageBreakWithin -> False, GeneratedCell -> True, CellAutoOverwrite -> 
    True, CellLabelAutoDelete -> False, DefaultFormatType -> 
    DefaultOutputFormatType, 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    AutoItalicWords -> {}, AutoQuoteCharacters -> {}, 
    PasteAutoQuoteCharacters -> {}, LanguageCategory -> "Output", FormatType -> 
    InputForm, ShowStringCharacters -> False, CounterIncrements -> "Output", 
    MenuSortingValue -> None, 
    GraphicsBoxOptions -> {
     DefaultBaseStyle -> {"Graphics", Deployed -> False}, ImageSize -> 200}, 
    Graphics3DBoxOptions -> {
     DefaultBaseStyle -> {"Graphics3D", Deployed -> False}, ImageSize -> 
      200}], 
   Cell[
    StyleData["CellLabel"], 
    CellLabelMargins -> {{12, Inherited}, {Inherited, Inherited}}, 
    LanguageCategory -> None, StyleMenuListing -> None, FontFamily -> "Arial",
     FontSize -> 9, FontWeight -> "Plain", FontColor -> GrayLevel[0.509804]], 
   
   Cell[
    StyleData["Link"], FontFamily -> "Source Sans Pro", FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.854902, 0.396078, 0.145098], 
       RGBColor[0.0196078, 0.286275, 0.65098]]]], 
   Cell[
    StyleData["StringTypeLink", StyleDefinitions -> StyleData["Link"]], 
    FontColor -> Dynamic[
      If[
       CurrentValue["MouseOver"], 
       RGBColor[0.9686, 0.4667, 0.], 
       GrayLevel[0.4667]]]], 
   Cell[
    StyleData["InlineFormula"], 
    HyphenationOptions -> {"HyphenationCharacter" -> "\[Continuation]"}, 
    LanguageCategory -> "Formula", AutoSpacing -> True, ScriptLevel -> 1, 
    SingleLetterItalics -> False, SpanMaxSize -> 1, StyleMenuListing -> None, 
    FontFamily -> "Source Sans Pro", FontSize -> 1. Inherited, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    FractionBoxOptions -> {BaseStyle -> {SpanMaxSize -> Automatic}}, 
    GridBoxOptions -> {
     GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
        "RowsIndexed" -> {}}}], 
   Cell[
    StyleData[
    "InlineResourceFunction", StyleDefinitions -> StyleData["Text"]]], 
   Cell[
    StyleData["Notes", StyleDefinitions -> StyleData["Item"]], Editable -> 
    False, CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> 
      RGBColor[0.6, 0.6, 0.6]], ShowCellBracket -> Automatic, 
    CellMargins -> {{40, 24}, {9, 7}}, CellFrameMargins -> 0, 
    MenuSortingValue -> None, MenuCommandKey :> "8", FontFamily -> 
    "Source Sans Pro", FontSize -> 15, FontWeight -> "Plain", 
    GridBoxOptions -> {BaseStyle -> "TableNotes"}], 
   Cell[
    StyleData["MetadataSection", StyleDefinitions -> StyleData["Section"]], 
    Editable -> False, Selectable -> False, 
    CellFrame -> {{False, False}, {False, True}}, ShowCellBracket -> False, 
    ShowGroupOpener -> False, GroupOpenerInsideFrame -> True, 
    CellMargins -> {{24, 22}, {8, 28}}, 
    CellElementSpacings -> {"ClosedGroupTopMargin" -> 60}, Evaluatable -> 
    False, CellGroupingRules -> {"SectionGrouping", 30}, ShowCellLabel -> 
    False, CellLabelAutoDelete -> True, 
    CellFrameMargins -> {{0, Inherited}, {6, 15}}, CellFrameColor -> 
    GrayLevel[0.792157], ParagraphSpacing -> {0.7000000000000002, 0}, 
    StyleMenuListing -> None, FontFamily -> "Source Sans Pro", FontSize -> 16,
     FontWeight -> "Plain", FontTracking -> "Plain", FontColor -> 
    GrayLevel[0.545098], Background -> None], 
   Cell[
    StyleData["MetadataItem", StyleDefinitions -> StyleData["Item"]], 
    Editable -> False, CellDingbat -> 
    StyleBox["\[FilledVerySmallSquare]", FontColor -> GrayLevel[0.6]], 
    ShowCellBracket -> Automatic, CellMargins -> {{48, 12}, {2, 2}}, 
    CellFrameMargins -> 0, FontFamily -> "Source Sans Pro", FontSize -> 14, 
    FontWeight -> "Plain"], 
   Cell[
    StyleData["SeeAlso", StyleDefinitions -> StyleData["Text"]], Editable -> 
    False, ShowCellBracket -> Automatic, CellMargins -> {{38, 24}, {2, 2}}, 
    DefaultFormatType -> DefaultOutputFormatType, FontFamily -> 
    "Source Sans Pro", FontSize -> 15, FontWeight -> "SemiBold"], 
   Cell[
    StyleData["Citation"], Editable -> False, CellFrame -> {{0, 0}, {0, 0.1}},
     ShowCellBracket -> False, CellMargins -> {{24, 24}, {2, 20}}, 
    CellFrameMargins -> {{56, 8}, {8, 8}}, CellFrameColor -> 
    GrayLevel[0.792157], StyleMenuListing -> None, FontFamily -> 
    "Source Sans Pro", FontSize -> 13, FontSlant -> "Italic", FontColor -> 
    GrayLevel[0.6]], 
   Cell[
    StyleData["NotesThumbnails"], Editable -> False, ShowCellBracket -> False,
     ShowSelection -> False, CellMargins -> {{32, Inherited}, {0, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 0., "ClosedCellHeight" -> 0.}, 
    CellGroupingRules -> {"SectionGrouping", 30}], 
   Cell[
    StyleData["TableNotes", StyleDefinitions -> StyleData["Notes"]], 
    CellDingbat -> None, CellFrameColor -> RGBColor[0.749, 0.694, 0.553], 
    StyleMenuListing -> None, 
    ButtonBoxOptions -> {Appearance -> {Automatic, None}}, 
    GridBoxOptions -> {
     FrameStyle -> GrayLevel[0.906], 
      GridBoxAlignment -> {
       "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
        "RowsIndexed" -> {}}, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{True}}}, 
      GridDefaultElement -> Cell["\[Placeholder]", "TableText"]}], 
   Cell[
    StyleData["TableText"], DefaultInlineFormatType -> 
    "DefaultInputInlineFormatType", AutoQuoteCharacters -> {}, 
    StyleMenuListing -> None], 
   Cell[
    StyleData["Graphics"], CellMargins -> {{80, 10}, {16, 5}}, 
    MenuSortingValue -> None, 
    GraphicsBoxOptions -> {ImageSizeRaw -> {{240}, {240}}}, 
    Graphics3DBoxOptions -> {ImageSizeRaw -> {{240}, {240}}}], 
   Cell[
    StyleData["Graphics3D"], 
    Graphics3DBoxOptions -> {ImageSizeRaw -> {{240}, {240}}}], 
   Cell[
    StyleData["ImageGraphics"], RasterBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["Image3DGraphics3D"], 
    Raster3DBoxOptions -> {ImageEditMode -> False}], 
   Cell[
    StyleData["ExampleDelimiter"], Editable -> False, ShowCellBracket -> 
    Automatic, CellMargins -> {{48, 14}, {-5, 0}}, Evaluatable -> False, 
    CellGroupingRules -> {"SectionGrouping", 58}, ShowCellLabel -> False, 
    CellLabelAutoDelete -> True, TabFilling -> 
    "\[LongDash]\[NegativeThickSpace]", TabSpacings -> {76}, StyleMenuListing -> 
    None, FontFamily -> "Verdana", FontSize -> 9, FontWeight -> "Plain", 
    FontSlant -> "Plain", FontColor -> GrayLevel[0.905882]], 
   Cell[
    StyleData["PageBreak", StyleDefinitions -> StyleData["ExampleDelimiter"]],
     Selectable -> False, CellFrame -> {{0, 0}, {1, 0}}, 
    CellMargins -> {{48, 14}, {0, -5}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, Evaluatable -> True, 
    CellGroupingRules -> "NormalGrouping", 
    CellEvaluationFunction -> (($Line = 0; Null)& ), CellFrameColor -> 
    GrayLevel[
      Rational[77, 85]]], 
   Cell[
    StyleData["CharactersRefLink"], ShowSpecialCharacters -> False], 
   Cell[
    StyleData["PrettyTooltipTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (TagBox[
        TooltipBox[#, 
         FrameBox[
          
          StyleBox[#2, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain", StripOnInput -> False], 
          Background -> RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8, 
          StripOnInput -> False], TooltipDelay -> 0.1, 
         TooltipStyle -> {Background -> None, CellFrame -> 0}], 
        Annotation[#, 
         Framed[
          Style[
          RSNB`$$tooltip, "Text", FontColor -> 
           RGBColor[0.537255, 0.537255, 0.537255], FontSize -> 12, FontWeight -> 
           "Plain", FontTracking -> "Plain"], Background -> 
          RGBColor[0.960784, 0.960784, 0.960784], FrameStyle -> 
          RGBColor[0.898039, 0.898039, 0.898039], FrameMargins -> 8], 
         "Tooltip"]& ]& )}], 
   Cell[
    StyleData["ExampleGroupOpenerTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (DynamicBox[
        ToBoxes[
         If[
          MatchQ[
           CurrentValue[
            EvaluationNotebook[], {TaggingRules, "Openers", #, #2}, Closed], 
           Alternatives[True, Open]], 
          Style[
           Graphics[{
             Thickness[0.18], 
             RGBColor[0.8509803921568627, 0.396078431372549, 0], 
             Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
            PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
           0.68 Inherited], 
          Rotate[
           Style[
            Graphics[{
              Thickness[0.18], 
              RGBColor[0.8509803921568627, 0.396078431372549, 0], 
              Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
             PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
            0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]], 
         StandardForm]]& )}], 
   Cell[
    StyleData["OrangeButtonTemplate"], 
    TemplateBoxOptions -> {DisplayFunction -> (ButtonBox[
        StyleBox[#, "Text", FontFamily -> "Source Sans Pro", FontWeight -> 
         "SemiBold", FontTracking -> "Condensed", FontSize -> 13, FontColor -> 
         Dynamic[
           FEPrivate`If[
            CurrentValue[Enabled], 
            GrayLevel[1], 
            RGBColor[0.9568627450980391, 0.8019607843137255, 0.75]], 
           Evaluator -> "System"], StripOnInput -> False], ButtonFunction :> 
        With[{RSNB`nb$ = ButtonNotebook[]}, 
          If[#4, CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = 
            ProgressIndicator[Appearance -> "Necklace"]]; 
          With[{RSNB`$cp$ = $ContextPath}, 
            Quiet[
             
             Block[{$ContextPath = RSNB`$cp$, 
               ResourceSystemClient`$AsyncronousResourceInformationUpdates = 
               False}, 
              Internal`WithLocalSettings[
               DefinitionNotebookClient`$ButtonsDisabled = True; Once[
                  ReleaseHold[
                   CurrentValue[
                   RSNB`nb$, {TaggingRules, "CompatibilityTest"}]], 
                  "KernelSession"]; Needs["DefinitionNotebookClient`"], 
                DefinitionNotebookClient`CheckForUpdates[RSNB`nb$, 
                 #2[]], DefinitionNotebookClient`$ButtonsDisabled = False; 
                Null]; Null]]]; 
          CurrentValue[RSNB`nb$, {TaggingRules, "StatusMessage"}] = ""; Null],
         FrameMargins -> {{5, 5}, {0, 0}}, 
        Appearance -> {"Default" -> Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqPnQeIQhCyIrAwodd2K5Yo5IwQB2XDFcGXPAsWu
mjNdNmVARkARoDhc2aswqWtWLGhqIAgoDpSFuBao5QqGURB0BWwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAMJyEaA=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Hover" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqMHARIQhCyIrAwotcmIc7UuOwQB2XDFcGX3/MXX
6LEv12ZDRkARoDhc2cswqY2GnGhqIAgoDpSFuBaoZTWGURC0GmwgAxgQo4xI
04h3G5E+JT7ciIkFYuIUAJxlBG4=
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True], "Pressed" -> 
          Image[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBAkBOaF5xZnpeaopnXklqemqRRRIz
UJAXikHs/xgAqyAQvA6XhqN3hfYQhCyIrAwo9e36ma8PbkIQkA1XDFf2vtzt
28Obu6Jsl2uzQRCQDRQBisOVvYlR+nb99I5gU7gaCAKKAMWBshDXArV8unUR
TQ0EAcWBsgxgQIwyIk0j3m1E+pT4cCMmFoiJUwBBtDmK
            "], "Byte", ColorSpace -> "RGB", Interleaving -> True]}, 
        Background -> RGBColor[0.921569, 0.341176, 0.105882], Method -> 
        "Queued", ImageSize -> {All, 23}, Evaluator -> Automatic]& )}], 
   Cell[
    StyleData["ExampleImage"], PageWidth :> 650, 
    CellMargins -> {{66, 66}, {16, 5}}, Evaluatable -> False, ShowCellLabel -> 
    False, MenuSortingValue -> 10000, 
    RasterBoxOptions -> {ImageEditMode -> False}]}, Visible -> False, 
  FrontEndVersion -> "13.2 for Mac OS X ARM (64-bit) (January 30, 2023)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"fc84cdf3-4a1f-49b3-a3bb-bf36acf1ba10"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "TabNext"->{
  Cell[7566, 236, 1703, 54, 37, "Notes",ExpressionUUID->"e2957b46-1c32-42b2-bf64-0863a82dd485",
   CellTags->"TabNext",
   CellID->327146569],
  Cell[9596, 303, 1236, 38, 37, "Notes",ExpressionUUID->"886f81c5-24b6-4ec4-9b17-7452d2bc02ec",
   CellTags->"TabNext",
   CellID->161246186]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"TabNext", 358827, 7958}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[585, 21, 3567, 103, 58, InheritFromParent,ExpressionUUID->"ec38fb9b-ddb5-481b-9089-2941c5c66d0e"],
Cell[4155, 126, 1325, 38, 75, "FunctionTitle",ExpressionUUID->"edccd1e0-bcf9-4190-9ca7-9f0466024640"],
Cell[5483, 166, 146, 3, 69, "FunctionDescription",ExpressionUUID->"2acd20b4-ee0c-41ff-b6a5-92c551e15ac2"],
Cell[CellGroupData[{
Cell[5654, 173, 632, 18, 38, "UsageInputs",ExpressionUUID->"4b516c30-3d2d-4a04-90c4-5db264782374"],
Cell[6289, 193, 192, 6, 39, "UsageDescription",ExpressionUUID->"f149a744-0351-443a-93fe-cefb2e58eb13"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6518, 204, 1045, 30, 140, "PrimaryExamplesSection",ExpressionUUID->"b48e88d7-9284-45dc-a27a-d9dcff0425b3"],
Cell[7566, 236, 1703, 54, 37, "Notes",ExpressionUUID->"e2957b46-1c32-42b2-bf64-0863a82dd485",
 CellTags->"TabNext",
 CellID->327146569],
Cell[9272, 292, 206, 5, 57, "Notes",ExpressionUUID->"85d52e0b-9998-41c0-a83b-68586a8ad382",
 CellID->480484902],
Cell[9481, 299, 112, 2, 36, "Notes",ExpressionUUID->"511d96c2-b57b-4e10-a442-3ea75b03d7d0",
 CellID->663943007],
Cell[9596, 303, 1236, 38, 37, "Notes",ExpressionUUID->"886f81c5-24b6-4ec4-9b17-7452d2bc02ec",
 CellTags->"TabNext",
 CellID->161246186],
Cell[10835, 343, 3867, 104, 100, "TableNotes",ExpressionUUID->"b0a6039c-b040-4256-abd2-43e39d5c0e3e",
 CellID->719182970]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection", "NotesSection"}, Closed]]]],
Cell[14839, 453, 333, 10, 14, "PageDelimiter",ExpressionUUID->"e025abec-d434-40e9-bc23-07db38b43ef8",
 Evaluatable->False,
 CellGroupingRules->{"SectionGrouping", 30}],
Cell[CellGroupData[{
Cell[15197, 467, 1211, 35, 60, "PrimaryExamplesSection",ExpressionUUID->"07306e38-8bbc-4020-9f84-ae4b878ddf46"],
Cell[CellGroupData[{
Cell[16433, 506, 1199, 35, 32, "ExampleSection",ExpressionUUID->"bc22284e-e28a-450f-bc45-c139cb338338"],
Cell[17635, 543, 226, 4, 38, "ExampleText",ExpressionUUID->"a8db69fe-dc70-4264-9abf-7dc553b129b8",
 CellID->13078159],
Cell[CellGroupData[{
Cell[17886, 551, 521, 12, 51, "Input",ExpressionUUID->"2e6602f5-8b6b-4bc7-83a5-51c403529368",
 CellID->443871870],
Cell[18410, 565, 4104, 104, 125, "Output",ExpressionUUID->"b0004b0b-0eeb-4e26-90fa-f1da5b488ebb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22551, 674, 144, 4, 14, "ExampleDelimiter",ExpressionUUID->"91b76ec8-5d63-4cdb-a094-22234c08ead2",
 CellID->102763253],
Cell[22698, 680, 271, 7, 38, "ExampleText",ExpressionUUID->"b57f024c-07dc-4682-8b7e-04df9d786d1b",
 CellID->952846062],
Cell[CellGroupData[{
Cell[22994, 691, 603, 14, 29, "Input",ExpressionUUID->"1463e8c1-c8d5-45eb-bfb2-258fd46765f1",
 CellID->472033757],
Cell[23600, 707, 3833, 99, 125, "Output",ExpressionUUID->"e30ccdd1-b9fa-4e4a-9cce-c038a4b494d1"]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "03e8d5c187d5aeb3"}, Open]]]],
Cell[CellGroupData[{
Cell[27607, 815, 1193, 35, 32, "ExampleSection",ExpressionUUID->"ceb33a6a-eb19-412d-b51c-b2e6bac8cee6"],
Cell[28803, 852, 160, 3, 70, "ExampleText",ExpressionUUID->"d5e627ca-d602-4cdc-8f44-1b3ec5e08371",
 CellID->649685796],
Cell[CellGroupData[{
Cell[28988, 859, 754, 19, 70, "Input",ExpressionUUID->"463b3f9d-a1d7-4005-b056-469a7c781979",
 CellID->372102221],
Cell[29745, 880, 4270, 99, 70, "Output",ExpressionUUID->"b4e601dc-39f4-472b-b98e-d014cafe0112",
 CellID->216899941]
}, Open  ]],
Cell[CellGroupData[{
Cell[34052, 984, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"7a207236-d392-4589-91de-2d365bcf0e5c",
 CellID->1183716345],
Cell[34200, 990, 327, 7, 70, "ExampleText",ExpressionUUID->"8f5ad62d-0a57-4017-821c-c9824d34c5bb",
 CellID->1842983899],
Cell[CellGroupData[{
Cell[34552, 1001, 854, 22, 70, "Input",ExpressionUUID->"2cce8a6f-b28f-438d-bf44-7c8d3ec3f9e3",
 CellID->337883473],
Cell[35409, 1025, 2924, 69, 70, "Output",ExpressionUUID->"4f7bd267-51df-41fa-ac19-1f9a0d811272",
 CellID->1157559428]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38382, 1100, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"eb126806-e092-4d3e-8d8d-63509715c516",
 CellID->188525221],
Cell[38529, 1106, 916, 27, 70, "ExampleText",ExpressionUUID->"19da9ed6-8012-4918-92a0-14e97b6bce16",
 CellID->1005010022],
Cell[39448, 1135, 36160, 649, 70, "Input",ExpressionUUID->"c2ee0a12-1421-4674-b250-60bd7c45655d",
 CellID->1492230192],
Cell[CellGroupData[{
Cell[75633, 1788, 314, 7, 70, "Input",ExpressionUUID->"ed41e0ed-128d-4413-82ac-59d11d88cdb9",
 CellID->776618488],
Cell[75950, 1797, 2923, 72, 70, "Output",ExpressionUUID->"1d55ca23-da62-4b9e-b814-3a1da350a80d",
 CellID->1046948223]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78922, 1875, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"56b20131-fdf6-49a4-b6e6-c0cb0f385100",
 CellID->704258874],
Cell[79069, 1881, 211, 4, 70, "ExampleText",ExpressionUUID->"94bd7beb-9081-4441-90db-a968c117c9e0",
 CellID->1696516701],
Cell[CellGroupData[{
Cell[79305, 1889, 559, 17, 70, "Input",ExpressionUUID->"84cfc35b-1086-444d-ad41-8c37b3731e7c",
 CellID->289031482],
Cell[79867, 1908, 2291, 58, 70, "Output",ExpressionUUID->"d6874ff7-83e2-4f7b-a354-e56424cc5a4d",
 CellID->1725264090]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "1277aee6b59b6d14"}, Closed]]]],
Cell[CellGroupData[{
Cell[82334, 1975, 1195, 35, 26, "ExampleSection",ExpressionUUID->"814c3fa6-da93-44e4-9566-5524618d7e97"],
Cell[CellGroupData[{
Cell[83554, 2014, 1029, 31, 70, "ExampleSubsection",ExpressionUUID->"97b1badb-9ad3-47ee-9926-368a76ec462d"],
Cell[84586, 2047, 251, 7, 70, "ExampleText",ExpressionUUID->"2b1891fc-331d-4680-ab69-a3d35dd994ca",
 CellID->683659726],
Cell[CellGroupData[{
Cell[84862, 2058, 1489, 41, 70, "Input",ExpressionUUID->"89a7cee0-2648-4052-8c7f-3e91ee3ba2d2",
 CellID->1227868139],
Cell[86354, 2101, 16953, 418, 70, "Output",ExpressionUUID->"c66a39a4-1f39-4582-a24b-8cbe93eba514",
 CellID->1189358836]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "36e0da479a37bebf"}, Closed]]]],
Cell[CellGroupData[{
Cell[103477, 2528, 1029, 31, 70, "ExampleSubsection",ExpressionUUID->"215b6622-3df3-4f00-80c8-9a679c265dd3"],
Cell[104509, 2561, 225, 6, 70, "ExampleText",ExpressionUUID->"51ded5e9-3220-4306-b9d3-33a0b62b3afd",
 CellID->391315650],
Cell[CellGroupData[{
Cell[104759, 2571, 2489, 62, 70, "Input",ExpressionUUID->"344889e0-1bbf-4c59-9349-ac9373f71dd5",
 CellID->1741369494],
Cell[107251, 2635, 14518, 352, 70, "Output",ExpressionUUID->"debc7c3b-4df2-4715-acb4-9d2080f96778",
 CellID->776170376]
}, Open  ]],
Cell[CellGroupData[{
Cell[121806, 2992, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"113db03b-2a70-491a-a684-c1c0970faf58",
 CellID->1542193325],
Cell[121954, 2998, 1336, 40, 70, "ExampleText",ExpressionUUID->"d87727e4-64a0-46b4-8548-23a358425110",
 CellID->630112352],
Cell[CellGroupData[{
Cell[123315, 3042, 610, 17, 70, "Input",ExpressionUUID->"741b5f8d-ee50-4e64-bf44-8b05d38eda2f",
 CellID->2020172076],
Cell[123928, 3061, 2795, 65, 70, "Output",ExpressionUUID->"dcd05f98-7554-440e-8144-deaa73fd7320",
 CellID->1279837554]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "4bccc149f4006fd5"}, Closed]]]],
Cell[CellGroupData[{
Cell[126905, 3136, 1028, 31, 70, "ExampleSubsection",ExpressionUUID->"8e88416d-377a-4eb9-87b3-fa9328304347"],
Cell[127936, 3169, 882, 27, 70, "ExampleText",ExpressionUUID->"32a1f2fd-2378-4127-993b-f182e70721fe",
 CellID->515436640],
Cell[CellGroupData[{
Cell[128843, 3200, 724, 19, 70, "Input",ExpressionUUID->"2fd5d0bc-fbe2-49af-8024-60a321e1d1a0",
 CellID->1116698873],
Cell[129570, 3221, 2340, 59, 70, "Output",ExpressionUUID->"f8be80e1-61b1-4ec0-ad56-9ae43903ffa5",
 CellID->1033561726]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSubsection", "38844047fdec386d"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "5ad5bf9da7e59e74"}, Closed]]]],
Cell[CellGroupData[{
Cell[132204, 3291, 1200, 35, 26, "ExampleSection",ExpressionUUID->"8a28e32a-0bb7-44fe-aba3-302d18c2bebb"],
Cell[133407, 3328, 261, 6, 70, "ExampleText",ExpressionUUID->"c8d11aa2-12cf-4163-bdce-4b96435a99d9",
 CellID->1681798401],
Cell[CellGroupData[{
Cell[133693, 3338, 1028, 31, 70, "Input",ExpressionUUID->"38657abf-5348-4fdf-8a3c-74b0d5b66152",
 CellID->105202145],
Cell[134724, 3371, 3533, 83, 70, "Output",ExpressionUUID->"86eb77b4-e140-4134-b2b3-203d4f7d7113",
 CellID->76708299]
}, Open  ]],
Cell[CellGroupData[{
Cell[138294, 3459, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"f23311ff-3ab2-4575-a115-e83860c06615",
 CellID->1354911622],
Cell[138442, 3465, 1314, 38, 70, "ExampleText",ExpressionUUID->"becb29b0-52d7-45f5-af21-d3d391fddbd8",
 CellID->1864729949],
Cell[139759, 3505, 764, 22, 70, "Input",ExpressionUUID->"ef593ba3-fd53-4b08-bed2-ab33ebc3017e",
 CellID->1399351295],
Cell[CellGroupData[{
Cell[140548, 3531, 346, 8, 70, "Input",ExpressionUUID->"d1466d2a-ffb9-4738-aedb-0ebf92e60821",
 CellID->1905569059],
Cell[140897, 3541, 3976, 114, 70, "Output",ExpressionUUID->"d711e2cc-1e4b-46b1-af0c-5b61ed49bee5",
 CellID->746193093]
}, Open  ]],
Cell[CellGroupData[{
Cell[144910, 3660, 473, 12, 70, "Input",ExpressionUUID->"4e2114a3-e96a-4f38-84db-2eca97b14a31",
 CellID->444466284],
Cell[145386, 3674, 3446, 86, 70, "Output",ExpressionUUID->"e4676ceb-b1ff-48e9-99c4-ff1f440ed9ad",
 CellID->2110299218]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[148881, 3766, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"d282afad-aa06-482f-a40f-4b905c5de7d3",
 CellID->146385397],
Cell[149028, 3772, 168, 3, 70, "ExampleText",ExpressionUUID->"eb80ca32-c60f-4d29-af3b-6719a8f58204",
 CellID->1430591564],
Cell[CellGroupData[{
Cell[149221, 3779, 764, 21, 70, "Input",ExpressionUUID->"efeff2f7-e93d-4b17-aefe-ac349fcf303d",
 CellID->1228286363],
Cell[149988, 3802, 111907, 1842, 70, "Output",ExpressionUUID->"3b670e26-6596-4ae9-ba2f-b0a049b26328",
 CellID->328073772]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "5572c38e48502487"}, Closed]]]],
Cell[CellGroupData[{
Cell[262071, 5653, 1212, 35, 26, "ExampleSection",ExpressionUUID->"227e1f77-26f6-4257-b599-5307043cf44e"],
Cell[263286, 5690, 1839, 58, 70, "ExampleText",ExpressionUUID->"6760da05-e904-4151-b857-1170f11cef5b",
 CellID->1367033750],
Cell[265128, 5750, 703, 18, 70, "Input",ExpressionUUID->"84546fa4-f910-401e-a76b-8d17b043c36d",
 CellID->614829983],
Cell[CellGroupData[{
Cell[265856, 5772, 449, 12, 70, "Input",ExpressionUUID->"818c881f-4ca8-41eb-8216-8f2e866b6acc",
 CellID->1926719825],
Cell[266308, 5786, 2437, 62, 70, "Output",ExpressionUUID->"ae4945f4-2d32-4c01-8cf6-42dbc411027f",
 CellID->979195405]
}, Open  ]],
Cell[CellGroupData[{
Cell[268782, 5853, 485, 12, 70, "Input",ExpressionUUID->"d991b702-889a-49b9-a2f8-5123b40cb302",
 CellID->1896506156],
Cell[269270, 5867, 1487, 42, 70, "Output",ExpressionUUID->"0ba633cd-ac1c-4dfb-87b0-7aef1c355a0c",
 CellID->1169984874]
}, Open  ]],
Cell[270772, 5912, 975, 26, 70, "ExampleText",ExpressionUUID->"a207f711-9290-4d2d-b80f-d07c9fec644c",
 CellID->688803974],
Cell[CellGroupData[{
Cell[271772, 5942, 943, 27, 70, "Input",ExpressionUUID->"2f2adcc2-87d0-4c7c-9c9f-92ba51b2bdba",
 CellID->1799939294],
Cell[272718, 5971, 838, 20, 70, "Output",ExpressionUUID->"1ed9b174-25b3-4db6-8856-1fb4d4cb07ef",
 CellID->1575505386]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "72bc4566351d4678"}, Closed]]]],
Cell[CellGroupData[{
Cell[273720, 5999, 1203, 35, 26, "ExampleSection",ExpressionUUID->"ff2a0506-8ee1-44df-b4e4-9c29bb988bf4"],
Cell[274926, 6036, 404, 10, 70, "ExampleText",ExpressionUUID->"8170660f-57f4-4e64-977b-4ea8cdcdb347",
 CellID->362505278],
Cell[CellGroupData[{
Cell[275355, 6050, 796, 21, 70, "Input",ExpressionUUID->"86fd60af-b636-4b1a-a302-a25355338d65",
 CellID->156936131],
Cell[276154, 6073, 6024, 148, 70, "Output",ExpressionUUID->"277e1f10-e319-4b1b-803a-d59635855461",
 CellID->1045654992]
}, Open  ]],
Cell[CellGroupData[{
Cell[282215, 6226, 145, 4, 70, "ExampleDelimiter",ExpressionUUID->"3c9031da-97d9-4a8c-95e0-57c8177dc9fe",
 CellID->1639461050],
Cell[282363, 6232, 235, 4, 70, "ExampleText",ExpressionUUID->"8d38100b-108d-4100-a3ac-b7152341bb9e",
 CellID->112395677],
Cell[CellGroupData[{
Cell[282623, 6240, 709, 19, 70, "Input",ExpressionUUID->"4e1ee19f-7fbf-49a8-af03-5b1784efaed8",
 CellID->124037520],
Cell[283335, 6261, 2934, 67, 70, "Output",ExpressionUUID->"da59993f-5dc8-4b91-8612-f42b506a8b86",
 CellID->1464767143]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[286318, 6334, 144, 4, 70, "ExampleDelimiter",ExpressionUUID->"71b8d9a1-8a88-462f-94f4-eefe8d5a86cf",
 CellID->680236658],
Cell[286465, 6340, 392, 9, 70, "ExampleText",ExpressionUUID->"deb1406b-810d-4674-93c9-bbc3cd1e8c57",
 CellID->1682058025],
Cell[CellGroupData[{
Cell[286882, 6353, 739, 19, 70, "Input",ExpressionUUID->"ff90ec83-ea74-4905-bf7f-9ffd15a79c9e",
 CellID->1490278681],
Cell[287624, 6374, 3201, 78, 70, "Output",ExpressionUUID->"552329cf-a4ba-49d4-9c68-88f935dbf661",
 CellID->1736326840]
}, Open  ]],
Cell[CellGroupData[{
Cell[290862, 6457, 414, 10, 70, "Input",ExpressionUUID->"af7308a0-3404-439d-a8c1-f751415fd820",
 CellID->1549422317],
Cell[291279, 6469, 2996, 75, 70, "Output",ExpressionUUID->"2d8cecb1-620a-44a1-bb29-c9a03fe5e006",
 CellID->289920797]
}, Open  ]]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "794ec000bd35f2d8"}, Closed]]]],
Cell[CellGroupData[{
Cell[294451, 6553, 1201, 35, 26, "ExampleSection",ExpressionUUID->"4a83ff21-c875-41a3-88c4-044ff6df9455"],
Cell[295655, 6590, 921, 26, 70, "ExampleText",ExpressionUUID->"c54bb604-29a3-465d-acb1-bad71a56e676",
 CellID->1027100926],
Cell[CellGroupData[{
Cell[296601, 6620, 1000, 25, 70, "Input",ExpressionUUID->"2ba2f17d-14f3-489b-9ffc-1400a59f7cd2",
 CellID->808954176],
Cell[297604, 6647, 19302, 411, 70, "Output",ExpressionUUID->"85697be3-4a2f-4a2a-bc8d-b4dd819aa2e3",
 CellID->58440136]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0e781f71d141eda7"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection", "77ee9129cd444e2b"}, Open]]]],
Cell[CellGroupData[{
Cell[317206, 7070, 1063, 30, 60, "PrimaryExamplesSection",ExpressionUUID->"48d83a67-b4f0-4537-a6e6-a7486b901e83"],
Cell[318272, 7102, 544, 17, 70, "Text",ExpressionUUID->"b7ca65bf-3053-4a68-9862-a50873a03481"],
Cell[CellGroupData[{
Cell[318841, 7123, 152, 4, 70, "Input",ExpressionUUID->"ab79d7a4-020e-4f3a-a42a-4480ae54a52d"],
Cell[318996, 7129, 17144, 323, 70, "Output",ExpressionUUID->"981b7de6-61b7-44b3-b101-49b747611218"]
}, Open  ]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection", "14181d5d246bbbf7"}, Closed]]]],
Cell[CellGroupData[{
Cell[336315, 7461, 37, 0, 73, "MetadataSection",ExpressionUUID->"fcdc0958-95e7-41d0-b41c-1adfbf780427"],
Cell[336355, 7463, 236, 6, 26, "MetadataItem",ExpressionUUID->"c982f7da-3cb4-478f-9d08-63eeb02e13d4"],
Cell[336594, 7471, 218, 6, 26, "MetadataItem",ExpressionUUID->"cdba8b66-8604-4c71-ab41-54f6ec5cc5c0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336849, 7482, 35, 0, 73, "MetadataSection",ExpressionUUID->"13a5b2bf-32bf-4738-9f9f-85f844575237"],
Cell[336887, 7484, 178, 5, 26, "MetadataItem",ExpressionUUID->"1cb55222-6fed-4a8c-adfe-a8a13caac2f6"],
Cell[337068, 7491, 192, 6, 26, "MetadataItem",ExpressionUUID->"877f4402-8cba-4a84-9ba1-d8ee179b0743"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337297, 7502, 42, 0, 73, "MetadataSection",ExpressionUUID->"81a66021-42f4-4fdb-b1f0-9a3fc40eb49a"],
Cell[337342, 7504, 780, 24, 26, "SeeAlso",ExpressionUUID->"ebd10bb4-885e-483f-8afb-40344bb3e482"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338159, 7533, 44, 0, 73, "MetadataSection",ExpressionUUID->"ef20071c-0f7d-41a6-87d9-075f636310d0"],
Cell[338206, 7535, 1046, 33, 26, "SeeAlso",ExpressionUUID->"40f759f9-b0b3-423e-b7a5-6fb929936257"]
}, Open  ]]
}
]
*)

